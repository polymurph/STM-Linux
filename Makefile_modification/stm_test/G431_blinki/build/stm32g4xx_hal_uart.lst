ARM GAS  /tmp/cc5hFHZt.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB178:
  26              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @file    stm32g4xx_hal_uart.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   [..]
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
ARM GAS  /tmp/cc5hFHZt.s 			page 2


  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         the HAL_UART_Init() API.
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ##### Callback registration #####
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ==================================
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
ARM GAS  /tmp/cc5hFHZt.s 			page 3


  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and a pointer to the user callback function.
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     weak (surcharged) function.
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and the Callback ID.
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This function allows to reset following callbacks:
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   @endverbatim
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @attention
 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
ARM GAS  /tmp/cc5hFHZt.s 			page 4


 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #include "stm32g4xx_hal.h"
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @addtogroup STM32G4xx_HAL_Driver
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART UART
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief HAL UART module driver
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cc5hFHZt.s 			page 5


 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** ===============================================================================
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in asynchronous mode.
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Baud Rate
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Word Length
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Stop Bit
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Hardware flow control
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Over Sampling Method
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) data logical level inversion
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) RX and TX pins swap
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) RX overrun detection disabling
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) DMA disabling on RX error
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) MSB first on communication line
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) auto Baud rate detection
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
ARM GAS  /tmp/cc5hFHZt.s 			page 6


 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     are available in reference manual).
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   following table.
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   Table 1. UART frame format.
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check the parameters */
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check the parameters */
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
ARM GAS  /tmp/cc5hFHZt.s 			page 7


 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
ARM GAS  /tmp/cc5hFHZt.s 			page 8


 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check UART instance */
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  /tmp/cc5hFHZt.s 			page 9


 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart             UART handle.
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the LIN UART instance */
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 10


 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart        UART handle.
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
ARM GAS  /tmp/cc5hFHZt.s 			page 11


 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the wake up method parameter */
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 12


 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DeInit the low level hardware */
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DeInit the low level hardware */
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc5hFHZt.s 			page 13


 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart uart handle
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (pCallback == NULL)
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 14


 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 15


 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     status =  HAL_ERROR;
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return status;
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart uart handle
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
ARM GAS  /tmp/cc5hFHZt.s 			page 16


 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
ARM GAS  /tmp/cc5hFHZt.s 			page 17


 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     status =  HAL_ERROR;
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return status;
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
ARM GAS  /tmp/cc5hFHZt.s 			page 18


 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                       ##### IO operation functions #####
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and Half duplex data transfers.
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) There are two mode of transfer:
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            after finishing transfer.
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            using DMA mode.
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Blocking mode API's are :
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
ARM GAS  /tmp/cc5hFHZt.s 			page 19


1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         Errors are handled as follows :
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            in Interrupt mode reception .
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            user callback is executed.
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart   UART handle.
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *pdata16bits;
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return  HAL_ERROR;
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init tickstart for timeout management */
ARM GAS  /tmp/cc5hFHZt.s 			page 20


1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = NULL;
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = pData;
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = NULL;
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (pdata8bits == NULL)
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
ARM GAS  /tmp/cc5hFHZt.s 			page 21


1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart   UART handle.
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *pdata16bits;
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask;
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return  HAL_ERROR;
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = NULL;
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = pData;
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = NULL;
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* as long as data have to be received */
ARM GAS  /tmp/cc5hFHZt.s 			page 22


1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (pdata8bits == NULL)
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR       = NULL;
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 23


1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc5hFHZt.s 			page 24


1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxISR       = NULL;
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 25


1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA error callback */
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA abort callback */
1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 26


1401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Set error code to DMA */
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_ERROR;
1413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in the UART CR3 register */
1422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the parity bit (MSB position).
1436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize = Size;
ARM GAS  /tmp/cc5hFHZt.s 			page 27


1458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA error callback */
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
1472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA abort callback */
1474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the DMA channel */
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Set error code to DMA */
1480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_ERROR;
1488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in the UART CR3 register */
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc5hFHZt.s 			page 28


1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
1521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/cc5hFHZt.s 			page 29


1572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
ARM GAS  /tmp/cc5hFHZt.s 			page 30


1629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                    USART_CR1_TCIE));
1661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
ARM GAS  /tmp/cc5hFHZt.s 			page 31


1686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
1727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
ARM GAS  /tmp/cc5hFHZt.s 			page 32


1743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
ARM GAS  /tmp/cc5hFHZt.s 			page 33


1800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cc5hFHZt.s 			page 34


1857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE |
1874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                    USART_CR1_TXEIE_TXFNFIE));
1875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      before any call to DMA Abort functions */
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        Otherwise, set it to NULL */
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        Otherwise, set it to NULL */
1898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 35


1914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA TX */
1921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 0U;
1928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA RX */
1944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 1U;
1948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 0U;
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (abortcplt == 1U)
1958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
1962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear ISR function pointers */
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxISR = NULL;
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR = NULL;
1966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset errorCode */
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
ARM GAS  /tmp/cc5hFHZt.s 			page 36


1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Discard the received data */
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
1991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
2004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
2016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
ARM GAS  /tmp/cc5hFHZt.s 			page 37


2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA TX */
2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount = 0U;
2042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxISR = NULL;
2045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR = NULL;
2066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
ARM GAS  /tmp/cc5hFHZt.s 			page 38


2085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
2094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
2098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA RX */
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount = 0U;
2132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Discard the received data */
2140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 39


2142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t errorflags;
2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t errorcode;
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If no error occurs */
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (errorflags == 0U)
ARM GAS  /tmp/cc5hFHZt.s 			page 40


2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxISR != NULL)
2206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR(huart);
2208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If some errors occur */
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((errorflags != 0U)
2215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
ARM GAS  /tmp/cc5hFHZt.s 			page 41


2256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (huart->RxISR != NULL)
2269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxISR(huart);
2271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           - Receiver Timeout error in Reception
2276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           - Overrun error in Reception
2277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           - any error occurs in DMA mode reception
2278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       */
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Abort DMA RX */
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             {
2303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             }
2306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
2307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           else
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
2309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Call user error callback */
2310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /*Call registered error callback*/
2312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             huart->ErrorCallback(huart);
ARM GAS  /tmp/cc5hFHZt.s 			page 42


2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
2319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         else
2321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Call user error callback */
2323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call registered error callback*/
2325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Error is notified to user through user error callback */
2336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered error callback*/
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   } /* End if some error occurs */
2349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
ARM GAS  /tmp/cc5hFHZt.s 			page 43


2370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxISR != NULL)
2374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxISR(huart);
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
ARM GAS  /tmp/cc5hFHZt.s 			page 44


2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART error callback.
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 45


2484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief   UART control functions
2540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
ARM GAS  /tmp/cc5hFHZt.s 			page 46


2541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
2543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
2545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
2560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Locked */
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_LOCK(huart);
2594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the USART RTOEN bit */
ARM GAS  /tmp/cc5hFHZt.s 			page 47


2598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Unlocked */
2603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_OK;
2606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_BUSY;
2610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
2615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Locked */
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_LOCK(huart);
2632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Unlocked */
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_OK;
2644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_BUSY;
2648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  /tmp/cc5hFHZt.s 			page 48


2655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc5hFHZt.s 			page 49


2712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear TE and RE bits */
2718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status.
2734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear TE and RE bits */
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Transmit break characters.
2756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Send break characters */
ARM GAS  /tmp/cc5hFHZt.s 			page 50


2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
2785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
2786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ==============================================================================
2787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ==============================================================================
2789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides functions allowing to :
2791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) Return the UART handle state.
2792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) Return the UART handle error code
2793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
2795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Return the UART handle state.
2800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL state
2803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp1;
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp2;
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp1 = huart->gState;
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp2 = huart->RxState;
2810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval UART Error Code
2819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return huart->ErrorCode;
2823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
ARM GAS  /tmp/cc5hFHZt.s 			page 51


2826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval none
2840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Init the UART Callback settings */
2845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tmpreg;
2868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t brrtemp;
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t usartdiv;
2871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
2873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t pclk;
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
ARM GAS  /tmp/cc5hFHZt.s 			page 52


2883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * to huart->Init.StopBits value */
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure
2912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure
2926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check LPUART instance */
2933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Retrieve frequency clock */
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
2937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
ARM GAS  /tmp/cc5hFHZt.s 			page 53


2940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
2949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
2951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = 0U;
2952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
2953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* If proper clock source reported */
2957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (pclk != 0U)
2958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Compute clock after Prescaler */
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
2961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
2964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
2965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
2967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
2969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
2971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
2972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescale
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
2974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
2976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         else
2978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ret = HAL_ERROR;
2980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
2982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
2983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     } /* if (pclk != 0) */
2984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
2989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
2992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
2995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
ARM GAS  /tmp/cc5hFHZt.s 			page 54


2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
2998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
3006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = 0U;
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (pclk != 0U)
3013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
3015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
3020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
3030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = 0U;
3048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (pclk != 0U)
3053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
ARM GAS  /tmp/cc5hFHZt.s 			page 55


3054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->BRR = usartdiv;
3059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear ISR function pointers */
3072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxISR = NULL;
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
3074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return ret;
3076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure data inversion */
3103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
ARM GAS  /tmp/cc5hFHZt.s 			page 56


3111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
3160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Init tickstart for timeout management */
3165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tickstart = HAL_GetTick();
3166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
ARM GAS  /tmp/cc5hFHZt.s 			page 57


3168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Timeout occurred */
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
3175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Timeout occurred */
3185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the UART State */
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart     UART handle.
3201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Tickstart Tick start value
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Wait until flag is set */
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check for the Timeout */
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            interrupts for the interrupt process */
3220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/cc5hFHZt.s 			page 58


3225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
3229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
3235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              interrupts for the interrupt process */
3240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TX
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Process Unlocked */
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
3251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
3252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
3262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
  27              		.loc 1 3265 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
3266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
  33              		.loc 1 3267 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 1368     		ldr	r3, [r2]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 1360     		str	r3, [r2]
3268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
  38              		.loc 1 3268 0
  39 000a 0268     		ldr	r2, [r0]
ARM GAS  /tmp/cc5hFHZt.s 			page 59


  40 000c 9368     		ldr	r3, [r2, #8]
  41 000e 23F40003 		bic	r3, r3, #8388608
  42 0012 9360     		str	r3, [r2, #8]
3269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  43              		.loc 1 3271 0
  44 0014 2023     		movs	r3, #32
  45 0016 C0F88030 		str	r3, [r0, #128]
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
  46              		.loc 1 3272 0
  47 001a 7047     		bx	lr
  48              		.cfi_endproc
  49              	.LFE178:
  51              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  52              		.align	1
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu fpv4-sp-d16
  58              	UART_EndRxTransfer:
  59              	.LFB179:
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
3278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
  60              		.loc 1 3281 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65              	.LVL1:
3282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
  66              		.loc 1 3283 0
  67 0000 0268     		ldr	r2, [r0]
  68 0002 1368     		ldr	r3, [r2]
  69 0004 23F49073 		bic	r3, r3, #288
  70 0008 1360     		str	r3, [r2]
3284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
  71              		.loc 1 3284 0
  72 000a 0268     		ldr	r2, [r0]
  73 000c 9368     		ldr	r3, [r2, #8]
  74 000e 23F08053 		bic	r3, r3, #268435456
  75 0012 23F00103 		bic	r3, r3, #1
  76 0016 9360     		str	r3, [r2, #8]
3285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  77              		.loc 1 3287 0
  78 0018 2023     		movs	r3, #32
  79 001a C0F88430 		str	r3, [r0, #132]
ARM GAS  /tmp/cc5hFHZt.s 			page 60


3288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxISR = NULL;
  80              		.loc 1 3290 0
  81 001e 0023     		movs	r3, #0
  82 0020 C366     		str	r3, [r0, #108]
3291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
  83              		.loc 1 3291 0
  84 0022 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE179:
  88              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  89              		.align	1
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	UART_TxISR_8BIT:
  96              	.LFB190:
3292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Normal mode */
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        in the UART CR3 register */
3310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Circular mode */
3316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
ARM GAS  /tmp/cc5hFHZt.s 			page 61


3330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Normal mode */
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        in the UART CR3 register */
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/cc5hFHZt.s 			page 62


3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered error callback*/
3431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc5hFHZt.s 			page 63


3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered error callback*/
3452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
3479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset errorCode */
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/cc5hFHZt.s 			page 64


3501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset errorCode */
3541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
ARM GAS  /tmp/cc5hFHZt.s 			page 65


3558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
ARM GAS  /tmp/cc5hFHZt.s 			page 66


3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
3632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
  97              		.loc 1 3638 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.LVL2:
3639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 103              		.loc 1 3640 0
 104 0000 D0F88030 		ldr	r3, [r0, #128]
 105 0004 212B     		cmp	r3, #33
 106 0006 00D0     		beq	.L6
 107              	.L3:
3641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
3651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
3654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
3655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 108              		.loc 1 3657 0
 109 0008 7047     		bx	lr
 110              	.L6:
ARM GAS  /tmp/cc5hFHZt.s 			page 67


3642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 111              		.loc 1 3642 0
 112 000a B0F85630 		ldrh	r3, [r0, #86]
 113 000e 9BB2     		uxth	r3, r3
 114 0010 6BB1     		cbz	r3, .L7
3652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 115              		.loc 1 3652 0
 116 0012 036D     		ldr	r3, [r0, #80]
 117 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 118 0016 0368     		ldr	r3, [r0]
 119 0018 9A62     		str	r2, [r3, #40]
3653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
 120              		.loc 1 3653 0
 121 001a 036D     		ldr	r3, [r0, #80]
 122 001c 0133     		adds	r3, r3, #1
 123 001e 0365     		str	r3, [r0, #80]
3654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 124              		.loc 1 3654 0
 125 0020 B0F85630 		ldrh	r3, [r0, #86]
 126 0024 013B     		subs	r3, r3, #1
 127 0026 9BB2     		uxth	r3, r3
 128 0028 A0F85630 		strh	r3, [r0, #86]	@ movhi
 129              		.loc 1 3657 0
 130 002c ECE7     		b	.L3
 131              	.L7:
3645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 132              		.loc 1 3645 0
 133 002e 0268     		ldr	r2, [r0]
 134 0030 1368     		ldr	r3, [r2]
 135 0032 23F08003 		bic	r3, r3, #128
 136 0036 1360     		str	r3, [r2]
3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 137              		.loc 1 3648 0
 138 0038 0268     		ldr	r2, [r0]
 139 003a 1368     		ldr	r3, [r2]
 140 003c 43F04003 		orr	r3, r3, #64
 141 0040 1360     		str	r3, [r2]
 142 0042 7047     		bx	lr
 143              		.cfi_endproc
 144              	.LFE190:
 146              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 147              		.align	1
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv4-sp-d16
 153              	UART_TxISR_16BIT:
 154              	.LFB191:
3658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
3661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc5hFHZt.s 			page 68


3667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 155              		.loc 1 3667 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL3:
3668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 161              		.loc 1 3671 0
 162 0000 D0F88030 		ldr	r3, [r0, #128]
 163 0004 212B     		cmp	r3, #33
 164 0006 00D0     		beq	.L11
 165              	.L8:
3672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
3682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
3687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 166              		.loc 1 3689 0
 167 0008 7047     		bx	lr
 168              	.L11:
3673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 169              		.loc 1 3673 0
 170 000a B0F85630 		ldrh	r3, [r0, #86]
 171 000e 9BB2     		uxth	r3, r3
 172 0010 7BB1     		cbz	r3, .L12
3683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 173              		.loc 1 3683 0
 174 0012 036D     		ldr	r3, [r0, #80]
 175              	.LVL4:
3684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 176              		.loc 1 3684 0
 177 0014 1B88     		ldrh	r3, [r3]
 178              	.LVL5:
 179 0016 0268     		ldr	r2, [r0]
 180 0018 C3F30803 		ubfx	r3, r3, #0, #9
 181 001c 9362     		str	r3, [r2, #40]
 182              	.LVL6:
3685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
 183              		.loc 1 3685 0
 184 001e 036D     		ldr	r3, [r0, #80]
ARM GAS  /tmp/cc5hFHZt.s 			page 69


 185 0020 0233     		adds	r3, r3, #2
 186 0022 0365     		str	r3, [r0, #80]
3686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 187              		.loc 1 3686 0
 188 0024 B0F85630 		ldrh	r3, [r0, #86]
 189 0028 013B     		subs	r3, r3, #1
 190 002a 9BB2     		uxth	r3, r3
 191 002c A0F85630 		strh	r3, [r0, #86]	@ movhi
 192              		.loc 1 3689 0
 193 0030 EAE7     		b	.L8
 194              	.L12:
3676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 195              		.loc 1 3676 0
 196 0032 0268     		ldr	r2, [r0]
 197 0034 1368     		ldr	r3, [r2]
 198 0036 23F08003 		bic	r3, r3, #128
 199 003a 1360     		str	r3, [r2]
3679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 200              		.loc 1 3679 0
 201 003c 0268     		ldr	r2, [r0]
 202 003e 1368     		ldr	r3, [r2]
 203 0040 43F04003 		orr	r3, r3, #64
 204 0044 1360     		str	r3, [r2]
 205 0046 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE191:
 209              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 210              		.align	1
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	UART_TxISR_8BIT_FIFOEN:
 217              	.LFB192:
3690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 218              		.loc 1 3699 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223              	.LVL7:
3700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 224              		.loc 1 3703 0
 225 0000 D0F88030 		ldr	r3, [r0, #128]
 226 0004 212B     		cmp	r3, #33
ARM GAS  /tmp/cc5hFHZt.s 			page 70


 227 0006 00D0     		beq	.L19
 228              	.L13:
3704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break; /* force exit loop */
3716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
3721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
3722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Nothing to do */
3726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 229              		.loc 1 3729 0
 230 0008 7047     		bx	lr
 231              	.L19:
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 232              		.loc 1 3705 0
 233 000a B0F86A30 		ldrh	r3, [r0, #106]
 234              	.LVL8:
 235 000e 0CE0     		b	.L15
 236              	.L20:
3710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 237              		.loc 1 3710 0
 238 0010 0268     		ldr	r2, [r0]
 239 0012 9368     		ldr	r3, [r2, #8]
 240              	.LVL9:
 241 0014 23F40003 		bic	r3, r3, #8388608
 242 0018 9360     		str	r3, [r2, #8]
3713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 243              		.loc 1 3713 0
 244 001a 0268     		ldr	r2, [r0]
 245 001c 1368     		ldr	r3, [r2]
 246 001e 43F04003 		orr	r3, r3, #64
 247 0022 1360     		str	r3, [r2]
3715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 248              		.loc 1 3715 0
 249 0024 7047     		bx	lr
 250              	.LVL10:
 251              	.L17:
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 252              		.loc 1 3705 0 discriminator 2
ARM GAS  /tmp/cc5hFHZt.s 			page 71


 253 0026 013B     		subs	r3, r3, #1
 254              	.LVL11:
 255 0028 9BB2     		uxth	r3, r3
 256              	.LVL12:
 257              	.L15:
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 258              		.loc 1 3705 0 is_stmt 0 discriminator 1
 259 002a 002B     		cmp	r3, #0
 260 002c ECD0     		beq	.L13
3707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 261              		.loc 1 3707 0 is_stmt 1
 262 002e B0F85620 		ldrh	r2, [r0, #86]
 263 0032 92B2     		uxth	r2, r2
 264 0034 002A     		cmp	r2, #0
 265 0036 EBD0     		beq	.L20
3717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 266              		.loc 1 3717 0
 267 0038 0268     		ldr	r2, [r0]
 268 003a D169     		ldr	r1, [r2, #28]
 269 003c 11F0800F 		tst	r1, #128
 270 0040 F1D0     		beq	.L17
3719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
 271              		.loc 1 3719 0
 272 0042 016D     		ldr	r1, [r0, #80]
 273 0044 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 274 0046 9162     		str	r1, [r2, #40]
3720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
 275              		.loc 1 3720 0
 276 0048 026D     		ldr	r2, [r0, #80]
 277 004a 0132     		adds	r2, r2, #1
 278 004c 0265     		str	r2, [r0, #80]
3721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 279              		.loc 1 3721 0
 280 004e B0F85620 		ldrh	r2, [r0, #86]
 281 0052 013A     		subs	r2, r2, #1
 282 0054 92B2     		uxth	r2, r2
 283 0056 A0F85620 		strh	r2, [r0, #86]	@ movhi
 284 005a E4E7     		b	.L17
 285              		.cfi_endproc
 286              	.LFE192:
 288              		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	UART_TxISR_16BIT_FIFOEN:
 296              	.LFB193:
3730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length and FIFO mode is enabled.
3733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc5hFHZt.s 			page 72


3739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 297              		.loc 1 3739 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302              	.LVL13:
3740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 303              		.loc 1 3744 0
 304 0000 D0F88030 		ldr	r3, [r0, #128]
 305 0004 212B     		cmp	r3, #33
 306 0006 00D0     		beq	.L27
 307              	.L21:
3745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break; /* force exit loop */
3757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
3764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Nothing to do */
3768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 308              		.loc 1 3771 0
 309 0008 7047     		bx	lr
 310              	.L27:
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 311              		.loc 1 3746 0
 312 000a B0F86A30 		ldrh	r3, [r0, #106]
 313              	.LVL14:
 314 000e 0CE0     		b	.L23
 315              	.L28:
3751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 316              		.loc 1 3751 0
 317 0010 0268     		ldr	r2, [r0]
 318 0012 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/cc5hFHZt.s 			page 73


 319              	.LVL15:
 320 0014 23F40003 		bic	r3, r3, #8388608
 321 0018 9360     		str	r3, [r2, #8]
3754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 322              		.loc 1 3754 0
 323 001a 0268     		ldr	r2, [r0]
 324 001c 1368     		ldr	r3, [r2]
 325 001e 43F04003 		orr	r3, r3, #64
 326 0022 1360     		str	r3, [r2]
3756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 327              		.loc 1 3756 0
 328 0024 7047     		bx	lr
 329              	.LVL16:
 330              	.L25:
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 331              		.loc 1 3746 0 discriminator 2
 332 0026 013B     		subs	r3, r3, #1
 333              	.LVL17:
 334 0028 9BB2     		uxth	r3, r3
 335              	.LVL18:
 336              	.L23:
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 337              		.loc 1 3746 0 is_stmt 0 discriminator 1
 338 002a 002B     		cmp	r3, #0
 339 002c ECD0     		beq	.L21
3748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 340              		.loc 1 3748 0 is_stmt 1
 341 002e B0F85620 		ldrh	r2, [r0, #86]
 342 0032 92B2     		uxth	r2, r2
 343 0034 002A     		cmp	r2, #0
 344 0036 EBD0     		beq	.L28
3758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 345              		.loc 1 3758 0
 346 0038 0268     		ldr	r2, [r0]
 347 003a D169     		ldr	r1, [r2, #28]
 348 003c 11F0800F 		tst	r1, #128
 349 0040 F1D0     		beq	.L25
3760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 350              		.loc 1 3760 0
 351 0042 016D     		ldr	r1, [r0, #80]
 352              	.LVL19:
3761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 353              		.loc 1 3761 0
 354 0044 0988     		ldrh	r1, [r1]
 355              	.LVL20:
 356 0046 C1F30801 		ubfx	r1, r1, #0, #9
 357 004a 9162     		str	r1, [r2, #40]
 358              	.LVL21:
3762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
 359              		.loc 1 3762 0
 360 004c 026D     		ldr	r2, [r0, #80]
 361 004e 0232     		adds	r2, r2, #2
 362 0050 0265     		str	r2, [r0, #80]
3763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 363              		.loc 1 3763 0
 364 0052 B0F85620 		ldrh	r2, [r0, #86]
 365 0056 013A     		subs	r2, r2, #1
ARM GAS  /tmp/cc5hFHZt.s 			page 74


 366 0058 92B2     		uxth	r2, r2
 367 005a A0F85620 		strh	r2, [r0, #86]	@ movhi
 368 005e E2E7     		b	.L25
 369              		.cfi_endproc
 370              	.LFE193:
 372              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 373              		.align	1
 374              		.weak	HAL_UART_MspInit
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	HAL_UART_MspInit:
 381              	.LFB137:
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 382              		.loc 1 661 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387              	.LVL22:
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 388              		.loc 1 668 0
 389 0000 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE137:
 393              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 394              		.align	1
 395              		.weak	HAL_UART_MspDeInit
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu fpv4-sp-d16
 401              	HAL_UART_MspDeInit:
 402              	.LFB138:
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 403              		.loc 1 676 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408              	.LVL23:
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 409              		.loc 1 683 0
 410 0000 7047     		bx	lr
 411              		.cfi_endproc
 412              	.LFE138:
 414              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 415              		.align	1
 416              		.global	HAL_UART_DeInit
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 420              		.fpu fpv4-sp-d16
 422              	HAL_UART_DeInit:
 423              	.LFB136:
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /tmp/cc5hFHZt.s 			page 75


 424              		.loc 1 616 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              	.LVL24:
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 429              		.loc 1 618 0
 430 0000 0028     		cmp	r0, #0
 431 0002 36D0     		beq	.L34
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 432              		.loc 1 616 0
 433 0004 38B5     		push	{r3, r4, r5, lr}
 434              	.LCFI0:
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 3, -16
 437              		.cfi_offset 4, -12
 438              		.cfi_offset 5, -8
 439              		.cfi_offset 14, -4
 440 0006 0446     		mov	r4, r0
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 441              		.loc 1 624 0
 442 0008 0368     		ldr	r3, [r0]
 443 000a 1B4A     		ldr	r2, .L39
 444 000c 9342     		cmp	r3, r2
 445 000e 14D0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 446              		.loc 1 624 0 is_stmt 0 discriminator 1
 447 0010 A2F57442 		sub	r2, r2, #62464
 448 0014 9342     		cmp	r3, r2
 449 0016 10D0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 450              		.loc 1 624 0 discriminator 2
 451 0018 02F58062 		add	r2, r2, #1024
 452 001c 9342     		cmp	r3, r2
 453 001e 0CD0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 454              		.loc 1 624 0 discriminator 3
 455 0020 02F58062 		add	r2, r2, #1024
 456 0024 9342     		cmp	r3, r2
 457 0026 08D0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 458              		.loc 1 624 0 discriminator 4
 459 0028 02F55052 		add	r2, r2, #13312
 460 002c 9342     		cmp	r3, r2
 461 002e 04D0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 462              		.loc 1 624 0 discriminator 5
 463 0030 4FF41C71 		mov	r1, #624
 464 0034 1148     		ldr	r0, .L39+4
 465              	.LVL25:
 466 0036 FFF7FEFF 		bl	assert_failed
 467              	.LVL26:
 468              	.L33:
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 469              		.loc 1 626 0 is_stmt 1
 470 003a 2423     		movs	r3, #36
 471 003c C4F88030 		str	r3, [r4, #128]
ARM GAS  /tmp/cc5hFHZt.s 			page 76


 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 472              		.loc 1 628 0
 473 0040 2268     		ldr	r2, [r4]
 474 0042 1368     		ldr	r3, [r2]
 475 0044 23F00103 		bic	r3, r3, #1
 476 0048 1360     		str	r3, [r2]
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 477              		.loc 1 630 0
 478 004a 2368     		ldr	r3, [r4]
 479 004c 0025     		movs	r5, #0
 480 004e 1D60     		str	r5, [r3]
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 481              		.loc 1 631 0
 482 0050 2368     		ldr	r3, [r4]
 483 0052 5D60     		str	r5, [r3, #4]
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 484              		.loc 1 632 0
 485 0054 2368     		ldr	r3, [r4]
 486 0056 9D60     		str	r5, [r3, #8]
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 487              		.loc 1 643 0
 488 0058 2046     		mov	r0, r4
 489 005a FFF7FEFF 		bl	HAL_UART_MspDeInit
 490              	.LVL27:
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 491              		.loc 1 646 0
 492 005e C4F88850 		str	r5, [r4, #136]
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 493              		.loc 1 647 0
 494 0062 C4F88050 		str	r5, [r4, #128]
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 495              		.loc 1 648 0
 496 0066 C4F88450 		str	r5, [r4, #132]
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 497              		.loc 1 650 0
 498 006a 84F87C50 		strb	r5, [r4, #124]
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 499              		.loc 1 652 0
 500 006e 2846     		mov	r0, r5
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 501              		.loc 1 653 0
 502 0070 38BD     		pop	{r3, r4, r5, pc}
 503              	.LVL28:
 504              	.L34:
 505              	.LCFI1:
 506              		.cfi_def_cfa_offset 0
 507              		.cfi_restore 3
 508              		.cfi_restore 4
 509              		.cfi_restore 5
 510              		.cfi_restore 14
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 511              		.loc 1 620 0
 512 0072 0120     		movs	r0, #1
 513              	.LVL29:
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 514              		.loc 1 653 0
 515 0074 7047     		bx	lr
ARM GAS  /tmp/cc5hFHZt.s 			page 77


 516              	.L40:
 517 0076 00BF     		.align	2
 518              	.L39:
 519 0078 00380140 		.word	1073821696
 520 007c 00000000 		.word	.LC0
 521              		.cfi_endproc
 522              	.LFE136:
 524              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 525              		.align	1
 526              		.global	HAL_UART_Transmit_IT
 527              		.syntax unified
 528              		.thumb
 529              		.thumb_func
 530              		.fpu fpv4-sp-d16
 532              	HAL_UART_Transmit_IT:
 533              	.LFB141:
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 534              		.loc 1 1214 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 0
 537              		@ frame_needed = 0, uses_anonymous_args = 0
 538              		@ link register save eliminated.
 539              	.LVL30:
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 540              		.loc 1 1216 0
 541 0000 D0F88030 		ldr	r3, [r0, #128]
 542 0004 202B     		cmp	r3, #32
 543 0006 46D1     		bne	.L48
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 544              		.loc 1 1218 0
 545 0008 0029     		cmp	r1, #0
 546 000a 46D0     		beq	.L49
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 547              		.loc 1 1218 0 is_stmt 0 discriminator 1
 548 000c 002A     		cmp	r2, #0
 549 000e 46D0     		beq	.L50
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 550              		.loc 1 1223 0 is_stmt 1
 551 0010 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 552 0014 012B     		cmp	r3, #1
 553 0016 44D0     		beq	.L51
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 554              		.loc 1 1223 0 is_stmt 0 discriminator 2
 555 0018 0123     		movs	r3, #1
 556 001a 80F87C30 		strb	r3, [r0, #124]
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 557              		.loc 1 1225 0 is_stmt 1 discriminator 2
 558 001e 0165     		str	r1, [r0, #80]
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 559              		.loc 1 1226 0 discriminator 2
 560 0020 A0F85420 		strh	r2, [r0, #84]	@ movhi
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR       = NULL;
 561              		.loc 1 1227 0 discriminator 2
 562 0024 A0F85620 		strh	r2, [r0, #86]	@ movhi
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 563              		.loc 1 1228 0 discriminator 2
 564 0028 0023     		movs	r3, #0
ARM GAS  /tmp/cc5hFHZt.s 			page 78


 565 002a 0367     		str	r3, [r0, #112]
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 566              		.loc 1 1230 0 discriminator 2
 567 002c C0F88830 		str	r3, [r0, #136]
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 568              		.loc 1 1231 0 discriminator 2
 569 0030 2123     		movs	r3, #33
 570 0032 C0F88030 		str	r3, [r0, #128]
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 571              		.loc 1 1234 0 discriminator 2
 572 0036 436E     		ldr	r3, [r0, #100]
 573 0038 B3F1005F 		cmp	r3, #536870912
 574 003c 0FD0     		beq	.L52
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 575              		.loc 1 1254 0
 576 003e 8368     		ldr	r3, [r0, #8]
 577 0040 B3F5805F 		cmp	r3, #4096
 578 0044 21D0     		beq	.L53
 579              	.L46:
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 580              		.loc 1 1260 0
 581 0046 184B     		ldr	r3, .L55
 582 0048 0367     		str	r3, [r0, #112]
 583              	.L47:
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 584              		.loc 1 1263 0
 585 004a 0023     		movs	r3, #0
 586 004c 80F87C30 		strb	r3, [r0, #124]
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 587              		.loc 1 1266 0
 588 0050 0168     		ldr	r1, [r0]
 589              	.LVL31:
 590 0052 0A68     		ldr	r2, [r1]
 591              	.LVL32:
 592 0054 42F08002 		orr	r2, r2, #128
 593 0058 0A60     		str	r2, [r1]
 594              	.LVL33:
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 595              		.loc 1 1269 0
 596 005a 1846     		mov	r0, r3
 597              	.LVL34:
 598 005c 7047     		bx	lr
 599              	.LVL35:
 600              	.L52:
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 601              		.loc 1 1237 0
 602 005e 8368     		ldr	r3, [r0, #8]
 603 0060 B3F5805F 		cmp	r3, #4096
 604 0064 0BD0     		beq	.L54
 605              	.L44:
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 606              		.loc 1 1243 0
 607 0066 114B     		ldr	r3, .L55+4
 608 0068 0367     		str	r3, [r0, #112]
 609              	.L45:
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 610              		.loc 1 1246 0
ARM GAS  /tmp/cc5hFHZt.s 			page 79


 611 006a 0023     		movs	r3, #0
 612 006c 80F87C30 		strb	r3, [r0, #124]
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 613              		.loc 1 1249 0
 614 0070 0168     		ldr	r1, [r0]
 615              	.LVL36:
 616 0072 8A68     		ldr	r2, [r1, #8]
 617              	.LVL37:
 618 0074 42F40002 		orr	r2, r2, #8388608
 619 0078 8A60     		str	r2, [r1, #8]
 620              	.LVL38:
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 621              		.loc 1 1269 0
 622 007a 1846     		mov	r0, r3
 623              	.LVL39:
 624 007c 7047     		bx	lr
 625              	.LVL40:
 626              	.L54:
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 627              		.loc 1 1237 0 discriminator 1
 628 007e 0369     		ldr	r3, [r0, #16]
 629 0080 002B     		cmp	r3, #0
 630 0082 F0D1     		bne	.L44
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 631              		.loc 1 1239 0
 632 0084 0A4B     		ldr	r3, .L55+8
 633 0086 0367     		str	r3, [r0, #112]
 634 0088 EFE7     		b	.L45
 635              	.L53:
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 636              		.loc 1 1254 0 discriminator 1
 637 008a 0369     		ldr	r3, [r0, #16]
 638 008c 002B     		cmp	r3, #0
 639 008e DAD1     		bne	.L46
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 640              		.loc 1 1256 0
 641 0090 084B     		ldr	r3, .L55+12
 642 0092 0367     		str	r3, [r0, #112]
 643 0094 D9E7     		b	.L47
 644              	.L48:
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 645              		.loc 1 1273 0
 646 0096 0220     		movs	r0, #2
 647              	.LVL41:
 648 0098 7047     		bx	lr
 649              	.LVL42:
 650              	.L49:
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 651              		.loc 1 1220 0
 652 009a 0120     		movs	r0, #1
 653              	.LVL43:
 654 009c 7047     		bx	lr
 655              	.LVL44:
 656              	.L50:
 657 009e 0120     		movs	r0, #1
 658              	.LVL45:
 659 00a0 7047     		bx	lr
ARM GAS  /tmp/cc5hFHZt.s 			page 80


 660              	.LVL46:
 661              	.L51:
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 662              		.loc 1 1223 0
 663 00a2 0220     		movs	r0, #2
 664              	.LVL47:
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 665              		.loc 1 1275 0
 666 00a4 7047     		bx	lr
 667              	.L56:
 668 00a6 00BF     		.align	2
 669              	.L55:
 670 00a8 00000000 		.word	UART_TxISR_8BIT
 671 00ac 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 672 00b0 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 673 00b4 00000000 		.word	UART_TxISR_16BIT
 674              		.cfi_endproc
 675              	.LFE141:
 677              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 678              		.align	1
 679              		.global	HAL_UART_Receive_IT
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 683              		.fpu fpv4-sp-d16
 685              	HAL_UART_Receive_IT:
 686              	.LFB142:
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 687              		.loc 1 1288 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692              	.LVL48:
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 693              		.loc 1 1290 0
 694 0000 D0F88430 		ldr	r3, [r0, #132]
 695 0004 202B     		cmp	r3, #32
 696 0006 7FD1     		bne	.L71
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 697              		.loc 1 1292 0
 698 0008 0029     		cmp	r1, #0
 699 000a 7FD0     		beq	.L72
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 700              		.loc 1 1292 0 is_stmt 0 discriminator 1
 701 000c 002A     		cmp	r2, #0
 702 000e 7FD0     		beq	.L73
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 703              		.loc 1 1297 0 is_stmt 1
 704 0010 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 705 0014 012B     		cmp	r3, #1
 706 0016 7DD0     		beq	.L74
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 707              		.loc 1 1297 0 is_stmt 0 discriminator 2
 708 0018 0123     		movs	r3, #1
 709 001a 80F87C30 		strb	r3, [r0, #124]
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize  = Size;
ARM GAS  /tmp/cc5hFHZt.s 			page 81


 710              		.loc 1 1299 0 is_stmt 1 discriminator 2
 711 001e 8165     		str	r1, [r0, #88]
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
 712              		.loc 1 1300 0 discriminator 2
 713 0020 A0F85C20 		strh	r2, [r0, #92]	@ movhi
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxISR       = NULL;
 714              		.loc 1 1301 0 discriminator 2
 715 0024 A0F85E20 		strh	r2, [r0, #94]	@ movhi
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 716              		.loc 1 1302 0 discriminator 2
 717 0028 0023     		movs	r3, #0
 718 002a C366     		str	r3, [r0, #108]
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 719              		.loc 1 1305 0 discriminator 2
 720 002c 8368     		ldr	r3, [r0, #8]
 721 002e B3F5805F 		cmp	r3, #4096
 722 0032 06D0     		beq	.L75
 723 0034 A3B9     		cbnz	r3, .L62
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 724              		.loc 1 1305 0 is_stmt 0 discriminator 5
 725 0036 0369     		ldr	r3, [r0, #16]
 726 0038 73B9     		cbnz	r3, .L63
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 727              		.loc 1 1305 0 discriminator 7
 728 003a FF23     		movs	r3, #255
 729 003c A0F86030 		strh	r3, [r0, #96]	@ movhi
 730 0040 14E0     		b	.L61
 731              	.L75:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 732              		.loc 1 1305 0 discriminator 1
 733 0042 0369     		ldr	r3, [r0, #16]
 734 0044 23B9     		cbnz	r3, .L60
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 735              		.loc 1 1305 0 discriminator 3
 736 0046 40F2FF13 		movw	r3, #511
 737 004a A0F86030 		strh	r3, [r0, #96]	@ movhi
 738 004e 0DE0     		b	.L61
 739              	.L60:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 740              		.loc 1 1305 0 discriminator 4
 741 0050 FF23     		movs	r3, #255
 742 0052 A0F86030 		strh	r3, [r0, #96]	@ movhi
 743 0056 09E0     		b	.L61
 744              	.L63:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 745              		.loc 1 1305 0 discriminator 8
 746 0058 7F23     		movs	r3, #127
 747 005a A0F86030 		strh	r3, [r0, #96]	@ movhi
 748 005e 05E0     		b	.L61
 749              	.L62:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 750              		.loc 1 1305 0 discriminator 6
 751 0060 B3F1805F 		cmp	r3, #268435456
 752 0064 21D0     		beq	.L76
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 753              		.loc 1 1305 0 discriminator 10
 754 0066 0023     		movs	r3, #0
ARM GAS  /tmp/cc5hFHZt.s 			page 82


 755 0068 A0F86030 		strh	r3, [r0, #96]	@ movhi
 756              	.L61:
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 757              		.loc 1 1307 0 is_stmt 1
 758 006c 0023     		movs	r3, #0
 759 006e C0F88830 		str	r3, [r0, #136]
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 760              		.loc 1 1308 0
 761 0072 2223     		movs	r3, #34
 762 0074 C0F88430 		str	r3, [r0, #132]
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 763              		.loc 1 1311 0
 764 0078 0168     		ldr	r1, [r0]
 765              	.LVL49:
 766 007a 8B68     		ldr	r3, [r1, #8]
 767 007c 43F00103 		orr	r3, r3, #1
 768 0080 8B60     		str	r3, [r1, #8]
 769              	.LVL50:
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 770              		.loc 1 1314 0
 771 0082 436E     		ldr	r3, [r0, #100]
 772 0084 B3F1005F 		cmp	r3, #536870912
 773 0088 19D0     		beq	.L77
 774              	.L66:
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 775              		.loc 1 1335 0
 776 008a 8368     		ldr	r3, [r0, #8]
 777 008c B3F5805F 		cmp	r3, #4096
 778 0090 34D0     		beq	.L78
 779              	.L69:
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 780              		.loc 1 1341 0
 781 0092 214B     		ldr	r3, .L80
 782 0094 C366     		str	r3, [r0, #108]
 783              	.L70:
1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 784              		.loc 1 1344 0
 785 0096 0023     		movs	r3, #0
 786 0098 80F87C30 		strb	r3, [r0, #124]
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 787              		.loc 1 1347 0
 788 009c 0168     		ldr	r1, [r0]
 789 009e 0A68     		ldr	r2, [r1]
 790              	.LVL51:
 791 00a0 42F49072 		orr	r2, r2, #288
 792 00a4 0A60     		str	r2, [r1]
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 793              		.loc 1 1350 0
 794 00a6 1846     		mov	r0, r3
 795              	.LVL52:
 796 00a8 7047     		bx	lr
 797              	.LVL53:
 798              	.L76:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 799              		.loc 1 1305 0 discriminator 9
 800 00aa 0369     		ldr	r3, [r0, #16]
 801 00ac 1BB9     		cbnz	r3, .L65
ARM GAS  /tmp/cc5hFHZt.s 			page 83


1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 802              		.loc 1 1305 0 is_stmt 0 discriminator 11
 803 00ae 7F23     		movs	r3, #127
 804 00b0 A0F86030 		strh	r3, [r0, #96]	@ movhi
 805 00b4 DAE7     		b	.L61
 806              	.L65:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 807              		.loc 1 1305 0 discriminator 12
 808 00b6 3F23     		movs	r3, #63
 809 00b8 A0F86030 		strh	r3, [r0, #96]	@ movhi
 810 00bc D6E7     		b	.L61
 811              	.LVL54:
 812              	.L77:
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 813              		.loc 1 1314 0 is_stmt 1 discriminator 1
 814 00be B0F86830 		ldrh	r3, [r0, #104]
 815 00c2 9342     		cmp	r3, r2
 816 00c4 E1D8     		bhi	.L66
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 817              		.loc 1 1317 0
 818 00c6 8368     		ldr	r3, [r0, #8]
 819 00c8 B3F5805F 		cmp	r3, #4096
 820 00cc 10D0     		beq	.L79
 821              	.L67:
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 822              		.loc 1 1323 0
 823 00ce 134B     		ldr	r3, .L80+4
 824 00d0 C366     		str	r3, [r0, #108]
 825              	.L68:
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 826              		.loc 1 1326 0
 827 00d2 0023     		movs	r3, #0
 828 00d4 80F87C30 		strb	r3, [r0, #124]
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 829              		.loc 1 1329 0
 830 00d8 0168     		ldr	r1, [r0]
 831 00da 0A68     		ldr	r2, [r1]
 832              	.LVL55:
 833 00dc 42F48072 		orr	r2, r2, #256
 834 00e0 0A60     		str	r2, [r1]
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 835              		.loc 1 1330 0
 836 00e2 0168     		ldr	r1, [r0]
 837 00e4 8A68     		ldr	r2, [r1, #8]
 838 00e6 42F08052 		orr	r2, r2, #268435456
 839 00ea 8A60     		str	r2, [r1, #8]
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 840              		.loc 1 1350 0
 841 00ec 1846     		mov	r0, r3
 842              	.LVL56:
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 843              		.loc 1 1330 0
 844 00ee 7047     		bx	lr
 845              	.LVL57:
 846              	.L79:
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 847              		.loc 1 1317 0 discriminator 1
ARM GAS  /tmp/cc5hFHZt.s 			page 84


 848 00f0 0369     		ldr	r3, [r0, #16]
 849 00f2 002B     		cmp	r3, #0
 850 00f4 EBD1     		bne	.L67
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 851              		.loc 1 1319 0
 852 00f6 0A4B     		ldr	r3, .L80+8
 853 00f8 C366     		str	r3, [r0, #108]
 854 00fa EAE7     		b	.L68
 855              	.L78:
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 856              		.loc 1 1335 0 discriminator 1
 857 00fc 0369     		ldr	r3, [r0, #16]
 858 00fe 002B     		cmp	r3, #0
 859 0100 C7D1     		bne	.L69
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 860              		.loc 1 1337 0
 861 0102 084B     		ldr	r3, .L80+12
 862 0104 C366     		str	r3, [r0, #108]
 863 0106 C6E7     		b	.L70
 864              	.LVL58:
 865              	.L71:
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 866              		.loc 1 1354 0
 867 0108 0220     		movs	r0, #2
 868              	.LVL59:
 869 010a 7047     		bx	lr
 870              	.LVL60:
 871              	.L72:
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 872              		.loc 1 1294 0
 873 010c 0120     		movs	r0, #1
 874              	.LVL61:
 875 010e 7047     		bx	lr
 876              	.LVL62:
 877              	.L73:
 878 0110 0120     		movs	r0, #1
 879              	.LVL63:
 880 0112 7047     		bx	lr
 881              	.LVL64:
 882              	.L74:
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 883              		.loc 1 1297 0
 884 0114 0220     		movs	r0, #2
 885              	.LVL65:
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 886              		.loc 1 1356 0
 887 0116 7047     		bx	lr
 888              	.L81:
 889              		.align	2
 890              	.L80:
 891 0118 00000000 		.word	UART_RxISR_8BIT
 892 011c 00000000 		.word	UART_RxISR_8BIT_FIFOEN
 893 0120 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 894 0124 00000000 		.word	UART_RxISR_16BIT
 895              		.cfi_endproc
 896              	.LFE142:
 898              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
ARM GAS  /tmp/cc5hFHZt.s 			page 85


 899              		.align	1
 900              		.global	HAL_UART_Transmit_DMA
 901              		.syntax unified
 902              		.thumb
 903              		.thumb_func
 904              		.fpu fpv4-sp-d16
 906              	HAL_UART_Transmit_DMA:
 907              	.LFB143:
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 908              		.loc 1 1369 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              	.LVL66:
 913 0000 10B5     		push	{r4, lr}
 914              	.LCFI2:
 915              		.cfi_def_cfa_offset 8
 916              		.cfi_offset 4, -8
 917              		.cfi_offset 14, -4
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 918              		.loc 1 1371 0
 919 0002 D0F88040 		ldr	r4, [r0, #128]
 920 0006 202C     		cmp	r4, #32
 921 0008 42D1     		bne	.L85
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 922              		.loc 1 1373 0
 923 000a 0029     		cmp	r1, #0
 924 000c 42D0     		beq	.L86
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 925              		.loc 1 1373 0 is_stmt 0 discriminator 1
 926 000e 002A     		cmp	r2, #0
 927 0010 42D0     		beq	.L87
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 928              		.loc 1 1378 0 is_stmt 1
 929 0012 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 930 0016 012B     		cmp	r3, #1
 931 0018 40D0     		beq	.L88
 932 001a 1346     		mov	r3, r2
 933 001c 0446     		mov	r4, r0
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 934              		.loc 1 1378 0 is_stmt 0 discriminator 2
 935 001e 0122     		movs	r2, #1
 936              	.LVL67:
 937 0020 80F87C20 		strb	r2, [r0, #124]
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 938              		.loc 1 1380 0 is_stmt 1 discriminator 2
 939 0024 0165     		str	r1, [r0, #80]
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 940              		.loc 1 1381 0 discriminator 2
 941 0026 A0F85430 		strh	r3, [r0, #84]	@ movhi
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 942              		.loc 1 1382 0 discriminator 2
 943 002a A0F85630 		strh	r3, [r0, #86]	@ movhi
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 944              		.loc 1 1384 0 discriminator 2
 945 002e 0022     		movs	r2, #0
 946 0030 C0F88820 		str	r2, [r0, #136]
ARM GAS  /tmp/cc5hFHZt.s 			page 86


1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 947              		.loc 1 1385 0 discriminator 2
 948 0034 2122     		movs	r2, #33
 949 0036 C0F88020 		str	r2, [r0, #128]
1387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 950              		.loc 1 1387 0 discriminator 2
 951 003a 426F     		ldr	r2, [r0, #116]
 952 003c 8AB1     		cbz	r2, .L84
1390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 953              		.loc 1 1390 0
 954 003e 1849     		ldr	r1, .L91
 955              	.LVL68:
 956 0040 D162     		str	r1, [r2, #44]
 957              	.LVL69:
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 958              		.loc 1 1393 0
 959 0042 426F     		ldr	r2, [r0, #116]
 960 0044 1749     		ldr	r1, .L91+4
 961 0046 1163     		str	r1, [r2, #48]
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 962              		.loc 1 1396 0
 963 0048 426F     		ldr	r2, [r0, #116]
 964 004a 1749     		ldr	r1, .L91+8
 965 004c 5163     		str	r1, [r2, #52]
1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 966              		.loc 1 1399 0
 967 004e 426F     		ldr	r2, [r0, #116]
 968 0050 0021     		movs	r1, #0
 969 0052 9163     		str	r1, [r2, #56]
1402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 970              		.loc 1 1402 0
 971 0054 0268     		ldr	r2, [r0]
 972 0056 2832     		adds	r2, r2, #40
 973 0058 016D     		ldr	r1, [r0, #80]
 974 005a 406F     		ldr	r0, [r0, #116]
 975              	.LVL70:
 976 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 977              	.LVL71:
 978 0060 58B9     		cbnz	r0, .L90
 979              	.L84:
1416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 980              		.loc 1 1416 0
 981 0062 2368     		ldr	r3, [r4]
 982 0064 4022     		movs	r2, #64
 983 0066 1A62     		str	r2, [r3, #32]
1418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 984              		.loc 1 1418 0
 985 0068 0020     		movs	r0, #0
 986 006a 84F87C00 		strb	r0, [r4, #124]
1422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 987              		.loc 1 1422 0
 988 006e 2268     		ldr	r2, [r4]
 989 0070 9368     		ldr	r3, [r2, #8]
 990 0072 43F08003 		orr	r3, r3, #128
 991 0076 9360     		str	r3, [r2, #8]
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 992              		.loc 1 1424 0
ARM GAS  /tmp/cc5hFHZt.s 			page 87


 993 0078 0BE0     		b	.L83
 994              	.L90:
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 995              		.loc 1 1405 0
 996 007a 1023     		movs	r3, #16
 997 007c C4F88830 		str	r3, [r4, #136]
1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 998              		.loc 1 1407 0
 999 0080 0023     		movs	r3, #0
 1000 0082 84F87C30 		strb	r3, [r4, #124]
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1001              		.loc 1 1410 0
 1002 0086 2023     		movs	r3, #32
 1003 0088 C4F88030 		str	r3, [r4, #128]
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 1004              		.loc 1 1412 0
 1005 008c 0120     		movs	r0, #1
 1006 008e 00E0     		b	.L83
 1007              	.LVL72:
 1008              	.L85:
1428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1009              		.loc 1 1428 0
 1010 0090 0220     		movs	r0, #2
 1011              	.LVL73:
 1012              	.L83:
1430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1013              		.loc 1 1430 0
 1014 0092 10BD     		pop	{r4, pc}
 1015              	.LVL74:
 1016              	.L86:
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 1017              		.loc 1 1375 0
 1018 0094 0120     		movs	r0, #1
 1019              	.LVL75:
 1020 0096 FCE7     		b	.L83
 1021              	.LVL76:
 1022              	.L87:
 1023 0098 0120     		movs	r0, #1
 1024              	.LVL77:
 1025 009a FAE7     		b	.L83
 1026              	.LVL78:
 1027              	.L88:
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1028              		.loc 1 1378 0
 1029 009c 0220     		movs	r0, #2
 1030              	.LVL79:
 1031 009e F8E7     		b	.L83
 1032              	.L92:
 1033              		.align	2
 1034              	.L91:
 1035 00a0 00000000 		.word	UART_DMATransmitCplt
 1036 00a4 00000000 		.word	UART_DMATxHalfCplt
 1037 00a8 00000000 		.word	UART_DMAError
 1038              		.cfi_endproc
 1039              	.LFE143:
 1041              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1042              		.align	1
ARM GAS  /tmp/cc5hFHZt.s 			page 88


 1043              		.global	HAL_UART_Receive_DMA
 1044              		.syntax unified
 1045              		.thumb
 1046              		.thumb_func
 1047              		.fpu fpv4-sp-d16
 1049              	HAL_UART_Receive_DMA:
 1050              	.LFB144:
1445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 1051              		.loc 1 1445 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055              	.LVL80:
 1056 0000 10B5     		push	{r4, lr}
 1057              	.LCFI3:
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 4, -8
 1060              		.cfi_offset 14, -4
1447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1061              		.loc 1 1447 0
 1062 0002 D0F88440 		ldr	r4, [r0, #132]
 1063 0006 202C     		cmp	r4, #32
 1064 0008 47D1     		bne	.L96
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1065              		.loc 1 1449 0
 1066 000a 0029     		cmp	r1, #0
 1067 000c 47D0     		beq	.L97
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1068              		.loc 1 1449 0 is_stmt 0 discriminator 1
 1069 000e 002A     		cmp	r2, #0
 1070 0010 47D0     		beq	.L98
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1071              		.loc 1 1454 0 is_stmt 1
 1072 0012 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1073 0016 012B     		cmp	r3, #1
 1074 0018 45D0     		beq	.L99
 1075 001a 1346     		mov	r3, r2
 1076 001c 0446     		mov	r4, r0
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1077              		.loc 1 1454 0 is_stmt 0 discriminator 2
 1078 001e 0122     		movs	r2, #1
 1079              	.LVL81:
 1080 0020 80F87C20 		strb	r2, [r0, #124]
1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1081              		.loc 1 1456 0 is_stmt 1 discriminator 2
 1082 0024 8165     		str	r1, [r0, #88]
1457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1083              		.loc 1 1457 0 discriminator 2
 1084 0026 A0F85C30 		strh	r3, [r0, #92]	@ movhi
1459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1085              		.loc 1 1459 0 discriminator 2
 1086 002a 0022     		movs	r2, #0
 1087 002c C0F88820 		str	r2, [r0, #136]
1460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1088              		.loc 1 1460 0 discriminator 2
 1089 0030 2222     		movs	r2, #34
 1090 0032 C0F88420 		str	r2, [r0, #132]
ARM GAS  /tmp/cc5hFHZt.s 			page 89


1462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1091              		.loc 1 1462 0 discriminator 2
 1092 0036 826F     		ldr	r2, [r0, #120]
 1093 0038 8AB1     		cbz	r2, .L95
1465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1094              		.loc 1 1465 0
 1095 003a 1C49     		ldr	r1, .L102
 1096              	.LVL82:
 1097 003c D162     		str	r1, [r2, #44]
 1098              	.LVL83:
1468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1099              		.loc 1 1468 0
 1100 003e 826F     		ldr	r2, [r0, #120]
 1101 0040 1B49     		ldr	r1, .L102+4
 1102 0042 1163     		str	r1, [r2, #48]
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1103              		.loc 1 1471 0
 1104 0044 826F     		ldr	r2, [r0, #120]
 1105 0046 1B49     		ldr	r1, .L102+8
 1106 0048 5163     		str	r1, [r2, #52]
1474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1107              		.loc 1 1474 0
 1108 004a 826F     		ldr	r2, [r0, #120]
 1109 004c 0021     		movs	r1, #0
 1110 004e 9163     		str	r1, [r2, #56]
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1111              		.loc 1 1477 0
 1112 0050 0168     		ldr	r1, [r0]
 1113 0052 826D     		ldr	r2, [r0, #88]
 1114 0054 2431     		adds	r1, r1, #36
 1115 0056 806F     		ldr	r0, [r0, #120]
 1116              	.LVL84:
 1117 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1118              	.LVL85:
 1119 005c 90B9     		cbnz	r0, .L101
 1120              	.L95:
1490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1121              		.loc 1 1490 0
 1122 005e 0020     		movs	r0, #0
 1123 0060 84F87C00 		strb	r0, [r4, #124]
1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1124              		.loc 1 1493 0
 1125 0064 2268     		ldr	r2, [r4]
 1126 0066 1368     		ldr	r3, [r2]
 1127 0068 43F48073 		orr	r3, r3, #256
 1128 006c 1360     		str	r3, [r2]
1496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1129              		.loc 1 1496 0
 1130 006e 2268     		ldr	r2, [r4]
 1131 0070 9368     		ldr	r3, [r2, #8]
 1132 0072 43F00103 		orr	r3, r3, #1
 1133 0076 9360     		str	r3, [r2, #8]
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1134              		.loc 1 1500 0
 1135 0078 2268     		ldr	r2, [r4]
 1136 007a 9368     		ldr	r3, [r2, #8]
 1137 007c 43F04003 		orr	r3, r3, #64
ARM GAS  /tmp/cc5hFHZt.s 			page 90


 1138 0080 9360     		str	r3, [r2, #8]
1502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1139              		.loc 1 1502 0
 1140 0082 0BE0     		b	.L94
 1141              	.L101:
1480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1142              		.loc 1 1480 0
 1143 0084 1023     		movs	r3, #16
 1144 0086 C4F88830 		str	r3, [r4, #136]
1482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1145              		.loc 1 1482 0
 1146 008a 0023     		movs	r3, #0
 1147 008c 84F87C30 		strb	r3, [r4, #124]
1485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1148              		.loc 1 1485 0
 1149 0090 2023     		movs	r3, #32
 1150 0092 C4F88030 		str	r3, [r4, #128]
1487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 1151              		.loc 1 1487 0
 1152 0096 0120     		movs	r0, #1
 1153 0098 00E0     		b	.L94
 1154              	.LVL86:
 1155              	.L96:
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1156              		.loc 1 1506 0
 1157 009a 0220     		movs	r0, #2
 1158              	.LVL87:
 1159              	.L94:
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1160              		.loc 1 1508 0
 1161 009c 10BD     		pop	{r4, pc}
 1162              	.LVL88:
 1163              	.L97:
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 1164              		.loc 1 1451 0
 1165 009e 0120     		movs	r0, #1
 1166              	.LVL89:
 1167 00a0 FCE7     		b	.L94
 1168              	.LVL90:
 1169              	.L98:
 1170 00a2 0120     		movs	r0, #1
 1171              	.LVL91:
 1172 00a4 FAE7     		b	.L94
 1173              	.LVL92:
 1174              	.L99:
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1175              		.loc 1 1454 0
 1176 00a6 0220     		movs	r0, #2
 1177              	.LVL93:
 1178 00a8 F8E7     		b	.L94
 1179              	.L103:
 1180 00aa 00BF     		.align	2
 1181              	.L102:
 1182 00ac 00000000 		.word	UART_DMAReceiveCplt
 1183 00b0 00000000 		.word	UART_DMARxHalfCplt
 1184 00b4 00000000 		.word	UART_DMAError
 1185              		.cfi_endproc
ARM GAS  /tmp/cc5hFHZt.s 			page 91


 1186              	.LFE144:
 1188              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1189              		.align	1
 1190              		.global	HAL_UART_DMAPause
 1191              		.syntax unified
 1192              		.thumb
 1193              		.thumb_func
 1194              		.fpu fpv4-sp-d16
 1196              	HAL_UART_DMAPause:
 1197              	.LFB145:
1516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1198              		.loc 1 1516 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              		@ link register save eliminated.
 1203              	.LVL94:
 1204 0000 10B4     		push	{r4}
 1205              	.LCFI4:
 1206              		.cfi_def_cfa_offset 4
 1207              		.cfi_offset 4, -4
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1208              		.loc 1 1517 0
 1209 0002 D0F88040 		ldr	r4, [r0, #128]
 1210              	.LVL95:
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1211              		.loc 1 1518 0
 1212 0006 D0F88410 		ldr	r1, [r0, #132]
 1213              	.LVL96:
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1214              		.loc 1 1520 0
 1215 000a 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1216 000e 012B     		cmp	r3, #1
 1217 0010 2BD0     		beq	.L108
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1218              		.loc 1 1520 0 is_stmt 0 discriminator 2
 1219 0012 0123     		movs	r3, #1
 1220 0014 80F87C30 		strb	r3, [r0, #124]
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1221              		.loc 1 1522 0 is_stmt 1 discriminator 2
 1222 0018 0368     		ldr	r3, [r0]
 1223 001a 9A68     		ldr	r2, [r3, #8]
 1224 001c 12F0800F 		tst	r2, #128
 1225 0020 01D0     		beq	.L106
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1226              		.loc 1 1522 0 is_stmt 0 discriminator 1
 1227 0022 212C     		cmp	r4, #33
 1228 0024 0DD0     		beq	.L110
 1229              	.L106:
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1230              		.loc 1 1528 0 is_stmt 1
 1231 0026 0368     		ldr	r3, [r0]
 1232 0028 9A68     		ldr	r2, [r3, #8]
 1233 002a 12F0400F 		tst	r2, #64
 1234 002e 01D0     		beq	.L107
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1235              		.loc 1 1528 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc5hFHZt.s 			page 92


 1236 0030 2229     		cmp	r1, #34
 1237 0032 0BD0     		beq	.L111
 1238              	.L107:
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1239              		.loc 1 1539 0 is_stmt 1
 1240 0034 0023     		movs	r3, #0
 1241 0036 80F87C30 		strb	r3, [r0, #124]
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1242              		.loc 1 1541 0
 1243 003a 1846     		mov	r0, r3
 1244              	.LVL97:
 1245              	.L105:
1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1246              		.loc 1 1542 0
 1247 003c 5DF8044B 		ldr	r4, [sp], #4
 1248              	.LCFI5:
 1249              		.cfi_remember_state
 1250              		.cfi_restore 4
 1251              		.cfi_def_cfa_offset 0
 1252              	.LVL98:
 1253 0040 7047     		bx	lr
 1254              	.LVL99:
 1255              	.L110:
 1256              	.LCFI6:
 1257              		.cfi_restore_state
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1258              		.loc 1 1526 0
 1259 0042 9A68     		ldr	r2, [r3, #8]
 1260 0044 22F08002 		bic	r2, r2, #128
 1261 0048 9A60     		str	r2, [r3, #8]
 1262 004a ECE7     		b	.L106
 1263              	.L111:
1532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1264              		.loc 1 1532 0
 1265 004c 1A68     		ldr	r2, [r3]
 1266 004e 22F48072 		bic	r2, r2, #256
 1267 0052 1A60     		str	r2, [r3]
1533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1268              		.loc 1 1533 0
 1269 0054 0268     		ldr	r2, [r0]
 1270 0056 9368     		ldr	r3, [r2, #8]
 1271 0058 23F00103 		bic	r3, r3, #1
 1272 005c 9360     		str	r3, [r2, #8]
1536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1273              		.loc 1 1536 0
 1274 005e 0268     		ldr	r2, [r0]
 1275 0060 9368     		ldr	r3, [r2, #8]
 1276 0062 23F04003 		bic	r3, r3, #64
 1277 0066 9360     		str	r3, [r2, #8]
 1278 0068 E4E7     		b	.L107
 1279              	.L108:
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1280              		.loc 1 1520 0
 1281 006a 0220     		movs	r0, #2
 1282              	.LVL100:
 1283 006c E6E7     		b	.L105
 1284              		.cfi_endproc
ARM GAS  /tmp/cc5hFHZt.s 			page 93


 1285              	.LFE145:
 1287              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1288              		.align	1
 1289              		.global	HAL_UART_DMAResume
 1290              		.syntax unified
 1291              		.thumb
 1292              		.thumb_func
 1293              		.fpu fpv4-sp-d16
 1295              	HAL_UART_DMAResume:
 1296              	.LFB146:
1550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1297              		.loc 1 1550 0
 1298              		.cfi_startproc
 1299              		@ args = 0, pretend = 0, frame = 0
 1300              		@ frame_needed = 0, uses_anonymous_args = 0
 1301              		@ link register save eliminated.
 1302              	.LVL101:
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1303              		.loc 1 1551 0
 1304 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1305 0004 012B     		cmp	r3, #1
 1306 0006 28D0     		beq	.L116
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1307              		.loc 1 1551 0 is_stmt 0 discriminator 2
 1308 0008 0123     		movs	r3, #1
 1309 000a 80F87C30 		strb	r3, [r0, #124]
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1310              		.loc 1 1553 0 is_stmt 1 discriminator 2
 1311 000e D0F88030 		ldr	r3, [r0, #128]
 1312 0012 212B     		cmp	r3, #33
 1313 0014 08D0     		beq	.L117
 1314              	.L114:
1558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1315              		.loc 1 1558 0
 1316 0016 D0F88430 		ldr	r3, [r0, #132]
 1317 001a 222B     		cmp	r3, #34
 1318 001c 0AD0     		beq	.L118
 1319              	.L115:
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1320              		.loc 1 1571 0
 1321 001e 0023     		movs	r3, #0
 1322 0020 80F87C30 		strb	r3, [r0, #124]
1573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1323              		.loc 1 1573 0
 1324 0024 1846     		mov	r0, r3
 1325              	.LVL102:
 1326 0026 7047     		bx	lr
 1327              	.LVL103:
 1328              	.L117:
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1329              		.loc 1 1556 0
 1330 0028 0268     		ldr	r2, [r0]
 1331 002a 9368     		ldr	r3, [r2, #8]
 1332 002c 43F08003 		orr	r3, r3, #128
 1333 0030 9360     		str	r3, [r2, #8]
 1334 0032 F0E7     		b	.L114
 1335              	.L118:
ARM GAS  /tmp/cc5hFHZt.s 			page 94


1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1336              		.loc 1 1561 0
 1337 0034 0368     		ldr	r3, [r0]
 1338 0036 0822     		movs	r2, #8
 1339 0038 1A62     		str	r2, [r3, #32]
1564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1340              		.loc 1 1564 0
 1341 003a 0268     		ldr	r2, [r0]
 1342 003c 1368     		ldr	r3, [r2]
 1343 003e 43F48073 		orr	r3, r3, #256
 1344 0042 1360     		str	r3, [r2]
1565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1345              		.loc 1 1565 0
 1346 0044 0268     		ldr	r2, [r0]
 1347 0046 9368     		ldr	r3, [r2, #8]
 1348 0048 43F00103 		orr	r3, r3, #1
 1349 004c 9360     		str	r3, [r2, #8]
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1350              		.loc 1 1568 0
 1351 004e 0268     		ldr	r2, [r0]
 1352 0050 9368     		ldr	r3, [r2, #8]
 1353 0052 43F04003 		orr	r3, r3, #64
 1354 0056 9360     		str	r3, [r2, #8]
 1355 0058 E1E7     		b	.L115
 1356              	.L116:
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1357              		.loc 1 1551 0
 1358 005a 0220     		movs	r0, #2
 1359              	.LVL104:
1574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1360              		.loc 1 1574 0
 1361 005c 7047     		bx	lr
 1362              		.cfi_endproc
 1363              	.LFE146:
 1365              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1366              		.align	1
 1367              		.global	HAL_UART_DMAStop
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1371              		.fpu fpv4-sp-d16
 1373              	HAL_UART_DMAStop:
 1374              	.LFB147:
1582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1375              		.loc 1 1582 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              	.LVL105:
 1380 0000 38B5     		push	{r3, r4, r5, lr}
 1381              	.LCFI7:
 1382              		.cfi_def_cfa_offset 16
 1383              		.cfi_offset 3, -16
 1384              		.cfi_offset 4, -12
 1385              		.cfi_offset 5, -8
 1386              		.cfi_offset 14, -4
 1387 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cc5hFHZt.s 			page 95


1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1388              		.loc 1 1590 0
 1389 0004 D0F88010 		ldr	r1, [r0, #128]
 1390              	.LVL106:
1591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1391              		.loc 1 1591 0
 1392 0008 D0F88450 		ldr	r5, [r0, #132]
 1393              	.LVL107:
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1394              		.loc 1 1594 0
 1395 000c 0368     		ldr	r3, [r0]
 1396 000e 9A68     		ldr	r2, [r3, #8]
 1397 0010 12F0800F 		tst	r2, #128
 1398 0014 01D0     		beq	.L120
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1399              		.loc 1 1594 0 is_stmt 0 discriminator 1
 1400 0016 2129     		cmp	r1, #33
 1401 0018 08D0     		beq	.L127
 1402              	.LVL108:
 1403              	.L120:
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1404              		.loc 1 1618 0 is_stmt 1
 1405 001a 2368     		ldr	r3, [r4]
 1406 001c 9A68     		ldr	r2, [r3, #8]
 1407 001e 12F0400F 		tst	r2, #64
 1408 0022 32D0     		beq	.L124
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1409              		.loc 1 1618 0 is_stmt 0 discriminator 1
 1410 0024 222D     		cmp	r5, #34
 1411 0026 18D0     		beq	.L128
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1412              		.loc 1 1641 0 is_stmt 1
 1413 0028 0020     		movs	r0, #0
 1414 002a 2FE0     		b	.L122
 1415              	.LVL109:
 1416              	.L127:
1597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1417              		.loc 1 1597 0
 1418 002c 9A68     		ldr	r2, [r3, #8]
 1419 002e 22F08002 		bic	r2, r2, #128
 1420 0032 9A60     		str	r2, [r3, #8]
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1421              		.loc 1 1600 0
 1422 0034 406F     		ldr	r0, [r0, #116]
 1423              	.LVL110:
 1424 0036 10B1     		cbz	r0, .L121
1602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1425              		.loc 1 1602 0
 1426 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1427              	.LVL111:
 1428 003c 18B9     		cbnz	r0, .L129
 1429              	.L121:
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1430              		.loc 1 1614 0
 1431 003e 2046     		mov	r0, r4
 1432 0040 FFF7FEFF 		bl	UART_EndTxTransfer
 1433              	.LVL112:
ARM GAS  /tmp/cc5hFHZt.s 			page 96


 1434 0044 E9E7     		b	.L120
 1435              	.L129:
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1436              		.loc 1 1604 0
 1437 0046 606F     		ldr	r0, [r4, #116]
 1438 0048 FFF7FEFF 		bl	HAL_DMA_GetError
 1439              	.LVL113:
 1440 004c 2028     		cmp	r0, #32
 1441 004e F6D1     		bne	.L121
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1442              		.loc 1 1607 0
 1443 0050 1023     		movs	r3, #16
 1444 0052 C4F88830 		str	r3, [r4, #136]
1609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1445              		.loc 1 1609 0
 1446 0056 0320     		movs	r0, #3
 1447 0058 18E0     		b	.L122
 1448              	.L128:
1621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1449              		.loc 1 1621 0
 1450 005a 9A68     		ldr	r2, [r3, #8]
 1451 005c 22F04002 		bic	r2, r2, #64
 1452 0060 9A60     		str	r2, [r3, #8]
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1453              		.loc 1 1624 0
 1454 0062 A06F     		ldr	r0, [r4, #120]
 1455 0064 10B1     		cbz	r0, .L123
1626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1456              		.loc 1 1626 0
 1457 0066 FFF7FEFF 		bl	HAL_DMA_Abort
 1458              	.LVL114:
 1459 006a 20B9     		cbnz	r0, .L130
 1460              	.L123:
1638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1461              		.loc 1 1638 0
 1462 006c 2046     		mov	r0, r4
 1463 006e FFF7FEFF 		bl	UART_EndRxTransfer
 1464              	.LVL115:
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1465              		.loc 1 1641 0
 1466 0072 0020     		movs	r0, #0
 1467 0074 0AE0     		b	.L122
 1468              	.L130:
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1469              		.loc 1 1628 0
 1470 0076 A06F     		ldr	r0, [r4, #120]
 1471 0078 FFF7FEFF 		bl	HAL_DMA_GetError
 1472              	.LVL116:
 1473 007c 2028     		cmp	r0, #32
 1474 007e F5D1     		bne	.L123
1631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1475              		.loc 1 1631 0
 1476 0080 1023     		movs	r3, #16
 1477 0082 C4F88830 		str	r3, [r4, #136]
1633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1478              		.loc 1 1633 0
 1479 0086 0320     		movs	r0, #3
ARM GAS  /tmp/cc5hFHZt.s 			page 97


 1480 0088 00E0     		b	.L122
 1481              	.L124:
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1482              		.loc 1 1641 0
 1483 008a 0020     		movs	r0, #0
 1484              	.L122:
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1485              		.loc 1 1642 0
 1486 008c 38BD     		pop	{r3, r4, r5, pc}
 1487              		.cfi_endproc
 1488              	.LFE147:
 1490              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1491              		.align	1
 1492              		.global	HAL_UART_Abort
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1496              		.fpu fpv4-sp-d16
 1498              	HAL_UART_Abort:
 1499              	.LFB148:
1657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
 1500              		.loc 1 1657 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504              	.LVL117:
 1505 0000 10B5     		push	{r4, lr}
 1506              	.LCFI8:
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 4, -8
 1509              		.cfi_offset 14, -4
 1510 0002 0446     		mov	r4, r0
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                    USART_CR1_TCIE));
 1511              		.loc 1 1659 0
 1512 0004 0268     		ldr	r2, [r0]
 1513 0006 1368     		ldr	r3, [r2]
 1514 0008 23F4F073 		bic	r3, r3, #480
 1515 000c 1360     		str	r3, [r2]
1661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1516              		.loc 1 1661 0
 1517 000e 0268     		ldr	r2, [r0]
 1518 0010 9368     		ldr	r3, [r2, #8]
 1519 0012 23F08453 		bic	r3, r3, #276824064
 1520 0016 23F00103 		bic	r3, r3, #1
 1521 001a 9360     		str	r3, [r2, #8]
1664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1522              		.loc 1 1664 0
 1523 001c 0368     		ldr	r3, [r0]
 1524 001e 9A68     		ldr	r2, [r3, #8]
 1525 0020 12F0800F 		tst	r2, #128
 1526 0024 0BD0     		beq	.L132
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1527              		.loc 1 1666 0
 1528 0026 9A68     		ldr	r2, [r3, #8]
 1529 0028 22F08002 		bic	r2, r2, #128
 1530 002c 9A60     		str	r2, [r3, #8]
1669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
ARM GAS  /tmp/cc5hFHZt.s 			page 98


 1531              		.loc 1 1669 0
 1532 002e 436F     		ldr	r3, [r0, #116]
 1533 0030 2BB1     		cbz	r3, .L132
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1534              		.loc 1 1673 0
 1535 0032 0022     		movs	r2, #0
 1536 0034 9A63     		str	r2, [r3, #56]
1675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1537              		.loc 1 1675 0
 1538 0036 406F     		ldr	r0, [r0, #116]
 1539              	.LVL118:
 1540 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1541              	.LVL119:
 1542 003c 50BB     		cbnz	r0, .L137
 1543              	.L132:
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1544              		.loc 1 1689 0
 1545 003e 2368     		ldr	r3, [r4]
 1546 0040 9A68     		ldr	r2, [r3, #8]
 1547 0042 12F0400F 		tst	r2, #64
 1548 0046 0BD0     		beq	.L134
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1549              		.loc 1 1691 0
 1550 0048 9A68     		ldr	r2, [r3, #8]
 1551 004a 22F04002 		bic	r2, r2, #64
 1552 004e 9A60     		str	r2, [r3, #8]
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1553              		.loc 1 1694 0
 1554 0050 A36F     		ldr	r3, [r4, #120]
 1555 0052 2BB1     		cbz	r3, .L134
1698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1556              		.loc 1 1698 0
 1557 0054 0022     		movs	r2, #0
 1558 0056 9A63     		str	r2, [r3, #56]
1700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1559              		.loc 1 1700 0
 1560 0058 A06F     		ldr	r0, [r4, #120]
 1561 005a FFF7FEFF 		bl	HAL_DMA_Abort
 1562              	.LVL120:
 1563 005e 18BB     		cbnz	r0, .L138
 1564              	.L134:
1714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1565              		.loc 1 1714 0
 1566 0060 0023     		movs	r3, #0
 1567 0062 A4F85630 		strh	r3, [r4, #86]	@ movhi
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1568              		.loc 1 1715 0
 1569 0066 A4F85E30 		strh	r3, [r4, #94]	@ movhi
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1570              		.loc 1 1718 0
 1571 006a 2368     		ldr	r3, [r4]
 1572 006c 0F22     		movs	r2, #15
 1573 006e 1A62     		str	r2, [r3, #32]
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1574              		.loc 1 1721 0
 1575 0070 636E     		ldr	r3, [r4, #100]
 1576 0072 B3F1005F 		cmp	r3, #536870912
ARM GAS  /tmp/cc5hFHZt.s 			page 99


 1577 0076 21D0     		beq	.L139
 1578              	.L135:
1727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1579              		.loc 1 1727 0
 1580 0078 2268     		ldr	r2, [r4]
 1581 007a 9369     		ldr	r3, [r2, #24]
 1582 007c 43F00803 		orr	r3, r3, #8
 1583 0080 9361     		str	r3, [r2, #24]
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1584              		.loc 1 1730 0
 1585 0082 2023     		movs	r3, #32
 1586 0084 C4F88030 		str	r3, [r4, #128]
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1587              		.loc 1 1731 0
 1588 0088 C4F88430 		str	r3, [r4, #132]
1733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1589              		.loc 1 1733 0
 1590 008c 0020     		movs	r0, #0
 1591 008e C4F88800 		str	r0, [r4, #136]
 1592              	.L133:
1736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1593              		.loc 1 1736 0
 1594 0092 10BD     		pop	{r4, pc}
 1595              	.LVL121:
 1596              	.L137:
1677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1597              		.loc 1 1677 0
 1598 0094 606F     		ldr	r0, [r4, #116]
 1599 0096 FFF7FEFF 		bl	HAL_DMA_GetError
 1600              	.LVL122:
 1601 009a 2028     		cmp	r0, #32
 1602 009c CFD1     		bne	.L132
1680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1603              		.loc 1 1680 0
 1604 009e 1023     		movs	r3, #16
 1605 00a0 C4F88830 		str	r3, [r4, #136]
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1606              		.loc 1 1682 0
 1607 00a4 0320     		movs	r0, #3
 1608 00a6 F4E7     		b	.L133
 1609              	.L138:
1702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1610              		.loc 1 1702 0
 1611 00a8 A06F     		ldr	r0, [r4, #120]
 1612 00aa FFF7FEFF 		bl	HAL_DMA_GetError
 1613              	.LVL123:
 1614 00ae 2028     		cmp	r0, #32
 1615 00b0 D6D1     		bne	.L134
1705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1616              		.loc 1 1705 0
 1617 00b2 1023     		movs	r3, #16
 1618 00b4 C4F88830 		str	r3, [r4, #136]
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1619              		.loc 1 1707 0
 1620 00b8 0320     		movs	r0, #3
 1621 00ba EAE7     		b	.L133
 1622              	.L139:
ARM GAS  /tmp/cc5hFHZt.s 			page 100


1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1623              		.loc 1 1723 0
 1624 00bc 2268     		ldr	r2, [r4]
 1625 00be 9369     		ldr	r3, [r2, #24]
 1626 00c0 43F01003 		orr	r3, r3, #16
 1627 00c4 9361     		str	r3, [r2, #24]
 1628 00c6 D7E7     		b	.L135
 1629              		.cfi_endproc
 1630              	.LFE148:
 1632              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1633              		.align	1
 1634              		.global	HAL_UART_AbortTransmit
 1635              		.syntax unified
 1636              		.thumb
 1637              		.thumb_func
 1638              		.fpu fpv4-sp-d16
 1640              	HAL_UART_AbortTransmit:
 1641              	.LFB149:
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
 1642              		.loc 1 1751 0
 1643              		.cfi_startproc
 1644              		@ args = 0, pretend = 0, frame = 0
 1645              		@ frame_needed = 0, uses_anonymous_args = 0
 1646              	.LVL124:
 1647 0000 10B5     		push	{r4, lr}
 1648              	.LCFI9:
 1649              		.cfi_def_cfa_offset 8
 1650              		.cfi_offset 4, -8
 1651              		.cfi_offset 14, -4
 1652 0002 0446     		mov	r4, r0
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 1653              		.loc 1 1753 0
 1654 0004 0268     		ldr	r2, [r0]
 1655 0006 1368     		ldr	r3, [r2]
 1656 0008 23F0C003 		bic	r3, r3, #192
 1657 000c 1360     		str	r3, [r2]
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1658              		.loc 1 1754 0
 1659 000e 0268     		ldr	r2, [r0]
 1660 0010 9368     		ldr	r3, [r2, #8]
 1661 0012 23F40003 		bic	r3, r3, #8388608
 1662 0016 9360     		str	r3, [r2, #8]
1757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1663              		.loc 1 1757 0
 1664 0018 0368     		ldr	r3, [r0]
 1665 001a 9A68     		ldr	r2, [r3, #8]
 1666 001c 12F0800F 		tst	r2, #128
 1667 0020 0BD0     		beq	.L141
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1668              		.loc 1 1759 0
 1669 0022 9A68     		ldr	r2, [r3, #8]
 1670 0024 22F08002 		bic	r2, r2, #128
 1671 0028 9A60     		str	r2, [r3, #8]
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1672              		.loc 1 1762 0
 1673 002a 436F     		ldr	r3, [r0, #116]
 1674 002c 2BB1     		cbz	r3, .L141
ARM GAS  /tmp/cc5hFHZt.s 			page 101


1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1675              		.loc 1 1766 0
 1676 002e 0022     		movs	r2, #0
 1677 0030 9A63     		str	r2, [r3, #56]
1768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1678              		.loc 1 1768 0
 1679 0032 406F     		ldr	r0, [r0, #116]
 1680              	.LVL125:
 1681 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1682              	.LVL126:
 1683 0038 58B9     		cbnz	r0, .L145
 1684              	.L141:
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1685              		.loc 1 1782 0
 1686 003a 0023     		movs	r3, #0
 1687 003c A4F85630 		strh	r3, [r4, #86]	@ movhi
1785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1688              		.loc 1 1785 0
 1689 0040 636E     		ldr	r3, [r4, #100]
 1690 0042 B3F1005F 		cmp	r3, #536870912
 1691 0046 0ED0     		beq	.L146
 1692              	.L143:
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1693              		.loc 1 1791 0
 1694 0048 2023     		movs	r3, #32
 1695 004a C4F88030 		str	r3, [r4, #128]
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1696              		.loc 1 1793 0
 1697 004e 0020     		movs	r0, #0
 1698              	.L142:
1794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1699              		.loc 1 1794 0
 1700 0050 10BD     		pop	{r4, pc}
 1701              	.LVL127:
 1702              	.L145:
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1703              		.loc 1 1770 0
 1704 0052 606F     		ldr	r0, [r4, #116]
 1705 0054 FFF7FEFF 		bl	HAL_DMA_GetError
 1706              	.LVL128:
 1707 0058 2028     		cmp	r0, #32
 1708 005a EED1     		bne	.L141
1773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1709              		.loc 1 1773 0
 1710 005c 1023     		movs	r3, #16
 1711 005e C4F88830 		str	r3, [r4, #136]
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1712              		.loc 1 1775 0
 1713 0062 0320     		movs	r0, #3
 1714 0064 F4E7     		b	.L142
 1715              	.L146:
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1716              		.loc 1 1787 0
 1717 0066 2268     		ldr	r2, [r4]
 1718 0068 9369     		ldr	r3, [r2, #24]
 1719 006a 43F01003 		orr	r3, r3, #16
 1720 006e 9361     		str	r3, [r2, #24]
ARM GAS  /tmp/cc5hFHZt.s 			page 102


 1721 0070 EAE7     		b	.L143
 1722              		.cfi_endproc
 1723              	.LFE149:
 1725              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1726              		.align	1
 1727              		.global	HAL_UART_AbortReceive
 1728              		.syntax unified
 1729              		.thumb
 1730              		.thumb_func
 1731              		.fpu fpv4-sp-d16
 1733              	HAL_UART_AbortReceive:
 1734              	.LFB150:
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
 1735              		.loc 1 1809 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 0
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739              	.LVL129:
 1740 0000 10B5     		push	{r4, lr}
 1741              	.LCFI10:
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 4, -8
 1744              		.cfi_offset 14, -4
 1745 0002 0446     		mov	r4, r0
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 1746              		.loc 1 1811 0
 1747 0004 0268     		ldr	r2, [r0]
 1748 0006 1368     		ldr	r3, [r2]
 1749 0008 23F49073 		bic	r3, r3, #288
 1750 000c 1360     		str	r3, [r2]
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1751              		.loc 1 1812 0
 1752 000e 0268     		ldr	r2, [r0]
 1753 0010 9368     		ldr	r3, [r2, #8]
 1754 0012 23F08053 		bic	r3, r3, #268435456
 1755 0016 23F00103 		bic	r3, r3, #1
 1756 001a 9360     		str	r3, [r2, #8]
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1757              		.loc 1 1815 0
 1758 001c 0368     		ldr	r3, [r0]
 1759 001e 9A68     		ldr	r2, [r3, #8]
 1760 0020 12F0400F 		tst	r2, #64
 1761 0024 0BD0     		beq	.L148
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1762              		.loc 1 1817 0
 1763 0026 9A68     		ldr	r2, [r3, #8]
 1764 0028 22F04002 		bic	r2, r2, #64
 1765 002c 9A60     		str	r2, [r3, #8]
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1766              		.loc 1 1820 0
 1767 002e 836F     		ldr	r3, [r0, #120]
 1768 0030 2BB1     		cbz	r3, .L148
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1769              		.loc 1 1824 0
 1770 0032 0022     		movs	r2, #0
 1771 0034 9A63     		str	r2, [r3, #56]
1826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
ARM GAS  /tmp/cc5hFHZt.s 			page 103


 1772              		.loc 1 1826 0
 1773 0036 806F     		ldr	r0, [r0, #120]
 1774              	.LVL130:
 1775 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1776              	.LVL131:
 1777 003c 70B9     		cbnz	r0, .L151
 1778              	.L148:
1840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1779              		.loc 1 1840 0
 1780 003e 0020     		movs	r0, #0
 1781 0040 A4F85E00 		strh	r0, [r4, #94]	@ movhi
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1782              		.loc 1 1843 0
 1783 0044 2368     		ldr	r3, [r4]
 1784 0046 0F22     		movs	r2, #15
 1785 0048 1A62     		str	r2, [r3, #32]
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1786              		.loc 1 1846 0
 1787 004a 2268     		ldr	r2, [r4]
 1788 004c 9369     		ldr	r3, [r2, #24]
 1789 004e 43F00803 		orr	r3, r3, #8
 1790 0052 9361     		str	r3, [r2, #24]
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1791              		.loc 1 1849 0
 1792 0054 2023     		movs	r3, #32
 1793 0056 C4F88430 		str	r3, [r4, #132]
 1794              	.L149:
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1795              		.loc 1 1852 0
 1796 005a 10BD     		pop	{r4, pc}
 1797              	.LVL132:
 1798              	.L151:
1828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1799              		.loc 1 1828 0
 1800 005c A06F     		ldr	r0, [r4, #120]
 1801 005e FFF7FEFF 		bl	HAL_DMA_GetError
 1802              	.LVL133:
 1803 0062 2028     		cmp	r0, #32
 1804 0064 EBD1     		bne	.L148
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1805              		.loc 1 1831 0
 1806 0066 1023     		movs	r3, #16
 1807 0068 C4F88830 		str	r3, [r4, #136]
1833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1808              		.loc 1 1833 0
 1809 006c 0320     		movs	r0, #3
 1810 006e F4E7     		b	.L149
 1811              		.cfi_endproc
 1812              	.LFE150:
 1814              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1815              		.align	1
 1816              		.weak	HAL_UART_TxCpltCallback
 1817              		.syntax unified
 1818              		.thumb
 1819              		.thumb_func
 1820              		.fpu fpv4-sp-d16
 1822              	HAL_UART_TxCpltCallback:
ARM GAS  /tmp/cc5hFHZt.s 			page 104


 1823              	.LFB155:
2420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1824              		.loc 1 2420 0
 1825              		.cfi_startproc
 1826              		@ args = 0, pretend = 0, frame = 0
 1827              		@ frame_needed = 0, uses_anonymous_args = 0
 1828              		@ link register save eliminated.
 1829              	.LVL134:
2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1830              		.loc 1 2427 0
 1831 0000 7047     		bx	lr
 1832              		.cfi_endproc
 1833              	.LFE155:
 1835              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1836              		.align	1
 1837              		.syntax unified
 1838              		.thumb
 1839              		.thumb_func
 1840              		.fpu fpv4-sp-d16
 1842              	UART_DMATransmitCplt:
 1843              	.LFB180:
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1844              		.loc 1 3300 0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 0
 1847              		@ frame_needed = 0, uses_anonymous_args = 0
 1848              	.LVL135:
 1849 0000 08B5     		push	{r3, lr}
 1850              	.LCFI11:
 1851              		.cfi_def_cfa_offset 8
 1852              		.cfi_offset 3, -8
 1853              		.cfi_offset 14, -4
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1854              		.loc 1 3301 0
 1855 0002 836A     		ldr	r3, [r0, #40]
 1856              	.LVL136:
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1857              		.loc 1 3304 0
 1858 0004 0268     		ldr	r2, [r0]
 1859 0006 1268     		ldr	r2, [r2]
 1860 0008 12F0200F 		tst	r2, #32
 1861 000c 0DD1     		bne	.L154
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1862              		.loc 1 3306 0
 1863 000e 0022     		movs	r2, #0
 1864 0010 A3F85620 		strh	r2, [r3, #86]	@ movhi
3310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1865              		.loc 1 3310 0
 1866 0014 1968     		ldr	r1, [r3]
 1867 0016 8A68     		ldr	r2, [r1, #8]
 1868 0018 22F08002 		bic	r2, r2, #128
 1869 001c 8A60     		str	r2, [r1, #8]
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1870              		.loc 1 3313 0
 1871 001e 1A68     		ldr	r2, [r3]
 1872 0020 1368     		ldr	r3, [r2]
 1873              	.LVL137:
ARM GAS  /tmp/cc5hFHZt.s 			page 105


 1874 0022 43F04003 		orr	r3, r3, #64
 1875 0026 1360     		str	r3, [r2]
 1876              	.LVL138:
 1877              	.L153:
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1878              		.loc 1 3326 0
 1879 0028 08BD     		pop	{r3, pc}
 1880              	.LVL139:
 1881              	.L154:
3323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1882              		.loc 1 3323 0
 1883 002a 1846     		mov	r0, r3
 1884              	.LVL140:
 1885 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1886              	.LVL141:
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1887              		.loc 1 3326 0
 1888 0030 FAE7     		b	.L153
 1889              		.cfi_endproc
 1890              	.LFE180:
 1892              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1893              		.align	1
 1894              		.syntax unified
 1895              		.thumb
 1896              		.thumb_func
 1897              		.fpu fpv4-sp-d16
 1899              	UART_EndTransmit_IT:
 1900              	.LFB194:
3772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 1901              		.loc 1 3780 0
 1902              		.cfi_startproc
 1903              		@ args = 0, pretend = 0, frame = 0
 1904              		@ frame_needed = 0, uses_anonymous_args = 0
 1905              	.LVL142:
 1906 0000 08B5     		push	{r3, lr}
 1907              	.LCFI12:
 1908              		.cfi_def_cfa_offset 8
 1909              		.cfi_offset 3, -8
 1910              		.cfi_offset 14, -4
3781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1911              		.loc 1 3782 0
 1912 0002 0168     		ldr	r1, [r0]
 1913 0004 0A68     		ldr	r2, [r1]
 1914 0006 22F04002 		bic	r2, r2, #64
 1915 000a 0A60     		str	r2, [r1]
3783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/cc5hFHZt.s 			page 106


 1916              		.loc 1 3785 0
 1917 000c 2022     		movs	r2, #32
 1918 000e C0F88020 		str	r2, [r0, #128]
3786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
 1919              		.loc 1 3788 0
 1920 0012 0022     		movs	r2, #0
 1921 0014 0267     		str	r2, [r0, #112]
3789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1922              		.loc 1 3795 0
 1923 0016 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1924              	.LVL143:
3796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1925              		.loc 1 3797 0
 1926 001a 08BD     		pop	{r3, pc}
 1927              		.cfi_endproc
 1928              	.LFE194:
 1930              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1931              		.align	1
 1932              		.weak	HAL_UART_TxHalfCpltCallback
 1933              		.syntax unified
 1934              		.thumb
 1935              		.thumb_func
 1936              		.fpu fpv4-sp-d16
 1938              	HAL_UART_TxHalfCpltCallback:
 1939              	.LFB156:
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1940              		.loc 1 2435 0
 1941              		.cfi_startproc
 1942              		@ args = 0, pretend = 0, frame = 0
 1943              		@ frame_needed = 0, uses_anonymous_args = 0
 1944              		@ link register save eliminated.
 1945              	.LVL144:
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1946              		.loc 1 2442 0
 1947 0000 7047     		bx	lr
 1948              		.cfi_endproc
 1949              	.LFE156:
 1951              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1952              		.align	1
 1953              		.syntax unified
 1954              		.thumb
 1955              		.thumb_func
 1956              		.fpu fpv4-sp-d16
 1958              	UART_DMATxHalfCplt:
 1959              	.LFB181:
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1960              		.loc 1 3334 0
 1961              		.cfi_startproc
ARM GAS  /tmp/cc5hFHZt.s 			page 107


 1962              		@ args = 0, pretend = 0, frame = 0
 1963              		@ frame_needed = 0, uses_anonymous_args = 0
 1964              	.LVL145:
 1965 0000 08B5     		push	{r3, lr}
 1966              	.LCFI13:
 1967              		.cfi_def_cfa_offset 8
 1968              		.cfi_offset 3, -8
 1969              		.cfi_offset 14, -4
 1970              	.LVL146:
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1971              		.loc 1 3342 0
 1972 0002 806A     		ldr	r0, [r0, #40]
 1973              	.LVL147:
 1974 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1975              	.LVL148:
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1976              		.loc 1 3344 0
 1977 0008 08BD     		pop	{r3, pc}
 1978              		.cfi_endproc
 1979              	.LFE181:
 1981              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1982              		.align	1
 1983              		.weak	HAL_UART_RxCpltCallback
 1984              		.syntax unified
 1985              		.thumb
 1986              		.thumb_func
 1987              		.fpu fpv4-sp-d16
 1989              	HAL_UART_RxCpltCallback:
 1990              	.LFB157:
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1991              		.loc 1 2450 0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 0
 1994              		@ frame_needed = 0, uses_anonymous_args = 0
 1995              		@ link register save eliminated.
 1996              	.LVL149:
2457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1997              		.loc 1 2457 0
 1998 0000 7047     		bx	lr
 1999              		.cfi_endproc
 2000              	.LFE157:
 2002              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 2003              		.align	1
 2004              		.syntax unified
 2005              		.thumb
 2006              		.thumb_func
 2007              		.fpu fpv4-sp-d16
 2009              	UART_RxISR_8BIT:
 2010              	.LFB195:
3798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
3801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
ARM GAS  /tmp/cc5hFHZt.s 			page 108


 2011              		.loc 1 3805 0
 2012              		.cfi_startproc
 2013              		@ args = 0, pretend = 0, frame = 0
 2014              		@ frame_needed = 0, uses_anonymous_args = 0
 2015              	.LVL150:
 2016 0000 08B5     		push	{r3, lr}
 2017              	.LCFI14:
 2018              		.cfi_def_cfa_offset 8
 2019              		.cfi_offset 3, -8
 2020              		.cfi_offset 14, -4
3806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2021              		.loc 1 3806 0
 2022 0002 B0F86030 		ldrh	r3, [r0, #96]
 2023              	.LVL151:
3807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2024              		.loc 1 3810 0
 2025 0006 D0F88420 		ldr	r2, [r0, #132]
 2026 000a 222A     		cmp	r2, #34
 2027 000c 05D0     		beq	.L167
3811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr++;
3815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
3816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = NULL;
3830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2028              		.loc 1 3843 0
 2029 000e 0268     		ldr	r2, [r0]
ARM GAS  /tmp/cc5hFHZt.s 			page 109


 2030 0010 9369     		ldr	r3, [r2, #24]
 2031              	.LVL152:
 2032 0012 43F00803 		orr	r3, r3, #8
 2033 0016 9361     		str	r3, [r2, #24]
 2034              	.LVL153:
 2035              	.L163:
3844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2036              		.loc 1 3845 0
 2037 0018 08BD     		pop	{r3, pc}
 2038              	.LVL154:
 2039              	.L167:
3812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 2040              		.loc 1 3812 0
 2041 001a 0268     		ldr	r2, [r0]
 2042 001c 516A     		ldr	r1, [r2, #36]
 2043              	.LVL155:
3813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr++;
 2044              		.loc 1 3813 0
 2045 001e DBB2     		uxtb	r3, r3
 2046              	.LVL156:
 2047 0020 826D     		ldr	r2, [r0, #88]
 2048 0022 0B40     		ands	r3, r3, r1
 2049 0024 1370     		strb	r3, [r2]
 2050              	.LVL157:
3814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
 2051              		.loc 1 3814 0
 2052 0026 836D     		ldr	r3, [r0, #88]
 2053 0028 0133     		adds	r3, r3, #1
 2054 002a 8365     		str	r3, [r0, #88]
3815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2055              		.loc 1 3815 0
 2056 002c B0F85E30 		ldrh	r3, [r0, #94]
 2057 0030 013B     		subs	r3, r3, #1
 2058 0032 9BB2     		uxth	r3, r3
 2059 0034 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2060              		.loc 1 3817 0
 2061 0038 B0F85E30 		ldrh	r3, [r0, #94]
 2062 003c 9BB2     		uxth	r3, r3
 2063 003e 002B     		cmp	r3, #0
 2064 0040 EAD1     		bne	.L163
3820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2065              		.loc 1 3820 0
 2066 0042 0268     		ldr	r2, [r0]
 2067 0044 1368     		ldr	r3, [r2]
 2068 0046 23F49073 		bic	r3, r3, #288
 2069 004a 1360     		str	r3, [r2]
3823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2070              		.loc 1 3823 0
 2071 004c 0268     		ldr	r2, [r0]
 2072 004e 9368     		ldr	r3, [r2, #8]
 2073 0050 23F00103 		bic	r3, r3, #1
 2074 0054 9360     		str	r3, [r2, #8]
3826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2075              		.loc 1 3826 0
 2076 0056 2023     		movs	r3, #32
ARM GAS  /tmp/cc5hFHZt.s 			page 110


 2077 0058 C0F88430 		str	r3, [r0, #132]
3829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2078              		.loc 1 3829 0
 2079 005c 0023     		movs	r3, #0
 2080 005e C366     		str	r3, [r0, #108]
3836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2081              		.loc 1 3836 0
 2082 0060 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2083              	.LVL158:
 2084 0064 D8E7     		b	.L163
 2085              		.cfi_endproc
 2086              	.LFE195:
 2088              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 2089              		.align	1
 2090              		.syntax unified
 2091              		.thumb
 2092              		.thumb_func
 2093              		.fpu fpv4-sp-d16
 2095              	UART_RxISR_16BIT:
 2096              	.LFB196:
3846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
3849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2097              		.loc 1 3855 0
 2098              		.cfi_startproc
 2099              		@ args = 0, pretend = 0, frame = 0
 2100              		@ frame_needed = 0, uses_anonymous_args = 0
 2101              	.LVL159:
 2102 0000 08B5     		push	{r3, lr}
 2103              	.LCFI15:
 2104              		.cfi_def_cfa_offset 8
 2105              		.cfi_offset 3, -8
 2106              		.cfi_offset 14, -4
3856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2107              		.loc 1 3857 0
 2108 0002 B0F86020 		ldrh	r2, [r0, #96]
 2109              	.LVL160:
3858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2110              		.loc 1 3861 0
 2111 0006 D0F88430 		ldr	r3, [r0, #132]
 2112 000a 222B     		cmp	r3, #34
 2113 000c 05D0     		beq	.L172
3862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
3865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
ARM GAS  /tmp/cc5hFHZt.s 			page 111


3866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
3867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
3868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = NULL;
3882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2114              		.loc 1 3895 0
 2115 000e 0268     		ldr	r2, [r0]
 2116              	.LVL161:
 2117 0010 9369     		ldr	r3, [r2, #24]
 2118 0012 43F00803 		orr	r3, r3, #8
 2119 0016 9361     		str	r3, [r2, #24]
 2120              	.LVL162:
 2121              	.L168:
3896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2122              		.loc 1 3897 0
 2123 0018 08BD     		pop	{r3, pc}
 2124              	.LVL163:
 2125              	.L172:
3863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 2126              		.loc 1 3863 0
 2127 001a 0368     		ldr	r3, [r0]
 2128 001c 5B6A     		ldr	r3, [r3, #36]
 2129              	.LVL164:
3864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 2130              		.loc 1 3864 0
 2131 001e 816D     		ldr	r1, [r0, #88]
 2132              	.LVL165:
3865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 2133              		.loc 1 3865 0
 2134 0020 1340     		ands	r3, r3, r2
 2135              	.LVL166:
ARM GAS  /tmp/cc5hFHZt.s 			page 112


 2136 0022 0B80     		strh	r3, [r1]	@ movhi
3866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
 2137              		.loc 1 3866 0
 2138 0024 836D     		ldr	r3, [r0, #88]
 2139 0026 0233     		adds	r3, r3, #2
 2140 0028 8365     		str	r3, [r0, #88]
3867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2141              		.loc 1 3867 0
 2142 002a B0F85E30 		ldrh	r3, [r0, #94]
 2143 002e 013B     		subs	r3, r3, #1
 2144 0030 9BB2     		uxth	r3, r3
 2145 0032 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2146              		.loc 1 3869 0
 2147 0036 B0F85E30 		ldrh	r3, [r0, #94]
 2148 003a 9BB2     		uxth	r3, r3
 2149 003c 002B     		cmp	r3, #0
 2150 003e EBD1     		bne	.L168
3872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2151              		.loc 1 3872 0
 2152 0040 0268     		ldr	r2, [r0]
 2153              	.LVL167:
 2154 0042 1368     		ldr	r3, [r2]
 2155 0044 23F49073 		bic	r3, r3, #288
 2156 0048 1360     		str	r3, [r2]
3875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2157              		.loc 1 3875 0
 2158 004a 0268     		ldr	r2, [r0]
 2159 004c 9368     		ldr	r3, [r2, #8]
 2160 004e 23F00103 		bic	r3, r3, #1
 2161 0052 9360     		str	r3, [r2, #8]
3878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2162              		.loc 1 3878 0
 2163 0054 2023     		movs	r3, #32
 2164 0056 C0F88430 		str	r3, [r0, #132]
3881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2165              		.loc 1 3881 0
 2166 005a 0023     		movs	r3, #0
 2167 005c C366     		str	r3, [r0, #108]
3888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2168              		.loc 1 3888 0
 2169 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2170              	.LVL168:
 2171 0062 D9E7     		b	.L168
 2172              		.cfi_endproc
 2173              	.LFE196:
 2175              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 2176              		.align	1
 2177              		.syntax unified
 2178              		.thumb
 2179              		.thumb_func
 2180              		.fpu fpv4-sp-d16
 2182              	UART_RxISR_8BIT_FIFOEN:
 2183              	.LFB197:
3898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
ARM GAS  /tmp/cc5hFHZt.s 			page 113


3901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2184              		.loc 1 3907 0
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 0
 2187              		@ frame_needed = 0, uses_anonymous_args = 0
 2188              	.LVL169:
 2189 0000 70B5     		push	{r4, r5, r6, lr}
 2190              	.LCFI16:
 2191              		.cfi_def_cfa_offset 16
 2192              		.cfi_offset 4, -16
 2193              		.cfi_offset 5, -12
 2194              		.cfi_offset 6, -8
 2195              		.cfi_offset 14, -4
3908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 2196              		.loc 1 3908 0
 2197 0002 B0F86050 		ldrh	r5, [r0, #96]
 2198              	.LVL170:
3909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t   nb_rx_data;
3911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  rxdatacount;
3912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2199              		.loc 1 3914 0
 2200 0006 D0F88430 		ldr	r3, [r0, #132]
 2201 000a 222B     		cmp	r3, #34
 2202 000c 05D0     		beq	.L180
3915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
3917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr++;
3921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
3922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
3924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
3926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
3929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
3930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
3933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Clear RxISR function pointer */
3936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = NULL;
3937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  /tmp/cc5hFHZt.s 			page 114


3939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
3944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
3949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
3950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
3951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     */
3952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
3953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
3954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
3956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
3957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Update the RxISR function pointer */
3959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
3960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
3962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
3963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2203              		.loc 1 3968 0
 2204 000e 0268     		ldr	r2, [r0]
 2205 0010 9369     		ldr	r3, [r2, #24]
 2206 0012 43F00803 		orr	r3, r3, #8
 2207 0016 9361     		str	r3, [r2, #24]
 2208              	.LVL171:
 2209              	.L173:
3969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2210              		.loc 1 3970 0
 2211 0018 70BD     		pop	{r4, r5, r6, pc}
 2212              	.LVL172:
 2213              	.L180:
 2214 001a 0446     		mov	r4, r0
3916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2215              		.loc 1 3916 0
 2216 001c B0F86860 		ldrh	r6, [r0, #104]
 2217              	.LVL173:
 2218 0020 01E0     		b	.L175
 2219              	.LVL174:
 2220              	.L176:
3916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2221              		.loc 1 3916 0 is_stmt 0 discriminator 2
 2222 0022 013E     		subs	r6, r6, #1
 2223              	.LVL175:
 2224 0024 B6B2     		uxth	r6, r6
 2225              	.LVL176:
ARM GAS  /tmp/cc5hFHZt.s 			page 115


 2226              	.L175:
3916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2227              		.loc 1 3916 0 discriminator 1
 2228 0026 46B3     		cbz	r6, .L181
3918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 2229              		.loc 1 3918 0 is_stmt 1
 2230 0028 2368     		ldr	r3, [r4]
 2231 002a 596A     		ldr	r1, [r3, #36]
 2232              	.LVL177:
3919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr++;
 2233              		.loc 1 3919 0
 2234 002c EBB2     		uxtb	r3, r5
 2235 002e A26D     		ldr	r2, [r4, #88]
 2236 0030 0B40     		ands	r3, r3, r1
 2237 0032 1370     		strb	r3, [r2]
3920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
 2238              		.loc 1 3920 0
 2239 0034 A36D     		ldr	r3, [r4, #88]
 2240 0036 0133     		adds	r3, r3, #1
 2241 0038 A365     		str	r3, [r4, #88]
3921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2242              		.loc 1 3921 0
 2243 003a B4F85E30 		ldrh	r3, [r4, #94]
 2244 003e 013B     		subs	r3, r3, #1
 2245 0040 9BB2     		uxth	r3, r3
 2246 0042 A4F85E30 		strh	r3, [r4, #94]	@ movhi
3923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 2247              		.loc 1 3923 0
 2248 0046 B4F85E30 		ldrh	r3, [r4, #94]
 2249 004a 9BB2     		uxth	r3, r3
 2250 004c 002B     		cmp	r3, #0
 2251 004e E8D1     		bne	.L176
3926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2252              		.loc 1 3926 0
 2253 0050 2268     		ldr	r2, [r4]
 2254 0052 1368     		ldr	r3, [r2]
 2255 0054 23F48073 		bic	r3, r3, #256
 2256 0058 1360     		str	r3, [r2]
3930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2257              		.loc 1 3930 0
 2258 005a 2268     		ldr	r2, [r4]
 2259 005c 9368     		ldr	r3, [r2, #8]
 2260 005e 23F08053 		bic	r3, r3, #268435456
 2261 0062 23F00103 		bic	r3, r3, #1
 2262 0066 9360     		str	r3, [r2, #8]
3933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2263              		.loc 1 3933 0
 2264 0068 2023     		movs	r3, #32
 2265 006a C4F88430 		str	r3, [r4, #132]
3936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2266              		.loc 1 3936 0
 2267 006e 0023     		movs	r3, #0
 2268 0070 E366     		str	r3, [r4, #108]
3943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2269              		.loc 1 3943 0
 2270 0072 2046     		mov	r0, r4
 2271 0074 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
ARM GAS  /tmp/cc5hFHZt.s 			page 116


 2272              	.LVL178:
 2273 0078 D3E7     		b	.L176
 2274              	.L181:
3952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 2275              		.loc 1 3952 0
 2276 007a B4F85E30 		ldrh	r3, [r4, #94]
 2277 007e 9BB2     		uxth	r3, r3
 2278              	.LVL179:
3953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2279              		.loc 1 3953 0
 2280 0080 002B     		cmp	r3, #0
 2281 0082 C9D0     		beq	.L173
3953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2282              		.loc 1 3953 0 is_stmt 0 discriminator 1
 2283 0084 B4F86820 		ldrh	r2, [r4, #104]
 2284 0088 9A42     		cmp	r2, r3
 2285 008a C5D9     		bls	.L173
3956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2286              		.loc 1 3956 0 is_stmt 1
 2287 008c 2268     		ldr	r2, [r4]
 2288 008e 9368     		ldr	r3, [r2, #8]
 2289              	.LVL180:
 2290 0090 23F08053 		bic	r3, r3, #268435456
 2291 0094 9360     		str	r3, [r2, #8]
3959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2292              		.loc 1 3959 0
 2293 0096 044B     		ldr	r3, .L182
 2294 0098 E366     		str	r3, [r4, #108]
3962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2295              		.loc 1 3962 0
 2296 009a 2268     		ldr	r2, [r4]
 2297 009c 1368     		ldr	r3, [r2]
 2298 009e 43F02003 		orr	r3, r3, #32
 2299 00a2 1360     		str	r3, [r2]
 2300 00a4 B8E7     		b	.L173
 2301              	.L183:
 2302 00a6 00BF     		.align	2
 2303              	.L182:
 2304 00a8 00000000 		.word	UART_RxISR_8BIT
 2305              		.cfi_endproc
 2306              	.LFE197:
 2308              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 2309              		.align	1
 2310              		.syntax unified
 2311              		.thumb
 2312              		.thumb_func
 2313              		.fpu fpv4-sp-d16
 2315              	UART_RxISR_16BIT_FIFOEN:
 2316              	.LFB198:
3971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length and FIFO mode is enabled.
3974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/cc5hFHZt.s 			page 117


3979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2317              		.loc 1 3980 0
 2318              		.cfi_startproc
 2319              		@ args = 0, pretend = 0, frame = 0
 2320              		@ frame_needed = 0, uses_anonymous_args = 0
 2321              	.LVL181:
 2322 0000 70B5     		push	{r4, r5, r6, lr}
 2323              	.LCFI17:
 2324              		.cfi_def_cfa_offset 16
 2325              		.cfi_offset 4, -16
 2326              		.cfi_offset 5, -12
 2327              		.cfi_offset 6, -8
 2328              		.cfi_offset 14, -4
3981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 2329              		.loc 1 3982 0
 2330 0002 B0F86060 		ldrh	r6, [r0, #96]
 2331              	.LVL182:
3983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t   nb_rx_data;
3985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  rxdatacount;
3986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2332              		.loc 1 3988 0
 2333 0006 D0F88430 		ldr	r3, [r0, #132]
 2334 000a 222B     		cmp	r3, #34
 2335 000c 05D0     		beq	.L191
3989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
3991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
3994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
3995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
3996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
3997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
3999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
4002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
4006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
4009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Clear RxISR function pointer */
4011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = NULL;
4012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
ARM GAS  /tmp/cc5hFHZt.s 			page 118


4017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     */
4027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
4028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
4029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
4032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Update the RxISR function pointer */
4034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
4035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
4038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
4041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2336              		.loc 1 4043 0
 2337 000e 0268     		ldr	r2, [r0]
 2338 0010 9369     		ldr	r3, [r2, #24]
 2339 0012 43F00803 		orr	r3, r3, #8
 2340 0016 9361     		str	r3, [r2, #24]
 2341              	.LVL183:
 2342              	.L184:
4044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2343              		.loc 1 4045 0
 2344 0018 70BD     		pop	{r4, r5, r6, pc}
 2345              	.LVL184:
 2346              	.L191:
 2347 001a 0446     		mov	r4, r0
3990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2348              		.loc 1 3990 0
 2349 001c B0F86850 		ldrh	r5, [r0, #104]
 2350              	.LVL185:
 2351 0020 01E0     		b	.L186
 2352              	.LVL186:
 2353              	.L187:
3990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2354              		.loc 1 3990 0 is_stmt 0 discriminator 2
 2355 0022 013D     		subs	r5, r5, #1
 2356              	.LVL187:
 2357 0024 ADB2     		uxth	r5, r5
 2358              	.LVL188:
 2359              	.L186:
3990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2360              		.loc 1 3990 0 discriminator 1
ARM GAS  /tmp/cc5hFHZt.s 			page 119


 2361 0026 3DB3     		cbz	r5, .L192
3992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 2362              		.loc 1 3992 0 is_stmt 1
 2363 0028 2368     		ldr	r3, [r4]
 2364 002a 5B6A     		ldr	r3, [r3, #36]
 2365              	.LVL189:
3993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 2366              		.loc 1 3993 0
 2367 002c A26D     		ldr	r2, [r4, #88]
 2368              	.LVL190:
3994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 2369              		.loc 1 3994 0
 2370 002e 3340     		ands	r3, r3, r6
 2371              	.LVL191:
 2372 0030 1380     		strh	r3, [r2]	@ movhi
3995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
 2373              		.loc 1 3995 0
 2374 0032 A36D     		ldr	r3, [r4, #88]
 2375 0034 0233     		adds	r3, r3, #2
 2376 0036 A365     		str	r3, [r4, #88]
3996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2377              		.loc 1 3996 0
 2378 0038 B4F85E30 		ldrh	r3, [r4, #94]
 2379 003c 013B     		subs	r3, r3, #1
 2380 003e 9BB2     		uxth	r3, r3
 2381 0040 A4F85E30 		strh	r3, [r4, #94]	@ movhi
3998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 2382              		.loc 1 3998 0
 2383 0044 B4F85E30 		ldrh	r3, [r4, #94]
 2384 0048 9BB2     		uxth	r3, r3
 2385 004a 002B     		cmp	r3, #0
 2386 004c E9D1     		bne	.L187
4001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2387              		.loc 1 4001 0
 2388 004e 2268     		ldr	r2, [r4]
 2389              	.LVL192:
 2390 0050 1368     		ldr	r3, [r2]
 2391 0052 23F48073 		bic	r3, r3, #256
 2392 0056 1360     		str	r3, [r2]
4005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2393              		.loc 1 4005 0
 2394 0058 2268     		ldr	r2, [r4]
 2395 005a 9368     		ldr	r3, [r2, #8]
 2396 005c 23F08053 		bic	r3, r3, #268435456
 2397 0060 23F00103 		bic	r3, r3, #1
 2398 0064 9360     		str	r3, [r2, #8]
4008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2399              		.loc 1 4008 0
 2400 0066 2023     		movs	r3, #32
 2401 0068 C4F88430 		str	r3, [r4, #132]
4011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2402              		.loc 1 4011 0
 2403 006c 0023     		movs	r3, #0
 2404 006e E366     		str	r3, [r4, #108]
4018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2405              		.loc 1 4018 0
 2406 0070 2046     		mov	r0, r4
ARM GAS  /tmp/cc5hFHZt.s 			page 120


 2407 0072 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2408              	.LVL193:
 2409 0076 D4E7     		b	.L187
 2410              	.L192:
4027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 2411              		.loc 1 4027 0
 2412 0078 B4F85E30 		ldrh	r3, [r4, #94]
 2413 007c 9BB2     		uxth	r3, r3
 2414              	.LVL194:
4028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2415              		.loc 1 4028 0
 2416 007e 002B     		cmp	r3, #0
 2417 0080 CAD0     		beq	.L184
4028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2418              		.loc 1 4028 0 is_stmt 0 discriminator 1
 2419 0082 B4F86820 		ldrh	r2, [r4, #104]
 2420 0086 9A42     		cmp	r2, r3
 2421 0088 C6D9     		bls	.L184
4031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2422              		.loc 1 4031 0 is_stmt 1
 2423 008a 2268     		ldr	r2, [r4]
 2424 008c 9368     		ldr	r3, [r2, #8]
 2425              	.LVL195:
 2426 008e 23F08053 		bic	r3, r3, #268435456
 2427 0092 9360     		str	r3, [r2, #8]
4034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2428              		.loc 1 4034 0
 2429 0094 034B     		ldr	r3, .L193
 2430 0096 E366     		str	r3, [r4, #108]
4037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2431              		.loc 1 4037 0
 2432 0098 2268     		ldr	r2, [r4]
 2433 009a 1368     		ldr	r3, [r2]
 2434 009c 43F02003 		orr	r3, r3, #32
 2435 00a0 1360     		str	r3, [r2]
 2436 00a2 B9E7     		b	.L184
 2437              	.L194:
 2438              		.align	2
 2439              	.L193:
 2440 00a4 00000000 		.word	UART_RxISR_16BIT
 2441              		.cfi_endproc
 2442              	.LFE198:
 2444              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2445              		.align	1
 2446              		.syntax unified
 2447              		.thumb
 2448              		.thumb_func
 2449              		.fpu fpv4-sp-d16
 2451              	UART_DMAReceiveCplt:
 2452              	.LFB182:
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2453              		.loc 1 3352 0
 2454              		.cfi_startproc
 2455              		@ args = 0, pretend = 0, frame = 0
 2456              		@ frame_needed = 0, uses_anonymous_args = 0
 2457              	.LVL196:
 2458 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/cc5hFHZt.s 			page 121


 2459              	.LCFI18:
 2460              		.cfi_def_cfa_offset 8
 2461              		.cfi_offset 3, -8
 2462              		.cfi_offset 14, -4
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2463              		.loc 1 3353 0
 2464 0002 836A     		ldr	r3, [r0, #40]
 2465              	.LVL197:
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2466              		.loc 1 3356 0
 2467 0004 0268     		ldr	r2, [r0]
 2468 0006 1268     		ldr	r2, [r2]
 2469 0008 12F0200F 		tst	r2, #32
 2470 000c 14D1     		bne	.L196
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2471              		.loc 1 3358 0
 2472 000e 0022     		movs	r2, #0
 2473 0010 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2474              		.loc 1 3361 0
 2475 0014 1968     		ldr	r1, [r3]
 2476 0016 0A68     		ldr	r2, [r1]
 2477 0018 22F48072 		bic	r2, r2, #256
 2478 001c 0A60     		str	r2, [r1]
3362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2479              		.loc 1 3362 0
 2480 001e 1968     		ldr	r1, [r3]
 2481 0020 8A68     		ldr	r2, [r1, #8]
 2482 0022 22F00102 		bic	r2, r2, #1
 2483 0026 8A60     		str	r2, [r1, #8]
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2484              		.loc 1 3366 0
 2485 0028 1968     		ldr	r1, [r3]
 2486 002a 8A68     		ldr	r2, [r1, #8]
 2487 002c 22F04002 		bic	r2, r2, #64
 2488 0030 8A60     		str	r2, [r1, #8]
3369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2489              		.loc 1 3369 0
 2490 0032 2022     		movs	r2, #32
 2491 0034 C3F88420 		str	r2, [r3, #132]
 2492              	.L196:
3377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2493              		.loc 1 3377 0
 2494 0038 1846     		mov	r0, r3
 2495              	.LVL198:
 2496 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2497              	.LVL199:
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2498              		.loc 1 3379 0
 2499 003e 08BD     		pop	{r3, pc}
 2500              		.cfi_endproc
 2501              	.LFE182:
 2503              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2504              		.align	1
 2505              		.weak	HAL_UART_RxHalfCpltCallback
 2506              		.syntax unified
 2507              		.thumb
ARM GAS  /tmp/cc5hFHZt.s 			page 122


 2508              		.thumb_func
 2509              		.fpu fpv4-sp-d16
 2511              	HAL_UART_RxHalfCpltCallback:
 2512              	.LFB158:
2465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2513              		.loc 1 2465 0
 2514              		.cfi_startproc
 2515              		@ args = 0, pretend = 0, frame = 0
 2516              		@ frame_needed = 0, uses_anonymous_args = 0
 2517              		@ link register save eliminated.
 2518              	.LVL200:
2472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2519              		.loc 1 2472 0
 2520 0000 7047     		bx	lr
 2521              		.cfi_endproc
 2522              	.LFE158:
 2524              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2525              		.align	1
 2526              		.syntax unified
 2527              		.thumb
 2528              		.thumb_func
 2529              		.fpu fpv4-sp-d16
 2531              	UART_DMARxHalfCplt:
 2532              	.LFB183:
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2533              		.loc 1 3387 0
 2534              		.cfi_startproc
 2535              		@ args = 0, pretend = 0, frame = 0
 2536              		@ frame_needed = 0, uses_anonymous_args = 0
 2537              	.LVL201:
 2538 0000 08B5     		push	{r3, lr}
 2539              	.LCFI19:
 2540              		.cfi_def_cfa_offset 8
 2541              		.cfi_offset 3, -8
 2542              		.cfi_offset 14, -4
 2543              	.LVL202:
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2544              		.loc 1 3395 0
 2545 0002 806A     		ldr	r0, [r0, #40]
 2546              	.LVL203:
 2547 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2548              	.LVL204:
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2549              		.loc 1 3397 0
 2550 0008 08BD     		pop	{r3, pc}
 2551              		.cfi_endproc
 2552              	.LFE183:
 2554              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2555              		.align	1
 2556              		.weak	HAL_UART_ErrorCallback
 2557              		.syntax unified
 2558              		.thumb
 2559              		.thumb_func
 2560              		.fpu fpv4-sp-d16
 2562              	HAL_UART_ErrorCallback:
 2563              	.LFB159:
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/cc5hFHZt.s 			page 123


 2564              		.loc 1 2480 0
 2565              		.cfi_startproc
 2566              		@ args = 0, pretend = 0, frame = 0
 2567              		@ frame_needed = 0, uses_anonymous_args = 0
 2568              		@ link register save eliminated.
 2569              	.LVL205:
2487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2570              		.loc 1 2487 0
 2571 0000 7047     		bx	lr
 2572              		.cfi_endproc
 2573              	.LFE159:
 2575              		.section	.text.UART_DMAError,"ax",%progbits
 2576              		.align	1
 2577              		.syntax unified
 2578              		.thumb
 2579              		.thumb_func
 2580              		.fpu fpv4-sp-d16
 2582              	UART_DMAError:
 2583              	.LFB184:
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2584              		.loc 1 3405 0
 2585              		.cfi_startproc
 2586              		@ args = 0, pretend = 0, frame = 0
 2587              		@ frame_needed = 0, uses_anonymous_args = 0
 2588              	.LVL206:
 2589 0000 38B5     		push	{r3, r4, r5, lr}
 2590              	.LCFI20:
 2591              		.cfi_def_cfa_offset 16
 2592              		.cfi_offset 3, -16
 2593              		.cfi_offset 4, -12
 2594              		.cfi_offset 5, -8
 2595              		.cfi_offset 14, -4
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2596              		.loc 1 3406 0
 2597 0002 846A     		ldr	r4, [r0, #40]
 2598              	.LVL207:
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2599              		.loc 1 3408 0
 2600 0004 D4F88020 		ldr	r2, [r4, #128]
 2601              	.LVL208:
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2602              		.loc 1 3409 0
 2603 0008 D4F88450 		ldr	r5, [r4, #132]
 2604              	.LVL209:
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2605              		.loc 1 3412 0
 2606 000c 2368     		ldr	r3, [r4]
 2607 000e 9B68     		ldr	r3, [r3, #8]
 2608 0010 13F0800F 		tst	r3, #128
 2609 0014 01D0     		beq	.L203
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2610              		.loc 1 3412 0 is_stmt 0 discriminator 1
 2611 0016 212A     		cmp	r2, #33
 2612 0018 10D0     		beq	.L206
 2613              	.LVL210:
 2614              	.L203:
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
ARM GAS  /tmp/cc5hFHZt.s 			page 124


 2615              		.loc 1 3420 0 is_stmt 1
 2616 001a 2368     		ldr	r3, [r4]
 2617 001c 9B68     		ldr	r3, [r3, #8]
 2618 001e 13F0400F 		tst	r3, #64
 2619 0022 01D0     		beq	.L204
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2620              		.loc 1 3420 0 is_stmt 0 discriminator 1
 2621 0024 222D     		cmp	r5, #34
 2622 0026 10D0     		beq	.L207
 2623              	.L204:
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2624              		.loc 1 3427 0 is_stmt 1
 2625 0028 D4F88830 		ldr	r3, [r4, #136]
 2626 002c 43F01003 		orr	r3, r3, #16
 2627 0030 C4F88830 		str	r3, [r4, #136]
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2628              		.loc 1 3434 0
 2629 0034 2046     		mov	r0, r4
 2630 0036 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2631              	.LVL211:
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2632              		.loc 1 3436 0
 2633 003a 38BD     		pop	{r3, r4, r5, pc}
 2634              	.LVL212:
 2635              	.L206:
3415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2636              		.loc 1 3415 0
 2637 003c 0023     		movs	r3, #0
 2638 003e A4F85630 		strh	r3, [r4, #86]	@ movhi
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2639              		.loc 1 3416 0
 2640 0042 2046     		mov	r0, r4
 2641              	.LVL213:
 2642 0044 FFF7FEFF 		bl	UART_EndTxTransfer
 2643              	.LVL214:
 2644 0048 E7E7     		b	.L203
 2645              	.L207:
3423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2646              		.loc 1 3423 0
 2647 004a 0023     		movs	r3, #0
 2648 004c A4F85E30 		strh	r3, [r4, #94]	@ movhi
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2649              		.loc 1 3424 0
 2650 0050 2046     		mov	r0, r4
 2651 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 2652              	.LVL215:
 2653 0056 E7E7     		b	.L204
 2654              		.cfi_endproc
 2655              	.LFE184:
 2657              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2658              		.align	1
 2659              		.global	HAL_UART_IRQHandler
 2660              		.syntax unified
 2661              		.thumb
 2662              		.thumb_func
 2663              		.fpu fpv4-sp-d16
 2665              	HAL_UART_IRQHandler:
ARM GAS  /tmp/cc5hFHZt.s 			page 125


 2666              	.LFB154:
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2667              		.loc 1 2188 0
 2668              		.cfi_startproc
 2669              		@ args = 0, pretend = 0, frame = 0
 2670              		@ frame_needed = 0, uses_anonymous_args = 0
 2671              	.LVL216:
 2672 0000 70B5     		push	{r4, r5, r6, lr}
 2673              	.LCFI21:
 2674              		.cfi_def_cfa_offset 16
 2675              		.cfi_offset 4, -16
 2676              		.cfi_offset 5, -12
 2677              		.cfi_offset 6, -8
 2678              		.cfi_offset 14, -4
 2679 0002 0446     		mov	r4, r0
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2680              		.loc 1 2189 0
 2681 0004 0168     		ldr	r1, [r0]
 2682 0006 CB69     		ldr	r3, [r1, #28]
 2683              	.LVL217:
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2684              		.loc 1 2190 0
 2685 0008 0D68     		ldr	r5, [r1]
 2686              	.LVL218:
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2687              		.loc 1 2191 0
 2688 000a 8868     		ldr	r0, [r1, #8]
 2689              	.LVL219:
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (errorflags == 0U)
 2690              		.loc 1 2197 0
 2691 000c 40F60F02 		movw	r2, #2063
 2692              	.LVL220:
2198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2693              		.loc 1 2198 0
 2694 0010 1A40     		ands	r2, r3, r2
 2695              	.LVL221:
 2696 0012 0DD1     		bne	.L209
2201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 2697              		.loc 1 2201 0
 2698 0014 13F0200F 		tst	r3, #32
 2699 0018 0AD0     		beq	.L209
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 2700              		.loc 1 2202 0
 2701 001a 15F0200F 		tst	r5, #32
 2702 001e 02D1     		bne	.L210
2203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2703              		.loc 1 2203 0
 2704 0020 10F0805F 		tst	r0, #268435456
 2705 0024 04D0     		beq	.L209
 2706              	.L210:
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 2707              		.loc 1 2205 0
 2708 0026 E36E     		ldr	r3, [r4, #108]
 2709              	.LVL222:
 2710 0028 0BB1     		cbz	r3, .L208
2207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 2711              		.loc 1 2207 0
ARM GAS  /tmp/cc5hFHZt.s 			page 126


 2712 002a 2046     		mov	r0, r4
 2713              	.LVL223:
 2714 002c 9847     		blx	r3
 2715              	.LVL224:
 2716              	.L208:
2412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2717              		.loc 1 2412 0
 2718 002e 70BD     		pop	{r4, r5, r6, pc}
 2719              	.LVL225:
 2720              	.L209:
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 2721              		.loc 1 2214 0
 2722 0030 002A     		cmp	r2, #0
 2723 0032 00F09580 		beq	.L212
2215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 2724              		.loc 1 2215 0
 2725 0036 684A     		ldr	r2, .L235
 2726              	.LVL226:
 2727 0038 0240     		ands	r2, r0, r2
 2728 003a 03D1     		bne	.L213
2216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2729              		.loc 1 2216 0
 2730 003c 674E     		ldr	r6, .L235+4
 2731 003e 3542     		tst	r5, r6
 2732 0040 00F08E80 		beq	.L212
 2733              	.L213:
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2734              		.loc 1 2219 0
 2735 0044 13F0010F 		tst	r3, #1
 2736 0048 09D0     		beq	.L214
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2737              		.loc 1 2219 0 is_stmt 0 discriminator 1
 2738 004a 15F4807F 		tst	r5, #256
 2739 004e 06D0     		beq	.L214
2221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2740              		.loc 1 2221 0 is_stmt 1
 2741 0050 0126     		movs	r6, #1
 2742 0052 0E62     		str	r6, [r1, #32]
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2743              		.loc 1 2223 0
 2744 0054 D4F88810 		ldr	r1, [r4, #136]
 2745 0058 3143     		orrs	r1, r1, r6
 2746 005a C4F88810 		str	r1, [r4, #136]
 2747              	.L214:
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2748              		.loc 1 2227 0
 2749 005e 13F0020F 		tst	r3, #2
 2750 0062 0BD0     		beq	.L215
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2751              		.loc 1 2227 0 is_stmt 0 discriminator 1
 2752 0064 10F0010F 		tst	r0, #1
 2753 0068 08D0     		beq	.L215
2229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2754              		.loc 1 2229 0 is_stmt 1
 2755 006a 2168     		ldr	r1, [r4]
 2756 006c 0226     		movs	r6, #2
 2757 006e 0E62     		str	r6, [r1, #32]
ARM GAS  /tmp/cc5hFHZt.s 			page 127


2231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2758              		.loc 1 2231 0
 2759 0070 D4F88810 		ldr	r1, [r4, #136]
 2760 0074 41F00401 		orr	r1, r1, #4
 2761 0078 C4F88810 		str	r1, [r4, #136]
 2762              	.L215:
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2763              		.loc 1 2235 0
 2764 007c 13F0040F 		tst	r3, #4
 2765 0080 0BD0     		beq	.L216
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2766              		.loc 1 2235 0 is_stmt 0 discriminator 1
 2767 0082 10F0010F 		tst	r0, #1
 2768 0086 08D0     		beq	.L216
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2769              		.loc 1 2237 0 is_stmt 1
 2770 0088 2168     		ldr	r1, [r4]
 2771 008a 0426     		movs	r6, #4
 2772 008c 0E62     		str	r6, [r1, #32]
2239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2773              		.loc 1 2239 0
 2774 008e D4F88810 		ldr	r1, [r4, #136]
 2775 0092 41F00201 		orr	r1, r1, #2
 2776 0096 C4F88810 		str	r1, [r4, #136]
 2777              	.L216:
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 2778              		.loc 1 2243 0
 2779 009a 13F0080F 		tst	r3, #8
 2780 009e 0BD0     		beq	.L217
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 2781              		.loc 1 2244 0
 2782 00a0 15F0200F 		tst	r5, #32
 2783 00a4 00D1     		bne	.L218
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 2784              		.loc 1 2244 0 is_stmt 0 discriminator 1
 2785 00a6 3AB1     		cbz	r2, .L217
 2786              	.L218:
2247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2787              		.loc 1 2247 0 is_stmt 1
 2788 00a8 2268     		ldr	r2, [r4]
 2789 00aa 0821     		movs	r1, #8
 2790 00ac 1162     		str	r1, [r2, #32]
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2791              		.loc 1 2249 0
 2792 00ae D4F88820 		ldr	r2, [r4, #136]
 2793 00b2 0A43     		orrs	r2, r2, r1
 2794 00b4 C4F88820 		str	r2, [r4, #136]
 2795              	.L217:
2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2796              		.loc 1 2253 0
 2797 00b8 13F4006F 		tst	r3, #2048
 2798 00bc 0CD0     		beq	.L219
2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2799              		.loc 1 2253 0 is_stmt 0 discriminator 1
 2800 00be 15F0806F 		tst	r5, #67108864
 2801 00c2 09D0     		beq	.L219
2255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 128


 2802              		.loc 1 2255 0 is_stmt 1
 2803 00c4 2268     		ldr	r2, [r4]
 2804 00c6 4FF40061 		mov	r1, #2048
 2805 00ca 1162     		str	r1, [r2, #32]
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2806              		.loc 1 2257 0
 2807 00cc D4F88820 		ldr	r2, [r4, #136]
 2808 00d0 42F02002 		orr	r2, r2, #32
 2809 00d4 C4F88820 		str	r2, [r4, #136]
 2810              	.L219:
2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2811              		.loc 1 2261 0
 2812 00d8 D4F88820 		ldr	r2, [r4, #136]
 2813 00dc 002A     		cmp	r2, #0
 2814 00de A6D0     		beq	.L208
2264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 2815              		.loc 1 2264 0
 2816 00e0 13F0200F 		tst	r3, #32
 2817 00e4 09D0     		beq	.L220
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 2818              		.loc 1 2265 0
 2819 00e6 15F0200F 		tst	r5, #32
 2820 00ea 02D1     		bne	.L221
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 2821              		.loc 1 2266 0
 2822 00ec 10F0805F 		tst	r0, #268435456
 2823 00f0 03D0     		beq	.L220
 2824              	.L221:
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 2825              		.loc 1 2268 0
 2826 00f2 E36E     		ldr	r3, [r4, #108]
 2827              	.LVL227:
 2828 00f4 0BB1     		cbz	r3, .L220
2270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 2829              		.loc 1 2270 0
 2830 00f6 2046     		mov	r0, r4
 2831              	.LVL228:
 2832 00f8 9847     		blx	r3
 2833              	.LVL229:
 2834              	.L220:
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2835              		.loc 1 2279 0
 2836 00fa D4F88820 		ldr	r2, [r4, #136]
 2837              	.LVL230:
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2838              		.loc 1 2280 0
 2839 00fe 2368     		ldr	r3, [r4]
 2840 0100 9B68     		ldr	r3, [r3, #8]
 2841 0102 13F0400F 		tst	r3, #64
 2842 0106 02D1     		bne	.L222
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2843              		.loc 1 2280 0 is_stmt 0 discriminator 1
 2844 0108 12F0280F 		tst	r2, #40
 2845 010c 21D0     		beq	.L223
 2846              	.L222:
2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2847              		.loc 1 2286 0 is_stmt 1
ARM GAS  /tmp/cc5hFHZt.s 			page 129


 2848 010e 2046     		mov	r0, r4
 2849 0110 FFF7FEFF 		bl	UART_EndRxTransfer
 2850              	.LVL231:
2289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 2851              		.loc 1 2289 0
 2852 0114 2368     		ldr	r3, [r4]
 2853 0116 9A68     		ldr	r2, [r3, #8]
 2854 0118 12F0400F 		tst	r2, #64
 2855 011c 15D0     		beq	.L224
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2856              		.loc 1 2291 0
 2857 011e 9A68     		ldr	r2, [r3, #8]
 2858 0120 22F04002 		bic	r2, r2, #64
 2859 0124 9A60     		str	r2, [r3, #8]
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
 2860              		.loc 1 2294 0
 2861 0126 A36F     		ldr	r3, [r4, #120]
 2862 0128 5BB1     		cbz	r3, .L225
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2863              		.loc 1 2298 0
 2864 012a 2D4A     		ldr	r2, .L235+8
 2865 012c 9A63     		str	r2, [r3, #56]
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             {
 2866              		.loc 1 2301 0
 2867 012e A06F     		ldr	r0, [r4, #120]
 2868 0130 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2869              	.LVL232:
 2870 0134 0028     		cmp	r0, #0
 2871 0136 3FF47AAF 		beq	.L208
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             }
 2872              		.loc 1 2304 0
 2873 013a A06F     		ldr	r0, [r4, #120]
 2874 013c 836B     		ldr	r3, [r0, #56]
 2875 013e 9847     		blx	r3
 2876              	.LVL233:
 2877 0140 75E7     		b	.L208
 2878              	.L225:
2315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2879              		.loc 1 2315 0
 2880 0142 2046     		mov	r0, r4
 2881 0144 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2882              	.LVL234:
 2883 0148 71E7     		b	.L208
 2884              	.L224:
2328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2885              		.loc 1 2328 0
 2886 014a 2046     		mov	r0, r4
 2887 014c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2888              	.LVL235:
 2889 0150 6DE7     		b	.L208
 2890              	.LVL236:
 2891              	.L223:
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2892              		.loc 1 2341 0
 2893 0152 2046     		mov	r0, r4
 2894 0154 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2895              	.LVL237:
ARM GAS  /tmp/cc5hFHZt.s 			page 130


2343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 2896              		.loc 1 2343 0
 2897 0158 0023     		movs	r3, #0
 2898 015a C4F88830 		str	r3, [r4, #136]
 2899 015e 66E7     		b	.L208
 2900              	.LVL238:
 2901              	.L212:
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2902              		.loc 1 2351 0
 2903 0160 13F4801F 		tst	r3, #1048576
 2904 0164 02D0     		beq	.L226
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2905              		.loc 1 2351 0 is_stmt 0 discriminator 1
 2906 0166 10F4800F 		tst	r0, #4194304
 2907 016a 0FD1     		bne	.L232
 2908              	.L226:
2369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 2909              		.loc 1 2369 0 is_stmt 1
 2910 016c 13F0800F 		tst	r3, #128
 2911 0170 13D0     		beq	.L227
2370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 2912              		.loc 1 2370 0
 2913 0172 15F0800F 		tst	r5, #128
 2914 0176 02D1     		bne	.L228
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2915              		.loc 1 2371 0
 2916 0178 10F4000F 		tst	r0, #8388608
 2917 017c 0DD0     		beq	.L227
 2918              	.L228:
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2919              		.loc 1 2373 0
 2920 017e 236F     		ldr	r3, [r4, #112]
 2921              	.LVL239:
 2922 0180 002B     		cmp	r3, #0
 2923 0182 3FF454AF 		beq	.L208
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2924              		.loc 1 2375 0
 2925 0186 2046     		mov	r0, r4
 2926              	.LVL240:
 2927 0188 9847     		blx	r3
 2928              	.LVL241:
 2929 018a 50E7     		b	.L208
 2930              	.LVL242:
 2931              	.L232:
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2932              		.loc 1 2353 0
 2933 018c 4FF48013 		mov	r3, #1048576
 2934              	.LVL243:
 2935 0190 0B62     		str	r3, [r1, #32]
2363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2936              		.loc 1 2363 0
 2937 0192 2046     		mov	r0, r4
 2938              	.LVL244:
 2939 0194 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2940              	.LVL245:
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2941              		.loc 1 2365 0
ARM GAS  /tmp/cc5hFHZt.s 			page 131


 2942 0198 49E7     		b	.L208
 2943              	.LVL246:
 2944              	.L227:
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2945              		.loc 1 2381 0
 2946 019a 13F0400F 		tst	r3, #64
 2947 019e 02D0     		beq	.L229
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2948              		.loc 1 2381 0 is_stmt 0 discriminator 1
 2949 01a0 15F0400F 		tst	r5, #64
 2950 01a4 10D1     		bne	.L233
 2951              	.L229:
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2952              		.loc 1 2388 0 is_stmt 1
 2953 01a6 13F4000F 		tst	r3, #8388608
 2954 01aa 02D0     		beq	.L230
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2955              		.loc 1 2388 0 is_stmt 0 discriminator 1
 2956 01ac 15F0804F 		tst	r5, #1073741824
 2957 01b0 0ED1     		bne	.L234
 2958              	.L230:
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2959              		.loc 1 2401 0 is_stmt 1
 2960 01b2 13F0807F 		tst	r3, #16777216
 2961 01b6 3FF43AAF 		beq	.L208
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2962              		.loc 1 2401 0 is_stmt 0 discriminator 1
 2963 01ba 002D     		cmp	r5, #0
 2964 01bc BFF637AF 		bge	.L208
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2965              		.loc 1 2408 0 is_stmt 1
 2966 01c0 2046     		mov	r0, r4
 2967              	.LVL247:
 2968 01c2 FFF7FEFF 		bl	HAL_UARTEx_RxFifoFullCallback
 2969              	.LVL248:
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2970              		.loc 1 2410 0
 2971 01c6 32E7     		b	.L208
 2972              	.LVL249:
 2973              	.L233:
2383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
 2974              		.loc 1 2383 0
 2975 01c8 2046     		mov	r0, r4
 2976              	.LVL250:
 2977 01ca FFF7FEFF 		bl	UART_EndTransmit_IT
 2978              	.LVL251:
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2979              		.loc 1 2384 0
 2980 01ce 2EE7     		b	.L208
 2981              	.LVL252:
 2982              	.L234:
2395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2983              		.loc 1 2395 0
 2984 01d0 2046     		mov	r0, r4
 2985              	.LVL253:
 2986 01d2 FFF7FEFF 		bl	HAL_UARTEx_TxFifoEmptyCallback
 2987              	.LVL254:
ARM GAS  /tmp/cc5hFHZt.s 			page 132


2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2988              		.loc 1 2397 0
 2989 01d6 2AE7     		b	.L208
 2990              	.L236:
 2991              		.align	2
 2992              	.L235:
 2993 01d8 01000010 		.word	268435457
 2994 01dc 20010004 		.word	67109152
 2995 01e0 00000000 		.word	UART_DMAAbortOnError
 2996              		.cfi_endproc
 2997              	.LFE154:
 2999              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3000              		.align	1
 3001              		.syntax unified
 3002              		.thumb
 3003              		.thumb_func
 3004              		.fpu fpv4-sp-d16
 3006              	UART_DMAAbortOnError:
 3007              	.LFB185:
3445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3008              		.loc 1 3445 0
 3009              		.cfi_startproc
 3010              		@ args = 0, pretend = 0, frame = 0
 3011              		@ frame_needed = 0, uses_anonymous_args = 0
 3012              	.LVL255:
 3013 0000 08B5     		push	{r3, lr}
 3014              	.LCFI22:
 3015              		.cfi_def_cfa_offset 8
 3016              		.cfi_offset 3, -8
 3017              		.cfi_offset 14, -4
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3018              		.loc 1 3446 0
 3019 0002 806A     		ldr	r0, [r0, #40]
 3020              	.LVL256:
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3021              		.loc 1 3447 0
 3022 0004 0023     		movs	r3, #0
 3023 0006 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3024              		.loc 1 3448 0
 3025 000a A0F85630 		strh	r3, [r0, #86]	@ movhi
3455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3026              		.loc 1 3455 0
 3027 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3028              	.LVL257:
3457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3029              		.loc 1 3457 0
 3030 0012 08BD     		pop	{r3, pc}
 3031              		.cfi_endproc
 3032              	.LFE185:
 3034              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3035              		.align	1
 3036              		.weak	HAL_UART_AbortCpltCallback
 3037              		.syntax unified
 3038              		.thumb
 3039              		.thumb_func
 3040              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc5hFHZt.s 			page 133


 3042              	HAL_UART_AbortCpltCallback:
 3043              	.LFB160:
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3044              		.loc 1 2495 0
 3045              		.cfi_startproc
 3046              		@ args = 0, pretend = 0, frame = 0
 3047              		@ frame_needed = 0, uses_anonymous_args = 0
 3048              		@ link register save eliminated.
 3049              	.LVL258:
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3050              		.loc 1 2502 0
 3051 0000 7047     		bx	lr
 3052              		.cfi_endproc
 3053              	.LFE160:
 3055              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3056              		.align	1
 3057              		.global	HAL_UART_Abort_IT
 3058              		.syntax unified
 3059              		.thumb
 3060              		.thumb_func
 3061              		.fpu fpv4-sp-d16
 3063              	HAL_UART_Abort_IT:
 3064              	.LFB151:
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3065              		.loc 1 1869 0
 3066              		.cfi_startproc
 3067              		@ args = 0, pretend = 0, frame = 0
 3068              		@ frame_needed = 0, uses_anonymous_args = 0
 3069              	.LVL259:
 3070 0000 10B5     		push	{r4, lr}
 3071              	.LCFI23:
 3072              		.cfi_def_cfa_offset 8
 3073              		.cfi_offset 4, -8
 3074              		.cfi_offset 14, -4
 3075 0002 0446     		mov	r4, r0
 3076              	.LVL260:
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                    USART_CR1_TXEIE_TXFNFIE));
 3077              		.loc 1 1873 0
 3078 0004 0268     		ldr	r2, [r0]
 3079 0006 1368     		ldr	r3, [r2]
 3080 0008 23F4F073 		bic	r3, r3, #480
 3081 000c 1360     		str	r3, [r2]
1875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3082              		.loc 1 1875 0
 3083 000e 0268     		ldr	r2, [r0]
 3084 0010 9368     		ldr	r3, [r2, #8]
 3085 0012 23F08453 		bic	r3, r3, #276824064
 3086 0016 23F00103 		bic	r3, r3, #1
 3087 001a 9360     		str	r3, [r2, #8]
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3088              		.loc 1 1880 0
 3089 001c 436F     		ldr	r3, [r0, #116]
 3090 001e 33B1     		cbz	r3, .L241
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3091              		.loc 1 1884 0
 3092 0020 0268     		ldr	r2, [r0]
 3093 0022 9268     		ldr	r2, [r2, #8]
ARM GAS  /tmp/cc5hFHZt.s 			page 134


 3094 0024 12F0800F 		tst	r2, #128
 3095 0028 1FD0     		beq	.L242
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3096              		.loc 1 1886 0
 3097 002a 324A     		ldr	r2, .L255
 3098 002c 9A63     		str	r2, [r3, #56]
 3099              	.L241:
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3100              		.loc 1 1894 0
 3101 002e A36F     		ldr	r3, [r4, #120]
 3102 0030 33B1     		cbz	r3, .L243
1898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3103              		.loc 1 1898 0
 3104 0032 2268     		ldr	r2, [r4]
 3105 0034 9268     		ldr	r2, [r2, #8]
 3106 0036 12F0400F 		tst	r2, #64
 3107 003a 19D0     		beq	.L244
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3108              		.loc 1 1900 0
 3109 003c 2E4A     		ldr	r2, .L255+4
 3110 003e 9A63     		str	r2, [r3, #56]
 3111              	.L243:
1909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3112              		.loc 1 1909 0
 3113 0040 2368     		ldr	r3, [r4]
 3114 0042 9A68     		ldr	r2, [r3, #8]
 3115 0044 12F0800F 		tst	r2, #128
 3116 0048 15D0     		beq	.L250
1912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3117              		.loc 1 1912 0
 3118 004a 9A68     		ldr	r2, [r3, #8]
 3119 004c 22F08002 		bic	r2, r2, #128
 3120 0050 9A60     		str	r2, [r3, #8]
1915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3121              		.loc 1 1915 0
 3122 0052 606F     		ldr	r0, [r4, #116]
 3123              	.LVL261:
 3124 0054 0028     		cmp	r0, #0
 3125 0056 3ED0     		beq	.L251
1921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3126              		.loc 1 1921 0
 3127 0058 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3128              	.LVL262:
 3129 005c 0028     		cmp	r0, #0
 3130 005e 3CD0     		beq	.L252
1923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3131              		.loc 1 1923 0
 3132 0060 636F     		ldr	r3, [r4, #116]
 3133 0062 0022     		movs	r2, #0
 3134 0064 9A63     		str	r2, [r3, #56]
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3135              		.loc 1 1870 0
 3136 0066 0121     		movs	r1, #1
 3137 0068 06E0     		b	.L245
 3138              	.LVL263:
 3139              	.L242:
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
ARM GAS  /tmp/cc5hFHZt.s 			page 135


 3140              		.loc 1 1890 0
 3141 006a 0022     		movs	r2, #0
 3142 006c 9A63     		str	r2, [r3, #56]
 3143 006e DEE7     		b	.L241
 3144              	.L244:
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3145              		.loc 1 1904 0
 3146 0070 0022     		movs	r2, #0
 3147 0072 9A63     		str	r2, [r3, #56]
 3148 0074 E4E7     		b	.L243
 3149              	.L250:
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3150              		.loc 1 1870 0
 3151 0076 0121     		movs	r1, #1
 3152              	.LVL264:
 3153              	.L245:
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3154              		.loc 1 1933 0
 3155 0078 2368     		ldr	r3, [r4]
 3156 007a 9A68     		ldr	r2, [r3, #8]
 3157 007c 12F0400F 		tst	r2, #64
 3158 0080 2DD0     		beq	.L246
1935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3159              		.loc 1 1935 0
 3160 0082 9A68     		ldr	r2, [r3, #8]
 3161 0084 22F04002 		bic	r2, r2, #64
 3162 0088 9A60     		str	r2, [r3, #8]
1938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3163              		.loc 1 1938 0
 3164 008a A06F     		ldr	r0, [r4, #120]
 3165 008c 38B3     		cbz	r0, .L246
1944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3166              		.loc 1 1944 0
 3167 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3168              	.LVL265:
 3169 0092 30B3     		cbz	r0, .L247
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 1U;
 3170              		.loc 1 1946 0
 3171 0094 A36F     		ldr	r3, [r4, #120]
 3172 0096 0022     		movs	r2, #0
 3173 0098 9A63     		str	r2, [r3, #56]
 3174              	.LVL266:
 3175              	.L248:
1960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3176              		.loc 1 1960 0
 3177 009a 0023     		movs	r3, #0
 3178 009c A4F85630 		strh	r3, [r4, #86]	@ movhi
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3179              		.loc 1 1961 0
 3180 00a0 A4F85E30 		strh	r3, [r4, #94]	@ movhi
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR = NULL;
 3181              		.loc 1 1964 0
 3182 00a4 E366     		str	r3, [r4, #108]
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3183              		.loc 1 1965 0
 3184 00a6 2367     		str	r3, [r4, #112]
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 136


 3185              		.loc 1 1968 0
 3186 00a8 C4F88830 		str	r3, [r4, #136]
1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3187              		.loc 1 1971 0
 3188 00ac 2368     		ldr	r3, [r4]
 3189 00ae 0F22     		movs	r2, #15
 3190 00b0 1A62     		str	r2, [r3, #32]
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3191              		.loc 1 1974 0
 3192 00b2 636E     		ldr	r3, [r4, #100]
 3193 00b4 B3F1005F 		cmp	r3, #536870912
 3194 00b8 15D0     		beq	.L254
 3195              	.L249:
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3196              		.loc 1 1980 0
 3197 00ba 2268     		ldr	r2, [r4]
 3198 00bc 9369     		ldr	r3, [r2, #24]
 3199 00be 43F00803 		orr	r3, r3, #8
 3200 00c2 9361     		str	r3, [r2, #24]
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3201              		.loc 1 1983 0
 3202 00c4 2023     		movs	r3, #32
 3203 00c6 C4F88030 		str	r3, [r4, #128]
1984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3204              		.loc 1 1984 0
 3205 00ca C4F88430 		str	r3, [r4, #132]
1992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3206              		.loc 1 1992 0
 3207 00ce 2046     		mov	r0, r4
 3208 00d0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3209              	.LVL267:
 3210 00d4 05E0     		b	.L247
 3211              	.LVL268:
 3212              	.L251:
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3213              		.loc 1 1870 0
 3214 00d6 0121     		movs	r1, #1
 3215 00d8 CEE7     		b	.L245
 3216              	.L252:
1927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3217              		.loc 1 1927 0
 3218 00da 0021     		movs	r1, #0
 3219 00dc CCE7     		b	.L245
 3220              	.LVL269:
 3221              	.L246:
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3222              		.loc 1 1957 0
 3223 00de 0029     		cmp	r1, #0
 3224 00e0 DBD1     		bne	.L248
 3225              	.LVL270:
 3226              	.L247:
1997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3227              		.loc 1 1997 0
 3228 00e2 0020     		movs	r0, #0
 3229 00e4 10BD     		pop	{r4, pc}
 3230              	.LVL271:
 3231              	.L254:
ARM GAS  /tmp/cc5hFHZt.s 			page 137


1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3232              		.loc 1 1976 0
 3233 00e6 2268     		ldr	r2, [r4]
 3234 00e8 9369     		ldr	r3, [r2, #24]
 3235 00ea 43F01003 		orr	r3, r3, #16
 3236 00ee 9361     		str	r3, [r2, #24]
 3237 00f0 E3E7     		b	.L249
 3238              	.L256:
 3239 00f2 00BF     		.align	2
 3240              	.L255:
 3241 00f4 00000000 		.word	UART_DMATxAbortCallback
 3242 00f8 00000000 		.word	UART_DMARxAbortCallback
 3243              		.cfi_endproc
 3244              	.LFE151:
 3246              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3247              		.align	1
 3248              		.syntax unified
 3249              		.thumb
 3250              		.thumb_func
 3251              		.fpu fpv4-sp-d16
 3253              	UART_DMARxAbortCallback:
 3254              	.LFB187:
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3255              		.loc 1 3522 0
 3256              		.cfi_startproc
 3257              		@ args = 0, pretend = 0, frame = 0
 3258              		@ frame_needed = 0, uses_anonymous_args = 0
 3259              	.LVL272:
 3260 0000 08B5     		push	{r3, lr}
 3261              	.LCFI24:
 3262              		.cfi_def_cfa_offset 8
 3263              		.cfi_offset 3, -8
 3264              		.cfi_offset 14, -4
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3265              		.loc 1 3523 0
 3266 0002 806A     		ldr	r0, [r0, #40]
 3267              	.LVL273:
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3268              		.loc 1 3525 0
 3269 0004 836F     		ldr	r3, [r0, #120]
 3270 0006 0022     		movs	r2, #0
 3271 0008 9A63     		str	r2, [r3, #56]
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3272              		.loc 1 3528 0
 3273 000a 436F     		ldr	r3, [r0, #116]
 3274 000c 13B1     		cbz	r3, .L258
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3275              		.loc 1 3530 0
 3276 000e 9B6B     		ldr	r3, [r3, #56]
 3277 0010 03B1     		cbz	r3, .L258
 3278              	.LVL274:
 3279              	.L257:
3561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3280              		.loc 1 3561 0
 3281 0012 08BD     		pop	{r3, pc}
 3282              	.LVL275:
 3283              	.L258:
ARM GAS  /tmp/cc5hFHZt.s 			page 138


3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3284              		.loc 1 3537 0
 3285 0014 0023     		movs	r3, #0
 3286 0016 A0F85630 		strh	r3, [r0, #86]	@ movhi
3538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3287              		.loc 1 3538 0
 3288 001a A0F85E30 		strh	r3, [r0, #94]	@ movhi
3541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3289              		.loc 1 3541 0
 3290 001e C0F88830 		str	r3, [r0, #136]
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3291              		.loc 1 3544 0
 3292 0022 0368     		ldr	r3, [r0]
 3293 0024 0F22     		movs	r2, #15
 3294 0026 1A62     		str	r2, [r3, #32]
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3295              		.loc 1 3547 0
 3296 0028 0268     		ldr	r2, [r0]
 3297 002a 9369     		ldr	r3, [r2, #24]
 3298 002c 43F00803 		orr	r3, r3, #8
 3299 0030 9361     		str	r3, [r2, #24]
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3300              		.loc 1 3550 0
 3301 0032 2023     		movs	r3, #32
 3302 0034 C0F88030 		str	r3, [r0, #128]
3551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3303              		.loc 1 3551 0
 3304 0038 C0F88430 		str	r3, [r0, #132]
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3305              		.loc 1 3559 0
 3306 003c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3307              	.LVL276:
 3308 0040 E7E7     		b	.L257
 3309              		.cfi_endproc
 3310              	.LFE187:
 3312              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3313              		.align	1
 3314              		.syntax unified
 3315              		.thumb
 3316              		.thumb_func
 3317              		.fpu fpv4-sp-d16
 3319              	UART_DMATxAbortCallback:
 3320              	.LFB186:
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3321              		.loc 1 3468 0
 3322              		.cfi_startproc
 3323              		@ args = 0, pretend = 0, frame = 0
 3324              		@ frame_needed = 0, uses_anonymous_args = 0
 3325              	.LVL277:
 3326 0000 08B5     		push	{r3, lr}
 3327              	.LCFI25:
 3328              		.cfi_def_cfa_offset 8
 3329              		.cfi_offset 3, -8
 3330              		.cfi_offset 14, -4
3469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3331              		.loc 1 3469 0
 3332 0002 806A     		ldr	r0, [r0, #40]
ARM GAS  /tmp/cc5hFHZt.s 			page 139


 3333              	.LVL278:
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3334              		.loc 1 3471 0
 3335 0004 436F     		ldr	r3, [r0, #116]
 3336 0006 0022     		movs	r2, #0
 3337 0008 9A63     		str	r2, [r3, #56]
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3338              		.loc 1 3474 0
 3339 000a 836F     		ldr	r3, [r0, #120]
 3340 000c 0BB1     		cbz	r3, .L262
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3341              		.loc 1 3476 0
 3342 000e 9B6B     		ldr	r3, [r3, #56]
 3343 0010 A3B9     		cbnz	r3, .L261
 3344              	.L262:
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3345              		.loc 1 3483 0
 3346 0012 0023     		movs	r3, #0
 3347 0014 A0F85630 		strh	r3, [r0, #86]	@ movhi
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3348              		.loc 1 3484 0
 3349 0018 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3350              		.loc 1 3487 0
 3351 001c C0F88830 		str	r3, [r0, #136]
3490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3352              		.loc 1 3490 0
 3353 0020 0368     		ldr	r3, [r0]
 3354 0022 0F22     		movs	r2, #15
 3355 0024 1A62     		str	r2, [r3, #32]
3493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3356              		.loc 1 3493 0
 3357 0026 436E     		ldr	r3, [r0, #100]
 3358 0028 B3F1005F 		cmp	r3, #536870912
 3359 002c 07D0     		beq	.L266
 3360              	.L264:
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3361              		.loc 1 3499 0
 3362 002e 2023     		movs	r3, #32
 3363 0030 C0F88030 		str	r3, [r0, #128]
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3364              		.loc 1 3500 0
 3365 0034 C0F88430 		str	r3, [r0, #132]
3508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3366              		.loc 1 3508 0
 3367 0038 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3368              	.LVL279:
 3369              	.L261:
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3370              		.loc 1 3510 0
 3371 003c 08BD     		pop	{r3, pc}
 3372              	.LVL280:
 3373              	.L266:
3495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3374              		.loc 1 3495 0
 3375 003e 0268     		ldr	r2, [r0]
 3376 0040 9369     		ldr	r3, [r2, #24]
ARM GAS  /tmp/cc5hFHZt.s 			page 140


 3377 0042 43F01003 		orr	r3, r3, #16
 3378 0046 9361     		str	r3, [r2, #24]
 3379 0048 F1E7     		b	.L264
 3380              		.cfi_endproc
 3381              	.LFE186:
 3383              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3384              		.align	1
 3385              		.weak	HAL_UART_AbortTransmitCpltCallback
 3386              		.syntax unified
 3387              		.thumb
 3388              		.thumb_func
 3389              		.fpu fpv4-sp-d16
 3391              	HAL_UART_AbortTransmitCpltCallback:
 3392              	.LFB161:
2510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3393              		.loc 1 2510 0
 3394              		.cfi_startproc
 3395              		@ args = 0, pretend = 0, frame = 0
 3396              		@ frame_needed = 0, uses_anonymous_args = 0
 3397              		@ link register save eliminated.
 3398              	.LVL281:
2517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3399              		.loc 1 2517 0
 3400 0000 7047     		bx	lr
 3401              		.cfi_endproc
 3402              	.LFE161:
 3404              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3405              		.align	1
 3406              		.global	HAL_UART_AbortTransmit_IT
 3407              		.syntax unified
 3408              		.thumb
 3409              		.thumb_func
 3410              		.fpu fpv4-sp-d16
 3412              	HAL_UART_AbortTransmit_IT:
 3413              	.LFB152:
2014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
 3414              		.loc 1 2014 0
 3415              		.cfi_startproc
 3416              		@ args = 0, pretend = 0, frame = 0
 3417              		@ frame_needed = 0, uses_anonymous_args = 0
 3418              	.LVL282:
 3419 0000 10B5     		push	{r4, lr}
 3420              	.LCFI26:
 3421              		.cfi_def_cfa_offset 8
 3422              		.cfi_offset 4, -8
 3423              		.cfi_offset 14, -4
 3424 0002 0446     		mov	r4, r0
2016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3425              		.loc 1 2016 0
 3426 0004 0268     		ldr	r2, [r0]
 3427 0006 1368     		ldr	r3, [r2]
 3428 0008 23F0C003 		bic	r3, r3, #192
 3429 000c 1360     		str	r3, [r2]
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3430              		.loc 1 2017 0
 3431 000e 0268     		ldr	r2, [r0]
 3432 0010 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/cc5hFHZt.s 			page 141


 3433 0012 23F40003 		bic	r3, r3, #8388608
 3434 0016 9360     		str	r3, [r2, #8]
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3435              		.loc 1 2020 0
 3436 0018 0368     		ldr	r3, [r0]
 3437 001a 9A68     		ldr	r2, [r3, #8]
 3438 001c 12F0800F 		tst	r2, #128
 3439 0020 19D0     		beq	.L269
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3440              		.loc 1 2022 0
 3441 0022 9A68     		ldr	r2, [r3, #8]
 3442 0024 22F08002 		bic	r2, r2, #128
 3443 0028 9A60     		str	r2, [r3, #8]
2025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3444              		.loc 1 2025 0
 3445 002a 436F     		ldr	r3, [r0, #116]
 3446 002c 4BB1     		cbz	r3, .L270
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3447              		.loc 1 2029 0
 3448 002e 144A     		ldr	r2, .L275
 3449 0030 9A63     		str	r2, [r3, #56]
2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3450              		.loc 1 2032 0
 3451 0032 406F     		ldr	r0, [r0, #116]
 3452              	.LVL283:
 3453 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3454              	.LVL284:
 3455 0038 D8B1     		cbz	r0, .L271
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3456              		.loc 1 2035 0
 3457 003a 606F     		ldr	r0, [r4, #116]
 3458 003c 836B     		ldr	r3, [r0, #56]
 3459 003e 9847     		blx	r3
 3460              	.LVL285:
 3461 0040 17E0     		b	.L271
 3462              	.LVL286:
 3463              	.L270:
2041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3464              		.loc 1 2041 0
 3465 0042 0023     		movs	r3, #0
 3466 0044 A0F85630 		strh	r3, [r0, #86]	@ movhi
2044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3467              		.loc 1 2044 0
 3468 0048 0367     		str	r3, [r0, #112]
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3469              		.loc 1 2047 0
 3470 004a 2023     		movs	r3, #32
 3471 004c C0F88030 		str	r3, [r0, #128]
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3472              		.loc 1 2055 0
 3473 0050 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3474              	.LVL287:
 3475 0054 0DE0     		b	.L271
 3476              	.LVL288:
 3477              	.L269:
2062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3478              		.loc 1 2062 0
ARM GAS  /tmp/cc5hFHZt.s 			page 142


 3479 0056 0022     		movs	r2, #0
 3480 0058 A0F85620 		strh	r2, [r0, #86]	@ movhi
2065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3481              		.loc 1 2065 0
 3482 005c 0267     		str	r2, [r0, #112]
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3483              		.loc 1 2068 0
 3484 005e 426E     		ldr	r2, [r0, #100]
 3485 0060 B2F1005F 		cmp	r2, #536870912
 3486 0064 07D0     		beq	.L274
 3487              	.L272:
2074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3488              		.loc 1 2074 0
 3489 0066 2023     		movs	r3, #32
 3490 0068 C4F88030 		str	r3, [r4, #128]
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3491              		.loc 1 2082 0
 3492 006c 2046     		mov	r0, r4
 3493              	.LVL289:
 3494 006e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3495              	.LVL290:
 3496              	.L271:
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3497              		.loc 1 2087 0
 3498 0072 0020     		movs	r0, #0
 3499 0074 10BD     		pop	{r4, pc}
 3500              	.LVL291:
 3501              	.L274:
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3502              		.loc 1 2070 0
 3503 0076 9A69     		ldr	r2, [r3, #24]
 3504 0078 42F01002 		orr	r2, r2, #16
 3505 007c 9A61     		str	r2, [r3, #24]
 3506 007e F2E7     		b	.L272
 3507              	.L276:
 3508              		.align	2
 3509              	.L275:
 3510 0080 00000000 		.word	UART_DMATxOnlyAbortCallback
 3511              		.cfi_endproc
 3512              	.LFE152:
 3514              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3515              		.align	1
 3516              		.syntax unified
 3517              		.thumb
 3518              		.thumb_func
 3519              		.fpu fpv4-sp-d16
 3521              	UART_DMATxOnlyAbortCallback:
 3522              	.LFB188:
3573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3523              		.loc 1 3573 0
 3524              		.cfi_startproc
 3525              		@ args = 0, pretend = 0, frame = 0
 3526              		@ frame_needed = 0, uses_anonymous_args = 0
 3527              	.LVL292:
 3528 0000 08B5     		push	{r3, lr}
 3529              	.LCFI27:
 3530              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc5hFHZt.s 			page 143


 3531              		.cfi_offset 3, -8
 3532              		.cfi_offset 14, -4
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3533              		.loc 1 3574 0
 3534 0002 806A     		ldr	r0, [r0, #40]
 3535              	.LVL293:
3576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3536              		.loc 1 3576 0
 3537 0004 0023     		movs	r3, #0
 3538 0006 A0F85630 		strh	r3, [r0, #86]	@ movhi
3579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3539              		.loc 1 3579 0
 3540 000a 436E     		ldr	r3, [r0, #100]
 3541 000c B3F1005F 		cmp	r3, #536870912
 3542 0010 05D0     		beq	.L280
 3543              	.L278:
3585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3544              		.loc 1 3585 0
 3545 0012 2023     		movs	r3, #32
 3546 0014 C0F88030 		str	r3, [r0, #128]
3593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3547              		.loc 1 3593 0
 3548 0018 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3549              	.LVL294:
3595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3550              		.loc 1 3595 0
 3551 001c 08BD     		pop	{r3, pc}
 3552              	.LVL295:
 3553              	.L280:
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3554              		.loc 1 3581 0
 3555 001e 0268     		ldr	r2, [r0]
 3556 0020 9369     		ldr	r3, [r2, #24]
 3557 0022 43F01003 		orr	r3, r3, #16
 3558 0026 9361     		str	r3, [r2, #24]
 3559 0028 F3E7     		b	.L278
 3560              		.cfi_endproc
 3561              	.LFE188:
 3563              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3564              		.align	1
 3565              		.weak	HAL_UART_AbortReceiveCpltCallback
 3566              		.syntax unified
 3567              		.thumb
 3568              		.thumb_func
 3569              		.fpu fpv4-sp-d16
 3571              	HAL_UART_AbortReceiveCpltCallback:
 3572              	.LFB162:
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3573              		.loc 1 2525 0
 3574              		.cfi_startproc
 3575              		@ args = 0, pretend = 0, frame = 0
 3576              		@ frame_needed = 0, uses_anonymous_args = 0
 3577              		@ link register save eliminated.
 3578              	.LVL296:
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3579              		.loc 1 2532 0
 3580 0000 7047     		bx	lr
ARM GAS  /tmp/cc5hFHZt.s 			page 144


 3581              		.cfi_endproc
 3582              	.LFE162:
 3584              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3585              		.align	1
 3586              		.global	HAL_UART_AbortReceive_IT
 3587              		.syntax unified
 3588              		.thumb
 3589              		.thumb_func
 3590              		.fpu fpv4-sp-d16
 3592              	HAL_UART_AbortReceive_IT:
 3593              	.LFB153:
2104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3594              		.loc 1 2104 0
 3595              		.cfi_startproc
 3596              		@ args = 0, pretend = 0, frame = 0
 3597              		@ frame_needed = 0, uses_anonymous_args = 0
 3598              	.LVL297:
 3599 0000 10B5     		push	{r4, lr}
 3600              	.LCFI28:
 3601              		.cfi_def_cfa_offset 8
 3602              		.cfi_offset 4, -8
 3603              		.cfi_offset 14, -4
 3604 0002 0446     		mov	r4, r0
2106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 3605              		.loc 1 2106 0
 3606 0004 0268     		ldr	r2, [r0]
 3607 0006 1368     		ldr	r3, [r2]
 3608 0008 23F49073 		bic	r3, r3, #288
 3609 000c 1360     		str	r3, [r2]
2107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3610              		.loc 1 2107 0
 3611 000e 0268     		ldr	r2, [r0]
 3612 0010 9368     		ldr	r3, [r2, #8]
 3613 0012 23F08053 		bic	r3, r3, #268435456
 3614 0016 23F00103 		bic	r3, r3, #1
 3615 001a 9360     		str	r3, [r2, #8]
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3616              		.loc 1 2110 0
 3617 001c 0368     		ldr	r3, [r0]
 3618 001e 9A68     		ldr	r2, [r3, #8]
 3619 0020 12F0400F 		tst	r2, #64
 3620 0024 22D0     		beq	.L283
2112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3621              		.loc 1 2112 0
 3622 0026 9A68     		ldr	r2, [r3, #8]
 3623 0028 22F04002 		bic	r2, r2, #64
 3624 002c 9A60     		str	r2, [r3, #8]
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3625              		.loc 1 2115 0
 3626 002e 836F     		ldr	r3, [r0, #120]
 3627 0030 53B1     		cbz	r3, .L284
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3628              		.loc 1 2119 0
 3629 0032 144A     		ldr	r2, .L287
 3630 0034 9A63     		str	r2, [r3, #56]
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3631              		.loc 1 2122 0
ARM GAS  /tmp/cc5hFHZt.s 			page 145


 3632 0036 806F     		ldr	r0, [r0, #120]
 3633              	.LVL298:
 3634 0038 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3635              	.LVL299:
 3636 003c 10B1     		cbz	r0, .L285
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3637              		.loc 1 2125 0
 3638 003e A06F     		ldr	r0, [r4, #120]
 3639 0040 836B     		ldr	r3, [r0, #56]
 3640 0042 9847     		blx	r3
 3641              	.LVL300:
 3642              	.L285:
2180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3643              		.loc 1 2180 0
 3644 0044 0020     		movs	r0, #0
 3645 0046 10BD     		pop	{r4, pc}
 3646              	.LVL301:
 3647              	.L284:
2131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3648              		.loc 1 2131 0
 3649 0048 0023     		movs	r3, #0
 3650 004a A0F85E30 		strh	r3, [r0, #94]	@ movhi
2134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3651              		.loc 1 2134 0
 3652 004e 8365     		str	r3, [r0, #88]
2137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3653              		.loc 1 2137 0
 3654 0050 0368     		ldr	r3, [r0]
 3655 0052 0F22     		movs	r2, #15
 3656 0054 1A62     		str	r2, [r3, #32]
2140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3657              		.loc 1 2140 0
 3658 0056 0268     		ldr	r2, [r0]
 3659 0058 9369     		ldr	r3, [r2, #24]
 3660 005a 43F00803 		orr	r3, r3, #8
 3661 005e 9361     		str	r3, [r2, #24]
2143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3662              		.loc 1 2143 0
 3663 0060 2023     		movs	r3, #32
 3664 0062 C0F88430 		str	r3, [r0, #132]
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3665              		.loc 1 2151 0
 3666 0066 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3667              	.LVL302:
 3668 006a EBE7     		b	.L285
 3669              	.LVL303:
 3670              	.L283:
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3671              		.loc 1 2158 0
 3672 006c 0022     		movs	r2, #0
 3673 006e A0F85E20 		strh	r2, [r0, #94]	@ movhi
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3674              		.loc 1 2161 0
 3675 0072 8265     		str	r2, [r0, #88]
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3676              		.loc 1 2164 0
 3677 0074 0F22     		movs	r2, #15
ARM GAS  /tmp/cc5hFHZt.s 			page 146


 3678 0076 1A62     		str	r2, [r3, #32]
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3679              		.loc 1 2167 0
 3680 0078 2023     		movs	r3, #32
 3681 007a C0F88430 		str	r3, [r0, #132]
2175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3682              		.loc 1 2175 0
 3683 007e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3684              	.LVL304:
 3685 0082 DFE7     		b	.L285
 3686              	.L288:
 3687              		.align	2
 3688              	.L287:
 3689 0084 00000000 		.word	UART_DMARxOnlyAbortCallback
 3690              		.cfi_endproc
 3691              	.LFE153:
 3693              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3694              		.align	1
 3695              		.syntax unified
 3696              		.thumb
 3697              		.thumb_func
 3698              		.fpu fpv4-sp-d16
 3700              	UART_DMARxOnlyAbortCallback:
 3701              	.LFB189:
3606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3702              		.loc 1 3606 0
 3703              		.cfi_startproc
 3704              		@ args = 0, pretend = 0, frame = 0
 3705              		@ frame_needed = 0, uses_anonymous_args = 0
 3706              	.LVL305:
 3707 0000 08B5     		push	{r3, lr}
 3708              	.LCFI29:
 3709              		.cfi_def_cfa_offset 8
 3710              		.cfi_offset 3, -8
 3711              		.cfi_offset 14, -4
3607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3712              		.loc 1 3607 0
 3713 0002 806A     		ldr	r0, [r0, #40]
 3714              	.LVL306:
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3715              		.loc 1 3609 0
 3716 0004 0023     		movs	r3, #0
 3717 0006 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3718              		.loc 1 3612 0
 3719 000a 0368     		ldr	r3, [r0]
 3720 000c 0F22     		movs	r2, #15
 3721 000e 1A62     		str	r2, [r3, #32]
3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3722              		.loc 1 3615 0
 3723 0010 0268     		ldr	r2, [r0]
 3724 0012 9369     		ldr	r3, [r2, #24]
 3725 0014 43F00803 		orr	r3, r3, #8
 3726 0018 9361     		str	r3, [r2, #24]
3618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3727              		.loc 1 3618 0
 3728 001a 2023     		movs	r3, #32
ARM GAS  /tmp/cc5hFHZt.s 			page 147


 3729 001c C0F88430 		str	r3, [r0, #132]
3626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3730              		.loc 1 3626 0
 3731 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3732              	.LVL307:
3628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3733              		.loc 1 3628 0
 3734 0024 08BD     		pop	{r3, pc}
 3735              		.cfi_endproc
 3736              	.LFE189:
 3738              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 3739              		.align	1
 3740              		.global	HAL_UART_ReceiverTimeout_Config
 3741              		.syntax unified
 3742              		.thumb
 3743              		.thumb_func
 3744              		.fpu fpv4-sp-d16
 3746              	HAL_UART_ReceiverTimeout_Config:
 3747              	.LFB163:
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3748              		.loc 1 2572 0
 3749              		.cfi_startproc
 3750              		@ args = 0, pretend = 0, frame = 0
 3751              		@ frame_needed = 0, uses_anonymous_args = 0
 3752              	.LVL308:
 3753 0000 38B5     		push	{r3, r4, r5, lr}
 3754              	.LCFI30:
 3755              		.cfi_def_cfa_offset 16
 3756              		.cfi_offset 3, -16
 3757              		.cfi_offset 4, -12
 3758              		.cfi_offset 5, -8
 3759              		.cfi_offset 14, -4
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3760              		.loc 1 2573 0
 3761 0002 0268     		ldr	r2, [r0]
 3762 0004 0A4B     		ldr	r3, .L296
 3763 0006 9A42     		cmp	r2, r3
 3764 0008 0AD0     		beq	.L291
 3765 000a 0D46     		mov	r5, r1
 3766 000c 0446     		mov	r4, r0
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 3767              		.loc 1 2575 0
 3768 000e B1F1807F 		cmp	r1, #16777216
 3769 0012 06D2     		bcs	.L295
 3770              	.LVL309:
 3771              	.L293:
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3772              		.loc 1 2576 0
 3773 0014 2268     		ldr	r2, [r4]
 3774 0016 5369     		ldr	r3, [r2, #20]
 3775 0018 03F07F43 		and	r3, r3, #-16777216
 3776 001c 2B43     		orrs	r3, r3, r5
 3777 001e 5361     		str	r3, [r2, #20]
 3778              	.LVL310:
 3779              	.L291:
2578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3780              		.loc 1 2578 0
ARM GAS  /tmp/cc5hFHZt.s 			page 148


 3781 0020 38BD     		pop	{r3, r4, r5, pc}
 3782              	.LVL311:
 3783              	.L295:
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 3784              		.loc 1 2575 0 discriminator 1
 3785 0022 40F60F21 		movw	r1, #2575
 3786              	.LVL312:
 3787 0026 0348     		ldr	r0, .L296+4
 3788              	.LVL313:
 3789 0028 FFF7FEFF 		bl	assert_failed
 3790              	.LVL314:
 3791 002c F2E7     		b	.L293
 3792              	.L297:
 3793 002e 00BF     		.align	2
 3794              	.L296:
 3795 0030 00800040 		.word	1073774592
 3796 0034 00000000 		.word	.LC0
 3797              		.cfi_endproc
 3798              	.LFE163:
 3800              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 3801              		.align	1
 3802              		.global	HAL_UART_EnableReceiverTimeout
 3803              		.syntax unified
 3804              		.thumb
 3805              		.thumb_func
 3806              		.fpu fpv4-sp-d16
 3808              	HAL_UART_EnableReceiverTimeout:
 3809              	.LFB164:
2587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3810              		.loc 1 2587 0
 3811              		.cfi_startproc
 3812              		@ args = 0, pretend = 0, frame = 0
 3813              		@ frame_needed = 0, uses_anonymous_args = 0
 3814              		@ link register save eliminated.
 3815              	.LVL315:
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3816              		.loc 1 2588 0
 3817 0000 0368     		ldr	r3, [r0]
 3818 0002 114A     		ldr	r2, .L303
 3819 0004 9342     		cmp	r3, r2
 3820 0006 19D0     		beq	.L300
2590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3821              		.loc 1 2590 0
 3822 0008 D0F88020 		ldr	r2, [r0, #128]
 3823 000c 202A     		cmp	r2, #32
 3824 000e 17D1     		bne	.L301
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3825              		.loc 1 2593 0
 3826 0010 90F87C20 		ldrb	r2, [r0, #124]	@ zero_extendqisi2
 3827 0014 012A     		cmp	r2, #1
 3828 0016 15D0     		beq	.L302
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3829              		.loc 1 2593 0 is_stmt 0 discriminator 2
 3830 0018 0122     		movs	r2, #1
 3831 001a 80F87C20 		strb	r2, [r0, #124]
2595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3832              		.loc 1 2595 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/cc5hFHZt.s 			page 149


 3833 001e 2422     		movs	r2, #36
 3834 0020 C0F88020 		str	r2, [r0, #128]
2598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3835              		.loc 1 2598 0 discriminator 2
 3836 0024 5A68     		ldr	r2, [r3, #4]
 3837 0026 42F40002 		orr	r2, r2, #8388608
 3838 002a 5A60     		str	r2, [r3, #4]
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3839              		.loc 1 2600 0 discriminator 2
 3840 002c 2023     		movs	r3, #32
 3841 002e C0F88030 		str	r3, [r0, #128]
2603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3842              		.loc 1 2603 0 discriminator 2
 3843 0032 0023     		movs	r3, #0
 3844 0034 80F87C30 		strb	r3, [r0, #124]
2605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3845              		.loc 1 2605 0 discriminator 2
 3846 0038 1846     		mov	r0, r3
 3847              	.LVL316:
 3848 003a 7047     		bx	lr
 3849              	.LVL317:
 3850              	.L300:
2614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3851              		.loc 1 2614 0
 3852 003c 0120     		movs	r0, #1
 3853              	.LVL318:
 3854 003e 7047     		bx	lr
 3855              	.LVL319:
 3856              	.L301:
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3857              		.loc 1 2609 0
 3858 0040 0220     		movs	r0, #2
 3859              	.LVL320:
 3860 0042 7047     		bx	lr
 3861              	.LVL321:
 3862              	.L302:
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3863              		.loc 1 2593 0
 3864 0044 0220     		movs	r0, #2
 3865              	.LVL322:
2616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3866              		.loc 1 2616 0
 3867 0046 7047     		bx	lr
 3868              	.L304:
 3869              		.align	2
 3870              	.L303:
 3871 0048 00800040 		.word	1073774592
 3872              		.cfi_endproc
 3873              	.LFE164:
 3875              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 3876              		.align	1
 3877              		.global	HAL_UART_DisableReceiverTimeout
 3878              		.syntax unified
 3879              		.thumb
 3880              		.thumb_func
 3881              		.fpu fpv4-sp-d16
 3883              	HAL_UART_DisableReceiverTimeout:
ARM GAS  /tmp/cc5hFHZt.s 			page 150


 3884              	.LFB165:
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3885              		.loc 1 2625 0
 3886              		.cfi_startproc
 3887              		@ args = 0, pretend = 0, frame = 0
 3888              		@ frame_needed = 0, uses_anonymous_args = 0
 3889              		@ link register save eliminated.
 3890              	.LVL323:
2626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3891              		.loc 1 2626 0
 3892 0000 0368     		ldr	r3, [r0]
 3893 0002 114A     		ldr	r2, .L310
 3894 0004 9342     		cmp	r3, r2
 3895 0006 19D0     		beq	.L307
2628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3896              		.loc 1 2628 0
 3897 0008 D0F88020 		ldr	r2, [r0, #128]
 3898 000c 202A     		cmp	r2, #32
 3899 000e 17D1     		bne	.L308
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3900              		.loc 1 2631 0
 3901 0010 90F87C20 		ldrb	r2, [r0, #124]	@ zero_extendqisi2
 3902 0014 012A     		cmp	r2, #1
 3903 0016 15D0     		beq	.L309
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3904              		.loc 1 2631 0 is_stmt 0 discriminator 2
 3905 0018 0122     		movs	r2, #1
 3906 001a 80F87C20 		strb	r2, [r0, #124]
2633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3907              		.loc 1 2633 0 is_stmt 1 discriminator 2
 3908 001e 2422     		movs	r2, #36
 3909 0020 C0F88020 		str	r2, [r0, #128]
2636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3910              		.loc 1 2636 0 discriminator 2
 3911 0024 5A68     		ldr	r2, [r3, #4]
 3912 0026 22F40002 		bic	r2, r2, #8388608
 3913 002a 5A60     		str	r2, [r3, #4]
2638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3914              		.loc 1 2638 0 discriminator 2
 3915 002c 2023     		movs	r3, #32
 3916 002e C0F88030 		str	r3, [r0, #128]
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3917              		.loc 1 2641 0 discriminator 2
 3918 0032 0023     		movs	r3, #0
 3919 0034 80F87C30 		strb	r3, [r0, #124]
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3920              		.loc 1 2643 0 discriminator 2
 3921 0038 1846     		mov	r0, r3
 3922              	.LVL324:
 3923 003a 7047     		bx	lr
 3924              	.LVL325:
 3925              	.L307:
2652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3926              		.loc 1 2652 0
 3927 003c 0120     		movs	r0, #1
 3928              	.LVL326:
 3929 003e 7047     		bx	lr
ARM GAS  /tmp/cc5hFHZt.s 			page 151


 3930              	.LVL327:
 3931              	.L308:
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3932              		.loc 1 2647 0
 3933 0040 0220     		movs	r0, #2
 3934              	.LVL328:
 3935 0042 7047     		bx	lr
 3936              	.LVL329:
 3937              	.L309:
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3938              		.loc 1 2631 0
 3939 0044 0220     		movs	r0, #2
 3940              	.LVL330:
2654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3941              		.loc 1 2654 0
 3942 0046 7047     		bx	lr
 3943              	.L311:
 3944              		.align	2
 3945              	.L310:
 3946 0048 00800040 		.word	1073774592
 3947              		.cfi_endproc
 3948              	.LFE165:
 3950              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3951              		.align	1
 3952              		.global	HAL_MultiProcessor_EnterMuteMode
 3953              		.syntax unified
 3954              		.thumb
 3955              		.thumb_func
 3956              		.fpu fpv4-sp-d16
 3958              	HAL_MultiProcessor_EnterMuteMode:
 3959              	.LFB168:
2703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3960              		.loc 1 2703 0
 3961              		.cfi_startproc
 3962              		@ args = 0, pretend = 0, frame = 0
 3963              		@ frame_needed = 0, uses_anonymous_args = 0
 3964              		@ link register save eliminated.
 3965              	.LVL331:
2704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 3966              		.loc 1 2704 0
 3967 0000 0268     		ldr	r2, [r0]
 3968 0002 9369     		ldr	r3, [r2, #24]
 3969 0004 43F00403 		orr	r3, r3, #4
 3970 0008 9361     		str	r3, [r2, #24]
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3971              		.loc 1 2705 0
 3972 000a 7047     		bx	lr
 3973              		.cfi_endproc
 3974              	.LFE168:
 3976              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3977              		.align	1
 3978              		.global	HAL_HalfDuplex_EnableTransmitter
 3979              		.syntax unified
 3980              		.thumb
 3981              		.thumb_func
 3982              		.fpu fpv4-sp-d16
 3984              	HAL_HalfDuplex_EnableTransmitter:
ARM GAS  /tmp/cc5hFHZt.s 			page 152


 3985              	.LFB169:
2713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3986              		.loc 1 2713 0
 3987              		.cfi_startproc
 3988              		@ args = 0, pretend = 0, frame = 0
 3989              		@ frame_needed = 0, uses_anonymous_args = 0
 3990              		@ link register save eliminated.
 3991              	.LVL332:
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3992              		.loc 1 2714 0
 3993 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 3994 0004 012B     		cmp	r3, #1
 3995 0006 17D0     		beq	.L315
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3996              		.loc 1 2714 0 is_stmt 0 discriminator 2
 3997 0008 0123     		movs	r3, #1
 3998 000a 80F87C30 		strb	r3, [r0, #124]
2715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3999              		.loc 1 2715 0 is_stmt 1 discriminator 2
 4000 000e 2423     		movs	r3, #36
 4001 0010 C0F88030 		str	r3, [r0, #128]
2718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4002              		.loc 1 2718 0 discriminator 2
 4003 0014 0268     		ldr	r2, [r0]
 4004 0016 1368     		ldr	r3, [r2]
 4005 0018 23F00C03 		bic	r3, r3, #12
 4006 001c 1360     		str	r3, [r2]
2721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4007              		.loc 1 2721 0 discriminator 2
 4008 001e 0268     		ldr	r2, [r0]
 4009 0020 1368     		ldr	r3, [r2]
 4010 0022 43F00803 		orr	r3, r3, #8
 4011 0026 1360     		str	r3, [r2]
2723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4012              		.loc 1 2723 0 discriminator 2
 4013 0028 2023     		movs	r3, #32
 4014 002a C0F88030 		str	r3, [r0, #128]
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4015              		.loc 1 2725 0 discriminator 2
 4016 002e 0023     		movs	r3, #0
 4017 0030 80F87C30 		strb	r3, [r0, #124]
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4018              		.loc 1 2727 0 discriminator 2
 4019 0034 1846     		mov	r0, r3
 4020              	.LVL333:
 4021 0036 7047     		bx	lr
 4022              	.LVL334:
 4023              	.L315:
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4024              		.loc 1 2714 0
 4025 0038 0220     		movs	r0, #2
 4026              	.LVL335:
2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4027              		.loc 1 2728 0
 4028 003a 7047     		bx	lr
 4029              		.cfi_endproc
 4030              	.LFE169:
ARM GAS  /tmp/cc5hFHZt.s 			page 153


 4032              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4033              		.align	1
 4034              		.global	HAL_HalfDuplex_EnableReceiver
 4035              		.syntax unified
 4036              		.thumb
 4037              		.thumb_func
 4038              		.fpu fpv4-sp-d16
 4040              	HAL_HalfDuplex_EnableReceiver:
 4041              	.LFB170:
2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4042              		.loc 1 2736 0
 4043              		.cfi_startproc
 4044              		@ args = 0, pretend = 0, frame = 0
 4045              		@ frame_needed = 0, uses_anonymous_args = 0
 4046              		@ link register save eliminated.
 4047              	.LVL336:
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4048              		.loc 1 2737 0
 4049 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 4050 0004 012B     		cmp	r3, #1
 4051 0006 17D0     		beq	.L318
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4052              		.loc 1 2737 0 is_stmt 0 discriminator 2
 4053 0008 0123     		movs	r3, #1
 4054 000a 80F87C30 		strb	r3, [r0, #124]
2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4055              		.loc 1 2738 0 is_stmt 1 discriminator 2
 4056 000e 2423     		movs	r3, #36
 4057 0010 C0F88030 		str	r3, [r0, #128]
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4058              		.loc 1 2741 0 discriminator 2
 4059 0014 0268     		ldr	r2, [r0]
 4060 0016 1368     		ldr	r3, [r2]
 4061 0018 23F00C03 		bic	r3, r3, #12
 4062 001c 1360     		str	r3, [r2]
2744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4063              		.loc 1 2744 0 discriminator 2
 4064 001e 0268     		ldr	r2, [r0]
 4065 0020 1368     		ldr	r3, [r2]
 4066 0022 43F00403 		orr	r3, r3, #4
 4067 0026 1360     		str	r3, [r2]
2746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4068              		.loc 1 2746 0 discriminator 2
 4069 0028 2023     		movs	r3, #32
 4070 002a C0F88030 		str	r3, [r0, #128]
2748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4071              		.loc 1 2748 0 discriminator 2
 4072 002e 0023     		movs	r3, #0
 4073 0030 80F87C30 		strb	r3, [r0, #124]
2750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4074              		.loc 1 2750 0 discriminator 2
 4075 0034 1846     		mov	r0, r3
 4076              	.LVL337:
 4077 0036 7047     		bx	lr
 4078              	.LVL338:
 4079              	.L318:
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cc5hFHZt.s 			page 154


 4080              		.loc 1 2737 0
 4081 0038 0220     		movs	r0, #2
 4082              	.LVL339:
2751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4083              		.loc 1 2751 0
 4084 003a 7047     		bx	lr
 4085              		.cfi_endproc
 4086              	.LFE170:
 4088              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4089              		.align	1
 4090              		.global	HAL_LIN_SendBreak
 4091              		.syntax unified
 4092              		.thumb
 4093              		.thumb_func
 4094              		.fpu fpv4-sp-d16
 4096              	HAL_LIN_SendBreak:
 4097              	.LFB171:
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
 4098              		.loc 1 2760 0
 4099              		.cfi_startproc
 4100              		@ args = 0, pretend = 0, frame = 0
 4101              		@ frame_needed = 0, uses_anonymous_args = 0
 4102              	.LVL340:
 4103 0000 10B5     		push	{r4, lr}
 4104              	.LCFI31:
 4105              		.cfi_def_cfa_offset 8
 4106              		.cfi_offset 4, -8
 4107              		.cfi_offset 14, -4
 4108 0002 0446     		mov	r4, r0
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4109              		.loc 1 2762 0
 4110 0004 0368     		ldr	r3, [r0]
 4111 0006 164A     		ldr	r2, .L324
 4112 0008 9342     		cmp	r3, r2
 4113 000a 10D0     		beq	.L320
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4114              		.loc 1 2762 0 is_stmt 0 discriminator 1
 4115 000c A2F57442 		sub	r2, r2, #62464
 4116 0010 9342     		cmp	r3, r2
 4117 0012 0CD0     		beq	.L320
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4118              		.loc 1 2762 0 discriminator 2
 4119 0014 02F58062 		add	r2, r2, #1024
 4120 0018 9342     		cmp	r3, r2
 4121 001a 08D0     		beq	.L320
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4122              		.loc 1 2762 0 discriminator 3
 4123 001c 02F58062 		add	r2, r2, #1024
 4124 0020 9342     		cmp	r3, r2
 4125 0022 04D0     		beq	.L320
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4126              		.loc 1 2762 0 discriminator 4
 4127 0024 40F6CA21 		movw	r1, #2762
 4128 0028 0E48     		ldr	r0, .L324+4
 4129              	.LVL341:
 4130 002a FFF7FEFF 		bl	assert_failed
 4131              	.LVL342:
ARM GAS  /tmp/cc5hFHZt.s 			page 155


 4132              	.L320:
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4133              		.loc 1 2764 0 is_stmt 1
 4134 002e 94F87C30 		ldrb	r3, [r4, #124]	@ zero_extendqisi2
 4135 0032 012B     		cmp	r3, #1
 4136 0034 11D0     		beq	.L322
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4137              		.loc 1 2764 0 is_stmt 0 discriminator 2
 4138 0036 0123     		movs	r3, #1
 4139 0038 84F87C30 		strb	r3, [r4, #124]
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4140              		.loc 1 2766 0 is_stmt 1 discriminator 2
 4141 003c 2423     		movs	r3, #36
 4142 003e C4F88030 		str	r3, [r4, #128]
2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4143              		.loc 1 2769 0 discriminator 2
 4144 0042 2268     		ldr	r2, [r4]
 4145 0044 9369     		ldr	r3, [r2, #24]
 4146 0046 43F00203 		orr	r3, r3, #2
 4147 004a 9361     		str	r3, [r2, #24]
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4148              		.loc 1 2771 0 discriminator 2
 4149 004c 2023     		movs	r3, #32
 4150 004e C4F88030 		str	r3, [r4, #128]
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4151              		.loc 1 2773 0 discriminator 2
 4152 0052 0020     		movs	r0, #0
 4153 0054 84F87C00 		strb	r0, [r4, #124]
 4154              	.L321:
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4155              		.loc 1 2776 0
 4156 0058 10BD     		pop	{r4, pc}
 4157              	.LVL343:
 4158              	.L322:
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4159              		.loc 1 2764 0
 4160 005a 0220     		movs	r0, #2
 4161 005c FCE7     		b	.L321
 4162              	.L325:
 4163 005e 00BF     		.align	2
 4164              	.L324:
 4165 0060 00380140 		.word	1073821696
 4166 0064 00000000 		.word	.LC0
 4167              		.cfi_endproc
 4168              	.LFE171:
 4170              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4171              		.align	1
 4172              		.global	HAL_UART_GetState
 4173              		.syntax unified
 4174              		.thumb
 4175              		.thumb_func
 4176              		.fpu fpv4-sp-d16
 4178              	HAL_UART_GetState:
 4179              	.LFB172:
2805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp1;
 4180              		.loc 1 2805 0
 4181              		.cfi_startproc
ARM GAS  /tmp/cc5hFHZt.s 			page 156


 4182              		@ args = 0, pretend = 0, frame = 0
 4183              		@ frame_needed = 0, uses_anonymous_args = 0
 4184              		@ link register save eliminated.
 4185              	.LVL344:
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp2 = huart->RxState;
 4186              		.loc 1 2808 0
 4187 0000 D0F88020 		ldr	r2, [r0, #128]
 4188              	.LVL345:
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4189              		.loc 1 2809 0
 4190 0004 D0F88400 		ldr	r0, [r0, #132]
 4191              	.LVL346:
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4192              		.loc 1 2812 0
 4193 0008 1043     		orrs	r0, r0, r2
 4194              	.LVL347:
 4195 000a 7047     		bx	lr
 4196              		.cfi_endproc
 4197              	.LFE172:
 4199              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4200              		.align	1
 4201              		.global	HAL_UART_GetError
 4202              		.syntax unified
 4203              		.thumb
 4204              		.thumb_func
 4205              		.fpu fpv4-sp-d16
 4207              	HAL_UART_GetError:
 4208              	.LFB173:
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return huart->ErrorCode;
 4209              		.loc 1 2821 0
 4210              		.cfi_startproc
 4211              		@ args = 0, pretend = 0, frame = 0
 4212              		@ frame_needed = 0, uses_anonymous_args = 0
 4213              		@ link register save eliminated.
 4214              	.LVL348:
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4215              		.loc 1 2822 0
 4216 0000 D0F88800 		ldr	r0, [r0, #136]
 4217              	.LVL349:
2823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 4218              		.loc 1 2823 0
 4219 0004 7047     		bx	lr
 4220              		.cfi_endproc
 4221              	.LFE173:
 4223              		.global	__aeabi_uldivmod
 4224              		.section	.text.UART_SetConfig,"ax",%progbits
 4225              		.align	1
 4226              		.global	UART_SetConfig
 4227              		.syntax unified
 4228              		.thumb
 4229              		.thumb_func
 4230              		.fpu fpv4-sp-d16
 4232              	UART_SetConfig:
 4233              	.LFB174:
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tmpreg;
 4234              		.loc 1 2866 0
 4235              		.cfi_startproc
ARM GAS  /tmp/cc5hFHZt.s 			page 157


 4236              		@ args = 0, pretend = 0, frame = 0
 4237              		@ frame_needed = 0, uses_anonymous_args = 0
 4238              	.LVL350:
 4239 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4240              	.LCFI32:
 4241              		.cfi_def_cfa_offset 32
 4242              		.cfi_offset 3, -32
 4243              		.cfi_offset 4, -28
 4244              		.cfi_offset 5, -24
 4245              		.cfi_offset 6, -20
 4246              		.cfi_offset 7, -16
 4247              		.cfi_offset 8, -12
 4248              		.cfi_offset 9, -8
 4249              		.cfi_offset 14, -4
 4250 0004 0446     		mov	r4, r0
 4251              	.LVL351:
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 4252              		.loc 1 2876 0
 4253 0006 4268     		ldr	r2, [r0, #4]
 4254 0008 9C4B     		ldr	r3, .L436
 4255 000a 9A42     		cmp	r2, r3
 4256 000c 00F29F80 		bhi	.L415
 4257              	.LVL352:
 4258              	.L329:
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 4259              		.loc 1 2877 0
 4260 0010 A368     		ldr	r3, [r4, #8]
 4261 0012 B3F1805F 		cmp	r3, #268435456
 4262 0016 04D0     		beq	.L330
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 4263              		.loc 1 2877 0 is_stmt 0 discriminator 1
 4264 0018 1BB1     		cbz	r3, .L330
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 4265              		.loc 1 2877 0 discriminator 2
 4266 001a B3F5805F 		cmp	r3, #4096
 4267 001e 40F09C80 		bne	.L416
 4268              	.L330:
2878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4269              		.loc 1 2878 0 is_stmt 1
 4270 0022 2268     		ldr	r2, [r4]
 4271 0024 964B     		ldr	r3, .L436+4
 4272 0026 9A42     		cmp	r2, r3
 4273 0028 00F09D80 		beq	.L417
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 4274              		.loc 1 2884 0
 4275 002c E368     		ldr	r3, [r4, #12]
 4276 002e B3F5805F 		cmp	r3, #4096
 4277 0032 07D0     		beq	.L333
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 4278              		.loc 1 2884 0 is_stmt 0 discriminator 1
 4279 0034 33B1     		cbz	r3, .L333
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 4280              		.loc 1 2884 0 discriminator 2
 4281 0036 B3F5405F 		cmp	r3, #12288
 4282 003a 03D0     		beq	.L333
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 4283              		.loc 1 2884 0 discriminator 3
ARM GAS  /tmp/cc5hFHZt.s 			page 158


 4284 003c B3F5005F 		cmp	r3, #8192
 4285 0040 40F09F80 		bne	.L418
 4286              	.L333:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4287              		.loc 1 2885 0 is_stmt 1
 4288 0044 236A     		ldr	r3, [r4, #32]
 4289 0046 1BB1     		cbz	r3, .L332
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4290              		.loc 1 2885 0 is_stmt 0 discriminator 1
 4291 0048 B3F5006F 		cmp	r3, #2048
 4292 004c 40F09F80 		bne	.L419
 4293              	.L332:
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 4294              		.loc 1 2888 0 is_stmt 1
 4295 0050 2369     		ldr	r3, [r4, #16]
 4296 0052 33B1     		cbz	r3, .L334
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 4297              		.loc 1 2888 0 is_stmt 0 discriminator 1
 4298 0054 B3F5806F 		cmp	r3, #1024
 4299 0058 03D0     		beq	.L334
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 4300              		.loc 1 2888 0 discriminator 2
 4301 005a B3F5C06F 		cmp	r3, #1536
 4302 005e 40F09C80 		bne	.L420
 4303              	.L334:
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 4304              		.loc 1 2889 0 is_stmt 1
 4305 0062 6369     		ldr	r3, [r4, #20]
 4306 0064 33F00C02 		bics	r2, r3, #12
 4307 0068 00D1     		bne	.L335
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 4308              		.loc 1 2889 0 is_stmt 0 discriminator 2
 4309 006a 23B9     		cbnz	r3, .L336
 4310              	.L335:
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 4311              		.loc 1 2889 0 discriminator 3
 4312 006c 40F64931 		movw	r1, #2889
 4313 0070 8448     		ldr	r0, .L436+8
 4314 0072 FFF7FEFF 		bl	assert_failed
 4315              	.LVL353:
 4316              	.L336:
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 4317              		.loc 1 2890 0 is_stmt 1
 4318 0076 A369     		ldr	r3, [r4, #24]
 4319 0078 4BB1     		cbz	r3, .L337
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 4320              		.loc 1 2890 0 is_stmt 0 discriminator 1
 4321 007a B3F5807F 		cmp	r3, #256
 4322 007e 06D0     		beq	.L337
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 4323              		.loc 1 2890 0 discriminator 2
 4324 0080 B3F5007F 		cmp	r3, #512
 4325 0084 03D0     		beq	.L337
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 4326              		.loc 1 2890 0 discriminator 3
 4327 0086 B3F5407F 		cmp	r3, #768
 4328 008a 40F08C80 		bne	.L421
ARM GAS  /tmp/cc5hFHZt.s 			page 159


 4329              	.L337:
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
 4330              		.loc 1 2891 0 is_stmt 1
 4331 008e E369     		ldr	r3, [r4, #28]
 4332 0090 1BB1     		cbz	r3, .L338
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
 4333              		.loc 1 2891 0 is_stmt 0 discriminator 1
 4334 0092 B3F5004F 		cmp	r3, #32768
 4335 0096 40F08C80 		bne	.L422
 4336              	.L338:
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4337              		.loc 1 2892 0 is_stmt 1
 4338 009a 636A     		ldr	r3, [r4, #36]
 4339 009c 0B2B     		cmp	r3, #11
 4340 009e 00F28E80 		bhi	.L423
 4341              	.L339:
2901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
 4342              		.loc 1 2901 0
 4343 00a2 A368     		ldr	r3, [r4, #8]
 4344 00a4 2269     		ldr	r2, [r4, #16]
 4345 00a6 1343     		orrs	r3, r3, r2
 4346 00a8 6269     		ldr	r2, [r4, #20]
 4347 00aa 1343     		orrs	r3, r3, r2
 4348 00ac E269     		ldr	r2, [r4, #28]
 4349 00ae 1343     		orrs	r3, r3, r2
 4350              	.LVL354:
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 4351              		.loc 1 2902 0
 4352 00b0 626E     		ldr	r2, [r4, #100]
 4353 00b2 1343     		orrs	r3, r3, r2
 4354              	.LVL355:
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4355              		.loc 1 2903 0
 4356 00b4 2168     		ldr	r1, [r4]
 4357 00b6 0868     		ldr	r0, [r1]
 4358 00b8 734A     		ldr	r2, .L436+12
 4359 00ba 0240     		ands	r2, r2, r0
 4360 00bc 1A43     		orrs	r2, r2, r3
 4361 00be 0A60     		str	r2, [r1]
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4362              		.loc 1 2908 0
 4363 00c0 2268     		ldr	r2, [r4]
 4364 00c2 5368     		ldr	r3, [r2, #4]
 4365              	.LVL356:
 4366 00c4 23F44053 		bic	r3, r3, #12288
 4367 00c8 E168     		ldr	r1, [r4, #12]
 4368 00ca 0B43     		orrs	r3, r3, r1
 4369 00cc 5360     		str	r3, [r2, #4]
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4370              		.loc 1 2916 0
 4371 00ce A169     		ldr	r1, [r4, #24]
 4372              	.LVL357:
2918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4373              		.loc 1 2918 0
 4374 00d0 2268     		ldr	r2, [r4]
 4375 00d2 6B4B     		ldr	r3, .L436+4
 4376 00d4 9A42     		cmp	r2, r3
ARM GAS  /tmp/cc5hFHZt.s 			page 160


 4377 00d6 01D0     		beq	.L340
2920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4378              		.loc 1 2920 0
 4379 00d8 236A     		ldr	r3, [r4, #32]
 4380 00da 1943     		orrs	r1, r1, r3
 4381              	.LVL358:
 4382              	.L340:
2922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4383              		.loc 1 2922 0
 4384 00dc 9368     		ldr	r3, [r2, #8]
 4385 00de 23F06E43 		bic	r3, r3, #-301989888
 4386 00e2 23F43063 		bic	r3, r3, #2816
 4387 00e6 0B43     		orrs	r3, r3, r1
 4388 00e8 9360     		str	r3, [r2, #8]
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4389              		.loc 1 2927 0
 4390 00ea 2268     		ldr	r2, [r4]
 4391 00ec D36A     		ldr	r3, [r2, #44]
 4392 00ee 23F00F03 		bic	r3, r3, #15
 4393 00f2 616A     		ldr	r1, [r4, #36]
 4394              	.LVL359:
 4395 00f4 0B43     		orrs	r3, r3, r1
 4396 00f6 D362     		str	r3, [r2, #44]
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4397              		.loc 1 2930 0
 4398 00f8 2368     		ldr	r3, [r4]
 4399 00fa 644A     		ldr	r2, .L436+16
 4400 00fc 9342     		cmp	r3, r2
 4401 00fe 64D0     		beq	.L424
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4402              		.loc 1 2930 0 is_stmt 0 discriminator 2
 4403 0100 634A     		ldr	r2, .L436+20
 4404 0102 9342     		cmp	r3, r2
 4405 0104 75D0     		beq	.L425
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4406              		.loc 1 2930 0 discriminator 14
 4407 0106 634A     		ldr	r2, .L436+24
 4408 0108 9342     		cmp	r3, r2
 4409 010a 00F08B80 		beq	.L426
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4410              		.loc 1 2930 0 discriminator 26
 4411 010e 624A     		ldr	r2, .L436+28
 4412 0110 9342     		cmp	r3, r2
 4413 0112 00F09D80 		beq	.L427
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4414              		.loc 1 2930 0 discriminator 38
 4415 0116 5A4A     		ldr	r2, .L436+4
 4416 0118 9342     		cmp	r3, r2
 4417 011a 00F0BF80 		beq	.L428
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4418              		.loc 1 2930 0
 4419 011e 1022     		movs	r2, #16
 4420              	.L346:
 4421              	.LVL360:
2933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4422              		.loc 1 2933 0 is_stmt 1
 4423 0120 5749     		ldr	r1, .L436+4
ARM GAS  /tmp/cc5hFHZt.s 			page 161


 4424 0122 8B42     		cmp	r3, r1
 4425 0124 00F0DD80 		beq	.L429
2986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4426              		.loc 1 2986 0
 4427 0128 E369     		ldr	r3, [r4, #28]
 4428 012a B3F5004F 		cmp	r3, #32768
 4429 012e 00F01D81 		beq	.L430
3029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4430              		.loc 1 3029 0
 4431 0132 082A     		cmp	r2, #8
 4432 0134 00F28981 		bhi	.L410
 4433 0138 DFE812F0 		tbh	[pc, r2, lsl #1]
 4434              	.L388:
 4435 013c 4E01     		.2byte	(.L387-.L388)/2
 4436 013e 7001     		.2byte	(.L389-.L388)/2
 4437 0140 4C01     		.2byte	(.L390-.L388)/2
 4438 0142 8701     		.2byte	(.L410-.L388)/2
 4439 0144 7301     		.2byte	(.L391-.L388)/2
 4440 0146 8701     		.2byte	(.L410-.L388)/2
 4441 0148 8701     		.2byte	(.L410-.L388)/2
 4442 014a 8701     		.2byte	(.L410-.L388)/2
 4443 014c 7601     		.2byte	(.L411-.L388)/2
 4444              	.LVL361:
 4445              		.p2align 1
 4446              	.L415:
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 4447              		.loc 1 2876 0 discriminator 1
 4448 014e 40F63C31 		movw	r1, #2876
 4449 0152 4C48     		ldr	r0, .L436+8
 4450              	.LVL362:
 4451 0154 FFF7FEFF 		bl	assert_failed
 4452              	.LVL363:
 4453 0158 5AE7     		b	.L329
 4454              	.L416:
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 4455              		.loc 1 2877 0 discriminator 3
 4456 015a 40F63D31 		movw	r1, #2877
 4457 015e 4948     		ldr	r0, .L436+8
 4458 0160 FFF7FEFF 		bl	assert_failed
 4459              	.LVL364:
 4460 0164 5DE7     		b	.L330
 4461              	.L417:
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4462              		.loc 1 2880 0
 4463 0166 E368     		ldr	r3, [r4, #12]
 4464 0168 002B     		cmp	r3, #0
 4465 016a 3FF471AF 		beq	.L332
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4466              		.loc 1 2880 0 is_stmt 0 discriminator 1
 4467 016e B3F5005F 		cmp	r3, #8192
 4468 0172 3FF46DAF 		beq	.L332
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4469              		.loc 1 2880 0 discriminator 2
 4470 0176 4FF43461 		mov	r1, #2880
 4471 017a 4248     		ldr	r0, .L436+8
 4472 017c FFF7FEFF 		bl	assert_failed
 4473              	.LVL365:
ARM GAS  /tmp/cc5hFHZt.s 			page 162


 4474 0180 66E7     		b	.L332
 4475              	.L418:
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 4476              		.loc 1 2884 0 is_stmt 1 discriminator 4
 4477 0182 40F64431 		movw	r1, #2884
 4478 0186 3F48     		ldr	r0, .L436+8
 4479 0188 FFF7FEFF 		bl	assert_failed
 4480              	.LVL366:
 4481 018c 5AE7     		b	.L333
 4482              	.L419:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4483              		.loc 1 2885 0 discriminator 2
 4484 018e 40F64531 		movw	r1, #2885
 4485 0192 3C48     		ldr	r0, .L436+8
 4486 0194 FFF7FEFF 		bl	assert_failed
 4487              	.LVL367:
 4488 0198 5AE7     		b	.L332
 4489              	.L420:
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 4490              		.loc 1 2888 0 discriminator 3
 4491 019a 40F64831 		movw	r1, #2888
 4492 019e 3948     		ldr	r0, .L436+8
 4493 01a0 FFF7FEFF 		bl	assert_failed
 4494              	.LVL368:
 4495 01a4 5DE7     		b	.L334
 4496              	.L421:
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 4497              		.loc 1 2890 0 discriminator 4
 4498 01a6 40F64A31 		movw	r1, #2890
 4499 01aa 3648     		ldr	r0, .L436+8
 4500 01ac FFF7FEFF 		bl	assert_failed
 4501              	.LVL369:
 4502 01b0 6DE7     		b	.L337
 4503              	.L422:
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
 4504              		.loc 1 2891 0 discriminator 2
 4505 01b2 40F64B31 		movw	r1, #2891
 4506 01b6 3348     		ldr	r0, .L436+8
 4507 01b8 FFF7FEFF 		bl	assert_failed
 4508              	.LVL370:
 4509 01bc 6DE7     		b	.L338
 4510              	.L423:
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4511              		.loc 1 2892 0 discriminator 1
 4512 01be 40F64C31 		movw	r1, #2892
 4513 01c2 3048     		ldr	r0, .L436+8
 4514 01c4 FFF7FEFF 		bl	assert_failed
 4515              	.LVL371:
 4516 01c8 6BE7     		b	.L339
 4517              	.L424:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4518              		.loc 1 2930 0 discriminator 1
 4519 01ca 02F55842 		add	r2, r2, #55296
 4520 01ce D2F88820 		ldr	r2, [r2, #136]
 4521 01d2 02F00302 		and	r2, r2, #3
 4522 01d6 032A     		cmp	r2, #3
 4523 01d8 09D8     		bhi	.L342
ARM GAS  /tmp/cc5hFHZt.s 			page 163


 4524 01da DFE802F0 		tbb	[pc, r2]
 4525              	.L344:
 4526 01de 02       		.byte	(.L343-.L344)/2
 4527 01df 04       		.byte	(.L345-.L344)/2
 4528 01e0 78       		.byte	(.L394-.L344)/2
 4529 01e1 06       		.byte	(.L347-.L344)/2
 4530              		.p2align 1
 4531              	.L343:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4532              		.loc 1 2930 0 is_stmt 0
 4533 01e2 0122     		movs	r2, #1
 4534 01e4 9CE7     		b	.L346
 4535              	.L345:
 4536              	.LVL372:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4537              		.loc 1 2930 0 discriminator 5
 4538 01e6 0422     		movs	r2, #4
 4539 01e8 9AE7     		b	.L346
 4540              	.LVL373:
 4541              	.L347:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4542              		.loc 1 2930 0 discriminator 7
 4543 01ea 0822     		movs	r2, #8
 4544 01ec 98E7     		b	.L346
 4545              	.LVL374:
 4546              	.L342:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4547              		.loc 1 2930 0 discriminator 3
 4548 01ee 1022     		movs	r2, #16
 4549 01f0 96E7     		b	.L346
 4550              	.LVL375:
 4551              	.L425:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4552              		.loc 1 2930 0 discriminator 13
 4553 01f2 02F5E632 		add	r2, r2, #117760
 4554 01f6 D2F88820 		ldr	r2, [r2, #136]
 4555 01fa 02F00C02 		and	r2, r2, #12
 4556 01fe 0C2A     		cmp	r2, #12
 4557 0200 0ED8     		bhi	.L349
 4558 0202 DFE802F0 		tbb	[pc, r2]
 4559              	.L351:
 4560 0206 07       		.byte	(.L350-.L351)/2
 4561 0207 0D       		.byte	(.L349-.L351)/2
 4562 0208 0D       		.byte	(.L349-.L351)/2
 4563 0209 0D       		.byte	(.L349-.L351)/2
 4564 020a 09       		.byte	(.L352-.L351)/2
 4565 020b 0D       		.byte	(.L349-.L351)/2
 4566 020c 0D       		.byte	(.L349-.L351)/2
 4567 020d 0D       		.byte	(.L349-.L351)/2
 4568 020e 66       		.byte	(.L395-.L351)/2
 4569 020f 0D       		.byte	(.L349-.L351)/2
 4570 0210 0D       		.byte	(.L349-.L351)/2
 4571 0211 0D       		.byte	(.L349-.L351)/2
 4572 0212 0B       		.byte	(.L353-.L351)/2
 4573 0213 00       		.p2align 1
 4574              	.L350:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/cc5hFHZt.s 			page 164


 4575              		.loc 1 2930 0
 4576 0214 0022     		movs	r2, #0
 4577 0216 83E7     		b	.L346
 4578              	.L352:
 4579              	.LVL376:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4580              		.loc 1 2930 0 discriminator 17
 4581 0218 0422     		movs	r2, #4
 4582 021a 81E7     		b	.L346
 4583              	.LVL377:
 4584              	.L353:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4585              		.loc 1 2930 0 discriminator 19
 4586 021c 0822     		movs	r2, #8
 4587 021e 7FE7     		b	.L346
 4588              	.LVL378:
 4589              	.L349:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4590              		.loc 1 2930 0 discriminator 15
 4591 0220 1022     		movs	r2, #16
 4592 0222 7DE7     		b	.L346
 4593              	.LVL379:
 4594              	.L426:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4595              		.loc 1 2930 0 discriminator 25
 4596 0224 02F5E432 		add	r2, r2, #116736
 4597 0228 D2F88820 		ldr	r2, [r2, #136]
 4598 022c 02F03002 		and	r2, r2, #48
 4599 0230 102A     		cmp	r2, #16
 4600 0232 09D0     		beq	.L356
 4601 0234 05D9     		bls	.L431
 4602 0236 202A     		cmp	r2, #32
 4603 0238 4DD0     		beq	.L396
 4604 023a 302A     		cmp	r2, #48
 4605 023c 06D1     		bne	.L355
 4606              	.LVL380:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4607              		.loc 1 2930 0 discriminator 31
 4608 023e 0822     		movs	r2, #8
 4609 0240 6EE7     		b	.L346
 4610              	.LVL381:
 4611              	.L431:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4612              		.loc 1 2930 0 discriminator 25
 4613 0242 1AB9     		cbnz	r2, .L355
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4614              		.loc 1 2930 0
 4615 0244 0022     		movs	r2, #0
 4616 0246 6BE7     		b	.L346
 4617              	.L356:
 4618              	.LVL382:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4619              		.loc 1 2930 0 discriminator 29
 4620 0248 0422     		movs	r2, #4
 4621 024a 69E7     		b	.L346
 4622              	.LVL383:
 4623              	.L355:
ARM GAS  /tmp/cc5hFHZt.s 			page 165


2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4624              		.loc 1 2930 0 discriminator 27
 4625 024c 1022     		movs	r2, #16
 4626 024e 67E7     		b	.L346
 4627              	.LVL384:
 4628              	.L427:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4629              		.loc 1 2930 0 discriminator 37
 4630 0250 02F5E232 		add	r2, r2, #115712
 4631 0254 D2F88820 		ldr	r2, [r2, #136]
 4632 0258 02F0C002 		and	r2, r2, #192
 4633 025c 402A     		cmp	r2, #64
 4634 025e 09D0     		beq	.L362
 4635 0260 05D9     		bls	.L432
 4636 0262 802A     		cmp	r2, #128
 4637 0264 39D0     		beq	.L397
 4638 0266 C02A     		cmp	r2, #192
 4639 0268 06D1     		bne	.L361
 4640              	.LVL385:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4641              		.loc 1 2930 0 discriminator 43
 4642 026a 0822     		movs	r2, #8
 4643 026c 58E7     		b	.L346
 4644              	.LVL386:
 4645              	.L432:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4646              		.loc 1 2930 0 discriminator 37
 4647 026e 1AB9     		cbnz	r2, .L361
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4648              		.loc 1 2930 0
 4649 0270 0022     		movs	r2, #0
 4650 0272 55E7     		b	.L346
 4651              	.L362:
 4652              	.LVL387:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4653              		.loc 1 2930 0 discriminator 41
 4654 0274 0422     		movs	r2, #4
 4655 0276 53E7     		b	.L346
 4656              	.LVL388:
 4657              	.L361:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4658              		.loc 1 2930 0 discriminator 39
 4659 0278 1022     		movs	r2, #16
 4660 027a 51E7     		b	.L346
 4661              	.L437:
 4662              		.align	2
 4663              	.L436:
 4664 027c 301A1E01 		.word	18750000
 4665 0280 00800040 		.word	1073774592
 4666 0284 00000000 		.word	.LC0
 4667 0288 F369FFCF 		.word	-805344781
 4668 028c 00380140 		.word	1073821696
 4669 0290 00440040 		.word	1073759232
 4670 0294 00480040 		.word	1073760256
 4671 0298 004C0040 		.word	1073761280
 4672              	.LVL389:
 4673              	.L428:
ARM GAS  /tmp/cc5hFHZt.s 			page 166


2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4674              		.loc 1 2930 0 discriminator 49
 4675 029c 02F5C832 		add	r2, r2, #102400
 4676 02a0 D2F88820 		ldr	r2, [r2, #136]
 4677 02a4 02F44062 		and	r2, r2, #3072
 4678 02a8 B2F5806F 		cmp	r2, #1024
 4679 02ac 0BD0     		beq	.L367
 4680 02ae 07D9     		bls	.L433
 4681 02b0 B2F5006F 		cmp	r2, #2048
 4682 02b4 13D0     		beq	.L399
 4683 02b6 B2F5406F 		cmp	r2, #3072
 4684 02ba 06D1     		bne	.L366
 4685              	.LVL390:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4686              		.loc 1 2930 0 discriminator 55
 4687 02bc 0822     		movs	r2, #8
 4688 02be 2FE7     		b	.L346
 4689              	.LVL391:
 4690              	.L433:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4691              		.loc 1 2930 0 discriminator 49
 4692 02c0 1AB9     		cbnz	r2, .L366
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4693              		.loc 1 2930 0
 4694 02c2 0022     		movs	r2, #0
 4695 02c4 2CE7     		b	.L346
 4696              	.L367:
 4697              	.LVL392:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4698              		.loc 1 2930 0 discriminator 53
 4699 02c6 0422     		movs	r2, #4
 4700 02c8 2AE7     		b	.L346
 4701              	.LVL393:
 4702              	.L366:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4703              		.loc 1 2930 0 discriminator 51
 4704 02ca 1022     		movs	r2, #16
 4705 02cc 28E7     		b	.L346
 4706              	.LVL394:
 4707              	.L394:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4708              		.loc 1 2930 0
 4709 02ce 0222     		movs	r2, #2
 4710 02d0 26E7     		b	.L346
 4711              	.L395:
 4712 02d2 0222     		movs	r2, #2
 4713 02d4 24E7     		b	.L346
 4714              	.L396:
 4715 02d6 0222     		movs	r2, #2
 4716 02d8 22E7     		b	.L346
 4717              	.L397:
 4718 02da 0222     		movs	r2, #2
 4719 02dc 20E7     		b	.L346
 4720              	.L399:
 4721 02de 0222     		movs	r2, #2
 4722 02e0 1EE7     		b	.L346
 4723              	.LVL395:
ARM GAS  /tmp/cc5hFHZt.s 			page 167


 4724              	.L429:
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4725              		.loc 1 2936 0 is_stmt 1
 4726 02e2 082A     		cmp	r2, #8
 4727 02e4 00F2A380 		bhi	.L400
 4728 02e8 DFE802F0 		tbb	[pc, r2]
 4729              	.L374:
 4730 02ec 08       		.byte	(.L373-.L374)/2
 4731 02ed A1       		.byte	(.L400-.L374)/2
 4732 02ee 10       		.byte	(.L401-.L374)/2
 4733 02ef A1       		.byte	(.L400-.L374)/2
 4734 02f0 0D       		.byte	(.L376-.L374)/2
 4735 02f1 A1       		.byte	(.L400-.L374)/2
 4736 02f2 A1       		.byte	(.L400-.L374)/2
 4737 02f3 A1       		.byte	(.L400-.L374)/2
 4738 02f4 05       		.byte	(.L377-.L374)/2
 4739 02f5 00       		.p2align 1
 4740              	.L377:
2948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4741              		.loc 1 2948 0
 4742 02f6 4FF40040 		mov	r0, #32768
 4743 02fa 08E0     		b	.L375
 4744              	.L373:
2939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4745              		.loc 1 2939 0
 4746 02fc FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4747              	.LVL396:
 4748              	.L378:
2957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4749              		.loc 1 2957 0
 4750 0300 28B9     		cbnz	r0, .L375
 4751 0302 0020     		movs	r0, #0
 4752              	.LVL397:
 4753 0304 80E0     		b	.L372
 4754              	.LVL398:
 4755              	.L376:
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4756              		.loc 1 2945 0
 4757 0306 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4758              	.LVL399:
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4759              		.loc 1 2946 0
 4760 030a F9E7     		b	.L378
 4761              	.LVL400:
 4762              	.L401:
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4763              		.loc 1 2942 0
 4764 030c 5248     		ldr	r0, .L438
 4765              	.LVL401:
 4766              	.L375:
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4767              		.loc 1 2960 0
 4768 030e 626A     		ldr	r2, [r4, #36]
 4769 0310 524B     		ldr	r3, .L438+4
 4770 0312 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 4771 0316 B0FBF2F3 		udiv	r3, r0, r2
 4772              	.LVL402:
ARM GAS  /tmp/cc5hFHZt.s 			page 168


2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 4773              		.loc 1 2963 0
 4774 031a 6568     		ldr	r5, [r4, #4]
 4775 031c 05EB4501 		add	r1, r5, r5, lsl #1
 4776 0320 9942     		cmp	r1, r3
 4777 0322 00F28680 		bhi	.L403
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 4778              		.loc 1 2963 0 is_stmt 0 discriminator 1
 4779 0326 B3EB053F 		cmp	r3, r5, lsl #12
 4780 032a 00F28480 		bhi	.L404
2972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 4781              		.loc 1 2972 0 is_stmt 1
 4782 032e 4FF00008 		mov	r8, #0
 4783 0332 92B2     		uxth	r2, r2
 4784 0334 0023     		movs	r3, #0
 4785              	.LVL403:
 4786 0336 4146     		mov	r1, r8
 4787 0338 FFF7FEFF 		bl	__aeabi_uldivmod
 4788              	.LVL404:
 4789 033c 0F02     		lsls	r7, r1, #8
 4790 033e 47EA1067 		orr	r7, r7, r0, lsr #24
 4791 0342 0602     		lsls	r6, r0, #8
 4792 0344 6808     		lsrs	r0, r5, #1
 4793 0346 2A46     		mov	r2, r5
 4794 0348 4346     		mov	r3, r8
 4795 034a 16EB0008 		adds	r8, r6, r0
 4796 034e 47F10009 		adc	r9, r7, #0
 4797 0352 4046     		mov	r0, r8
 4798 0354 4946     		mov	r1, r9
 4799 0356 FFF7FEFF 		bl	__aeabi_uldivmod
 4800              	.LVL405:
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 4801              		.loc 1 2973 0
 4802 035a A0F54072 		sub	r2, r0, #768
 4803 035e 404B     		ldr	r3, .L438+8
 4804 0360 9A42     		cmp	r2, r3
 4805 0362 6AD8     		bhi	.L405
2975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 4806              		.loc 1 2975 0
 4807 0364 2368     		ldr	r3, [r4]
 4808 0366 D860     		str	r0, [r3, #12]
 4809 0368 0020     		movs	r0, #0
 4810              	.LVL406:
 4811 036a 4DE0     		b	.L372
 4812              	.LVL407:
 4813              	.L430:
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4814              		.loc 1 2988 0
 4815 036c 082A     		cmp	r2, #8
 4816 036e 66D8     		bhi	.L406
 4817 0370 DFE802F0 		tbb	[pc, r2]
 4818              	.L381:
 4819 0374 07       		.byte	(.L380-.L381)/2
 4820 0375 27       		.byte	(.L382-.L381)/2
 4821 0376 05       		.byte	(.L383-.L381)/2
 4822 0377 65       		.byte	(.L406-.L381)/2
 4823 0378 2A       		.byte	(.L384-.L381)/2
ARM GAS  /tmp/cc5hFHZt.s 			page 169


 4824 0379 65       		.byte	(.L406-.L381)/2
 4825 037a 65       		.byte	(.L406-.L381)/2
 4826 037b 65       		.byte	(.L406-.L381)/2
 4827 037c 2D       		.byte	(.L407-.L381)/2
 4828 037d 00       		.p2align 1
 4829              	.L383:
2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4830              		.loc 1 2997 0
 4831 037e 3648     		ldr	r0, .L438
 4832 0380 03E0     		b	.L385
 4833              	.L380:
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4834              		.loc 1 2991 0
 4835 0382 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4836              	.LVL408:
 4837              	.L386:
3012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4838              		.loc 1 3012 0
 4839 0386 0028     		cmp	r0, #0
 4840 0388 5BD0     		beq	.L434
 4841              	.LVL409:
 4842              	.L385:
3014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 4843              		.loc 1 3014 0
 4844 038a 626A     		ldr	r2, [r4, #36]
 4845 038c 334B     		ldr	r3, .L438+4
 4846 038e 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4847 0392 B0FBF3F0 		udiv	r0, r0, r3
 4848 0396 6268     		ldr	r2, [r4, #4]
 4849 0398 5308     		lsrs	r3, r2, #1
 4850 039a 03EB4003 		add	r3, r3, r0, lsl #1
 4851 039e B3FBF2F3 		udiv	r3, r3, r2
 4852 03a2 9BB2     		uxth	r3, r3
 4853              	.LVL410:
3015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 4854              		.loc 1 3015 0
 4855 03a4 A3F11001 		sub	r1, r3, #16
 4856 03a8 4FF6EF72 		movw	r2, #65519
 4857 03ac 9142     		cmp	r1, r2
 4858 03ae 4AD8     		bhi	.L409
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4859              		.loc 1 3017 0
 4860 03b0 23F00F02 		bic	r2, r3, #15
 4861              	.LVL411:
3018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 4862              		.loc 1 3018 0
 4863 03b4 C3F34203 		ubfx	r3, r3, #1, #3
 4864              	.LVL412:
 4865 03b8 1343     		orrs	r3, r3, r2
 4866              	.LVL413:
3019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 4867              		.loc 1 3019 0
 4868 03ba 2268     		ldr	r2, [r4]
 4869 03bc D360     		str	r3, [r2, #12]
 4870 03be 0020     		movs	r0, #0
 4871 03c0 22E0     		b	.L372
 4872              	.LVL414:
ARM GAS  /tmp/cc5hFHZt.s 			page 170


 4873              	.L382:
2994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4874              		.loc 1 2994 0
 4875 03c2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4876              	.LVL415:
2995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4877              		.loc 1 2995 0
 4878 03c6 DEE7     		b	.L386
 4879              	.LVL416:
 4880              	.L384:
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4881              		.loc 1 3000 0
 4882 03c8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4883              	.LVL417:
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4884              		.loc 1 3001 0
 4885 03cc DBE7     		b	.L386
 4886              	.LVL418:
 4887              	.L407:
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4888              		.loc 1 3003 0
 4889 03ce 4FF40040 		mov	r0, #32768
 4890 03d2 DAE7     		b	.L385
 4891              	.L390:
3038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4892              		.loc 1 3038 0
 4893 03d4 2048     		ldr	r0, .L438
 4894 03d6 02E0     		b	.L392
 4895              	.L387:
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4896              		.loc 1 3032 0
 4897 03d8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4898              	.LVL419:
 4899              	.L393:
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4900              		.loc 1 3052 0
 4901 03dc B8B3     		cbz	r0, .L435
 4902              	.LVL420:
 4903              	.L392:
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 4904              		.loc 1 3055 0
 4905 03de 626A     		ldr	r2, [r4, #36]
 4906 03e0 1E4B     		ldr	r3, .L438+4
 4907 03e2 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4908 03e6 B0FBF3F0 		udiv	r0, r0, r3
 4909 03ea 6368     		ldr	r3, [r4, #4]
 4910 03ec 00EB5300 		add	r0, r0, r3, lsr #1
 4911 03f0 B0FBF3F0 		udiv	r0, r0, r3
 4912 03f4 80B2     		uxth	r0, r0
 4913              	.LVL421:
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 4914              		.loc 1 3056 0
 4915 03f6 A0F11002 		sub	r2, r0, #16
 4916 03fa 4FF6EF73 		movw	r3, #65519
 4917 03fe 9A42     		cmp	r2, r3
 4918 0400 27D8     		bhi	.L413
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
ARM GAS  /tmp/cc5hFHZt.s 			page 171


 4919              		.loc 1 3058 0
 4920 0402 2368     		ldr	r3, [r4]
 4921 0404 D860     		str	r0, [r3, #12]
 4922 0406 0020     		movs	r0, #0
 4923              	.LVL422:
 4924              	.L372:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
 4925              		.loc 1 3068 0
 4926 0408 0123     		movs	r3, #1
 4927 040a A4F86A30 		strh	r3, [r4, #106]	@ movhi
3069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4928              		.loc 1 3069 0
 4929 040e A4F86830 		strh	r3, [r4, #104]	@ movhi
3072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
 4930              		.loc 1 3072 0
 4931 0412 0023     		movs	r3, #0
 4932 0414 E366     		str	r3, [r4, #108]
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4933              		.loc 1 3073 0
 4934 0416 2367     		str	r3, [r4, #112]
3076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4935              		.loc 1 3076 0
 4936 0418 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4937              	.LVL423:
 4938              	.L389:
3035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4939              		.loc 1 3035 0
 4940 041c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4941              	.LVL424:
3036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4942              		.loc 1 3036 0
 4943 0420 DCE7     		b	.L393
 4944              	.LVL425:
 4945              	.L391:
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4946              		.loc 1 3041 0
 4947 0422 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4948              	.LVL426:
3042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4949              		.loc 1 3042 0
 4950 0426 D9E7     		b	.L393
 4951              	.LVL427:
 4952              	.L411:
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4953              		.loc 1 3044 0
 4954 0428 4FF40040 		mov	r0, #32768
 4955 042c D7E7     		b	.L392
 4956              	.L400:
2952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4957              		.loc 1 2952 0
 4958 042e 0120     		movs	r0, #1
 4959 0430 EAE7     		b	.L372
 4960              	.LVL428:
 4961              	.L403:
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 4962              		.loc 1 2966 0
 4963 0432 0120     		movs	r0, #1
ARM GAS  /tmp/cc5hFHZt.s 			page 172


 4964 0434 E8E7     		b	.L372
 4965              	.L404:
 4966 0436 0120     		movs	r0, #1
 4967 0438 E6E7     		b	.L372
 4968              	.LVL429:
 4969              	.L405:
2979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 4970              		.loc 1 2979 0
 4971 043a 0120     		movs	r0, #1
 4972              	.LVL430:
 4973 043c E4E7     		b	.L372
 4974              	.LVL431:
 4975              	.L406:
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4976              		.loc 1 3007 0
 4977 043e 0120     		movs	r0, #1
 4978 0440 E2E7     		b	.L372
 4979              	.LVL432:
 4980              	.L434:
 4981 0442 0020     		movs	r0, #0
 4982              	.LVL433:
 4983 0444 E0E7     		b	.L372
 4984              	.LVL434:
 4985              	.L409:
3023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 4986              		.loc 1 3023 0
 4987 0446 0120     		movs	r0, #1
 4988 0448 DEE7     		b	.L372
 4989              	.LVL435:
 4990              	.L410:
3048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4991              		.loc 1 3048 0
 4992 044a 0120     		movs	r0, #1
 4993 044c DCE7     		b	.L372
 4994              	.LVL436:
 4995              	.L435:
 4996 044e 0020     		movs	r0, #0
 4997              	.LVL437:
 4998 0450 DAE7     		b	.L372
 4999              	.LVL438:
 5000              	.L413:
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 5001              		.loc 1 3062 0
 5002 0452 0120     		movs	r0, #1
 5003              	.LVL439:
 5004 0454 D8E7     		b	.L372
 5005              	.L439:
 5006 0456 00BF     		.align	2
 5007              	.L438:
 5008 0458 0024F400 		.word	16000000
 5009 045c 00000000 		.word	.LANCHOR0
 5010 0460 FFFC0F00 		.word	1047807
 5011              		.cfi_endproc
 5012              	.LFE174:
 5014              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 5015              		.align	1
 5016              		.global	UART_AdvFeatureConfig
ARM GAS  /tmp/cc5hFHZt.s 			page 173


 5017              		.syntax unified
 5018              		.thumb
 5019              		.thumb_func
 5020              		.fpu fpv4-sp-d16
 5022              	UART_AdvFeatureConfig:
 5023              	.LFB175:
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 5024              		.loc 1 3084 0
 5025              		.cfi_startproc
 5026              		@ args = 0, pretend = 0, frame = 0
 5027              		@ frame_needed = 0, uses_anonymous_args = 0
 5028              	.LVL440:
 5029 0000 10B5     		push	{r4, lr}
 5030              	.LCFI33:
 5031              		.cfi_def_cfa_offset 8
 5032              		.cfi_offset 4, -8
 5033              		.cfi_offset 14, -4
 5034 0002 0446     		mov	r4, r0
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5035              		.loc 1 3086 0
 5036 0004 836A     		ldr	r3, [r0, #40]
 5037 0006 FF2B     		cmp	r3, #255
 5038 0008 00F29D80 		bhi	.L461
 5039              	.LVL441:
 5040              	.L441:
3089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5041              		.loc 1 3089 0
 5042 000c A36A     		ldr	r3, [r4, #40]
 5043 000e 13F0010F 		tst	r3, #1
 5044 0012 0CD0     		beq	.L442
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5045              		.loc 1 3091 0
 5046 0014 E36A     		ldr	r3, [r4, #44]
 5047 0016 1BB1     		cbz	r3, .L443
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5048              		.loc 1 3091 0 is_stmt 0 discriminator 1
 5049 0018 B3F5003F 		cmp	r3, #131072
 5050 001c 40F09980 		bne	.L462
 5051              	.L443:
3092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5052              		.loc 1 3092 0 is_stmt 1
 5053 0020 2268     		ldr	r2, [r4]
 5054 0022 5368     		ldr	r3, [r2, #4]
 5055 0024 23F40033 		bic	r3, r3, #131072
 5056 0028 E16A     		ldr	r1, [r4, #44]
 5057 002a 0B43     		orrs	r3, r3, r1
 5058 002c 5360     		str	r3, [r2, #4]
 5059              	.L442:
3096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5060              		.loc 1 3096 0
 5061 002e A36A     		ldr	r3, [r4, #40]
 5062 0030 13F0020F 		tst	r3, #2
 5063 0034 0CD0     		beq	.L444
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5064              		.loc 1 3098 0
 5065 0036 236B     		ldr	r3, [r4, #48]
 5066 0038 1BB1     		cbz	r3, .L445
ARM GAS  /tmp/cc5hFHZt.s 			page 174


3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5067              		.loc 1 3098 0 is_stmt 0 discriminator 1
 5068 003a B3F5803F 		cmp	r3, #65536
 5069 003e 40F08E80 		bne	.L463
 5070              	.L445:
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5071              		.loc 1 3099 0 is_stmt 1
 5072 0042 2268     		ldr	r2, [r4]
 5073 0044 5368     		ldr	r3, [r2, #4]
 5074 0046 23F48033 		bic	r3, r3, #65536
 5075 004a 216B     		ldr	r1, [r4, #48]
 5076 004c 0B43     		orrs	r3, r3, r1
 5077 004e 5360     		str	r3, [r2, #4]
 5078              	.L444:
3103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5079              		.loc 1 3103 0
 5080 0050 A36A     		ldr	r3, [r4, #40]
 5081 0052 13F0040F 		tst	r3, #4
 5082 0056 0CD0     		beq	.L446
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5083              		.loc 1 3105 0
 5084 0058 636B     		ldr	r3, [r4, #52]
 5085 005a 1BB1     		cbz	r3, .L447
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5086              		.loc 1 3105 0 is_stmt 0 discriminator 1
 5087 005c B3F5802F 		cmp	r3, #262144
 5088 0060 40F08380 		bne	.L464
 5089              	.L447:
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5090              		.loc 1 3106 0 is_stmt 1
 5091 0064 2268     		ldr	r2, [r4]
 5092 0066 5368     		ldr	r3, [r2, #4]
 5093 0068 23F48023 		bic	r3, r3, #262144
 5094 006c 616B     		ldr	r1, [r4, #52]
 5095 006e 0B43     		orrs	r3, r3, r1
 5096 0070 5360     		str	r3, [r2, #4]
 5097              	.L446:
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5098              		.loc 1 3110 0
 5099 0072 A36A     		ldr	r3, [r4, #40]
 5100 0074 13F0080F 		tst	r3, #8
 5101 0078 0BD0     		beq	.L448
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5102              		.loc 1 3112 0
 5103 007a A36B     		ldr	r3, [r4, #56]
 5104 007c 13B1     		cbz	r3, .L449
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5105              		.loc 1 3112 0 is_stmt 0 discriminator 1
 5106 007e B3F5004F 		cmp	r3, #32768
 5107 0082 78D1     		bne	.L465
 5108              	.L449:
3113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5109              		.loc 1 3113 0 is_stmt 1
 5110 0084 2268     		ldr	r2, [r4]
 5111 0086 5368     		ldr	r3, [r2, #4]
 5112 0088 23F40043 		bic	r3, r3, #32768
 5113 008c A16B     		ldr	r1, [r4, #56]
ARM GAS  /tmp/cc5hFHZt.s 			page 175


 5114 008e 0B43     		orrs	r3, r3, r1
 5115 0090 5360     		str	r3, [r2, #4]
 5116              	.L448:
3117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5117              		.loc 1 3117 0
 5118 0092 A36A     		ldr	r3, [r4, #40]
 5119 0094 13F0100F 		tst	r3, #16
 5120 0098 0BD0     		beq	.L450
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5121              		.loc 1 3119 0
 5122 009a E36B     		ldr	r3, [r4, #60]
 5123 009c 13B1     		cbz	r3, .L451
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5124              		.loc 1 3119 0 is_stmt 0 discriminator 1
 5125 009e B3F5805F 		cmp	r3, #4096
 5126 00a2 6ED1     		bne	.L466
 5127              	.L451:
3120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5128              		.loc 1 3120 0 is_stmt 1
 5129 00a4 2268     		ldr	r2, [r4]
 5130 00a6 9368     		ldr	r3, [r2, #8]
 5131 00a8 23F48053 		bic	r3, r3, #4096
 5132 00ac E16B     		ldr	r1, [r4, #60]
 5133 00ae 0B43     		orrs	r3, r3, r1
 5134 00b0 9360     		str	r3, [r2, #8]
 5135              	.L450:
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5136              		.loc 1 3124 0
 5137 00b2 A36A     		ldr	r3, [r4, #40]
 5138 00b4 13F0200F 		tst	r3, #32
 5139 00b8 0BD0     		beq	.L452
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5140              		.loc 1 3126 0
 5141 00ba 236C     		ldr	r3, [r4, #64]
 5142 00bc 13B1     		cbz	r3, .L453
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5143              		.loc 1 3126 0 is_stmt 0 discriminator 1
 5144 00be B3F5005F 		cmp	r3, #8192
 5145 00c2 64D1     		bne	.L467
 5146              	.L453:
3127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5147              		.loc 1 3127 0 is_stmt 1
 5148 00c4 2268     		ldr	r2, [r4]
 5149 00c6 9368     		ldr	r3, [r2, #8]
 5150 00c8 23F40053 		bic	r3, r3, #8192
 5151 00cc 216C     		ldr	r1, [r4, #64]
 5152 00ce 0B43     		orrs	r3, r3, r1
 5153 00d0 9360     		str	r3, [r2, #8]
 5154              	.L452:
3131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5155              		.loc 1 3131 0
 5156 00d2 A36A     		ldr	r3, [r4, #40]
 5157 00d4 13F0400F 		tst	r3, #64
 5158 00d8 24D0     		beq	.L454
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 5159              		.loc 1 3133 0
 5160 00da 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc5hFHZt.s 			page 176


 5161 00dc 414A     		ldr	r2, .L472
 5162 00de 9342     		cmp	r3, r2
 5163 00e0 10D0     		beq	.L455
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 5164              		.loc 1 3133 0 is_stmt 0 discriminator 1
 5165 00e2 A2F57442 		sub	r2, r2, #62464
 5166 00e6 9342     		cmp	r3, r2
 5167 00e8 0CD0     		beq	.L455
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 5168              		.loc 1 3133 0 discriminator 2
 5169 00ea 02F58062 		add	r2, r2, #1024
 5170 00ee 9342     		cmp	r3, r2
 5171 00f0 08D0     		beq	.L455
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 5172              		.loc 1 3133 0 discriminator 3
 5173 00f2 02F58062 		add	r2, r2, #1024
 5174 00f6 9342     		cmp	r3, r2
 5175 00f8 04D0     		beq	.L455
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 5176              		.loc 1 3133 0 discriminator 4
 5177 00fa 40F63D41 		movw	r1, #3133
 5178 00fe 3A48     		ldr	r0, .L472+4
 5179 0100 FFF7FEFF 		bl	assert_failed
 5180              	.LVL442:
 5181              	.L455:
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5182              		.loc 1 3134 0 is_stmt 1
 5183 0104 636C     		ldr	r3, [r4, #68]
 5184 0106 13B1     		cbz	r3, .L456
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5185              		.loc 1 3134 0 is_stmt 0 discriminator 1
 5186 0108 B3F5801F 		cmp	r3, #1048576
 5187 010c 45D1     		bne	.L468
 5188              	.L456:
3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 5189              		.loc 1 3135 0 is_stmt 1
 5190 010e 2268     		ldr	r2, [r4]
 5191 0110 5368     		ldr	r3, [r2, #4]
 5192 0112 23F48013 		bic	r3, r3, #1048576
 5193 0116 616C     		ldr	r1, [r4, #68]
 5194 0118 0B43     		orrs	r3, r3, r1
 5195 011a 5360     		str	r3, [r2, #4]
3137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5196              		.loc 1 3137 0
 5197 011c 636C     		ldr	r3, [r4, #68]
 5198 011e B3F5801F 		cmp	r3, #1048576
 5199 0122 40D0     		beq	.L469
 5200              	.L454:
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5201              		.loc 1 3145 0
 5202 0124 A36A     		ldr	r3, [r4, #40]
 5203 0126 13F0800F 		tst	r3, #128
 5204 012a 0BD0     		beq	.L440
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5205              		.loc 1 3147 0
 5206 012c E36C     		ldr	r3, [r4, #76]
 5207 012e 13B1     		cbz	r3, .L459
ARM GAS  /tmp/cc5hFHZt.s 			page 177


3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5208              		.loc 1 3147 0 is_stmt 0 discriminator 1
 5209 0130 B3F5002F 		cmp	r3, #524288
 5210 0134 50D1     		bne	.L470
 5211              	.L459:
3148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5212              		.loc 1 3148 0 is_stmt 1
 5213 0136 2268     		ldr	r2, [r4]
 5214 0138 5368     		ldr	r3, [r2, #4]
 5215 013a 23F40023 		bic	r3, r3, #524288
 5216 013e E16C     		ldr	r1, [r4, #76]
 5217 0140 0B43     		orrs	r3, r3, r1
 5218 0142 5360     		str	r3, [r2, #4]
 5219              	.L440:
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5220              		.loc 1 3150 0
 5221 0144 10BD     		pop	{r4, pc}
 5222              	.LVL443:
 5223              	.L461:
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5224              		.loc 1 3086 0 discriminator 1
 5225 0146 40F60E41 		movw	r1, #3086
 5226 014a 2748     		ldr	r0, .L472+4
 5227              	.LVL444:
 5228 014c FFF7FEFF 		bl	assert_failed
 5229              	.LVL445:
 5230 0150 5CE7     		b	.L441
 5231              	.L462:
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5232              		.loc 1 3091 0 discriminator 2
 5233 0152 40F61341 		movw	r1, #3091
 5234 0156 2448     		ldr	r0, .L472+4
 5235 0158 FFF7FEFF 		bl	assert_failed
 5236              	.LVL446:
 5237 015c 60E7     		b	.L443
 5238              	.L463:
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5239              		.loc 1 3098 0 discriminator 2
 5240 015e 40F61A41 		movw	r1, #3098
 5241 0162 2148     		ldr	r0, .L472+4
 5242 0164 FFF7FEFF 		bl	assert_failed
 5243              	.LVL447:
 5244 0168 6BE7     		b	.L445
 5245              	.L464:
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5246              		.loc 1 3105 0 discriminator 2
 5247 016a 40F62141 		movw	r1, #3105
 5248 016e 1E48     		ldr	r0, .L472+4
 5249 0170 FFF7FEFF 		bl	assert_failed
 5250              	.LVL448:
 5251 0174 76E7     		b	.L447
 5252              	.L465:
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5253              		.loc 1 3112 0 discriminator 2
 5254 0176 40F62841 		movw	r1, #3112
 5255 017a 1B48     		ldr	r0, .L472+4
 5256 017c FFF7FEFF 		bl	assert_failed
ARM GAS  /tmp/cc5hFHZt.s 			page 178


 5257              	.LVL449:
 5258 0180 80E7     		b	.L449
 5259              	.L466:
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5260              		.loc 1 3119 0 discriminator 2
 5261 0182 40F62F41 		movw	r1, #3119
 5262 0186 1848     		ldr	r0, .L472+4
 5263 0188 FFF7FEFF 		bl	assert_failed
 5264              	.LVL450:
 5265 018c 8AE7     		b	.L451
 5266              	.L467:
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5267              		.loc 1 3126 0 discriminator 2
 5268 018e 40F63641 		movw	r1, #3126
 5269 0192 1548     		ldr	r0, .L472+4
 5270 0194 FFF7FEFF 		bl	assert_failed
 5271              	.LVL451:
 5272 0198 94E7     		b	.L453
 5273              	.L468:
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5274              		.loc 1 3134 0 discriminator 2
 5275 019a 40F63E41 		movw	r1, #3134
 5276 019e 1248     		ldr	r0, .L472+4
 5277 01a0 FFF7FEFF 		bl	assert_failed
 5278              	.LVL452:
 5279 01a4 B3E7     		b	.L456
 5280              	.L469:
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5281              		.loc 1 3139 0
 5282 01a6 A36C     		ldr	r3, [r4, #72]
 5283 01a8 43B1     		cbz	r3, .L457
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5284              		.loc 1 3139 0 is_stmt 0 discriminator 1
 5285 01aa B3F5001F 		cmp	r3, #2097152
 5286 01ae 05D0     		beq	.L457
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5287              		.loc 1 3139 0 discriminator 2
 5288 01b0 B3F5800F 		cmp	r3, #4194304
 5289 01b4 02D0     		beq	.L457
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5290              		.loc 1 3139 0 discriminator 3
 5291 01b6 B3F5C00F 		cmp	r3, #6291456
 5292 01ba 07D1     		bne	.L471
 5293              	.L457:
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5294              		.loc 1 3140 0 is_stmt 1
 5295 01bc 2268     		ldr	r2, [r4]
 5296 01be 5368     		ldr	r3, [r2, #4]
 5297 01c0 23F4C003 		bic	r3, r3, #6291456
 5298 01c4 A16C     		ldr	r1, [r4, #72]
 5299 01c6 0B43     		orrs	r3, r3, r1
 5300 01c8 5360     		str	r3, [r2, #4]
 5301 01ca ABE7     		b	.L454
 5302              	.L471:
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5303              		.loc 1 3139 0 discriminator 4
 5304 01cc 40F64341 		movw	r1, #3139
ARM GAS  /tmp/cc5hFHZt.s 			page 179


 5305 01d0 0548     		ldr	r0, .L472+4
 5306 01d2 FFF7FEFF 		bl	assert_failed
 5307              	.LVL453:
 5308 01d6 F1E7     		b	.L457
 5309              	.L470:
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5310              		.loc 1 3147 0 discriminator 2
 5311 01d8 40F64B41 		movw	r1, #3147
 5312 01dc 0248     		ldr	r0, .L472+4
 5313 01de FFF7FEFF 		bl	assert_failed
 5314              	.LVL454:
 5315 01e2 A8E7     		b	.L459
 5316              	.L473:
 5317              		.align	2
 5318              	.L472:
 5319 01e4 00380140 		.word	1073821696
 5320 01e8 00000000 		.word	.LC0
 5321              		.cfi_endproc
 5322              	.LFE175:
 5324              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 5325              		.align	1
 5326              		.global	UART_WaitOnFlagUntilTimeout
 5327              		.syntax unified
 5328              		.thumb
 5329              		.thumb_func
 5330              		.fpu fpv4-sp-d16
 5332              	UART_WaitOnFlagUntilTimeout:
 5333              	.LFB177:
3209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Wait until flag is set */
 5334              		.loc 1 3209 0
 5335              		.cfi_startproc
 5336              		@ args = 4, pretend = 0, frame = 0
 5337              		@ frame_needed = 0, uses_anonymous_args = 0
 5338              	.LVL455:
 5339 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5340              	.LCFI34:
 5341              		.cfi_def_cfa_offset 24
 5342              		.cfi_offset 4, -24
 5343              		.cfi_offset 5, -20
 5344              		.cfi_offset 6, -16
 5345              		.cfi_offset 7, -12
 5346              		.cfi_offset 8, -8
 5347              		.cfi_offset 14, -4
 5348 0004 0446     		mov	r4, r0
 5349 0006 0F46     		mov	r7, r1
 5350 0008 1646     		mov	r6, r2
 5351 000a 9846     		mov	r8, r3
 5352 000c 069D     		ldr	r5, [sp, #24]
 5353              	.LVL456:
 5354              	.L476:
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5355              		.loc 1 3211 0
 5356 000e 2368     		ldr	r3, [r4]
 5357 0010 DB69     		ldr	r3, [r3, #28]
 5358 0012 37EA0303 		bics	r3, r7, r3
 5359 0016 0CBF     		ite	eq
 5360 0018 0123     		moveq	r3, #1
ARM GAS  /tmp/cc5hFHZt.s 			page 180


 5361 001a 0023     		movne	r3, #0
 5362 001c B342     		cmp	r3, r6
 5363 001e 3FD1     		bne	.L482
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5364              		.loc 1 3214 0
 5365 0020 B5F1FF3F 		cmp	r5, #-1
 5366 0024 F3D0     		beq	.L476
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5367              		.loc 1 3216 0
 5368 0026 FFF7FEFF 		bl	HAL_GetTick
 5369              	.LVL457:
 5370 002a A0EB0800 		sub	r0, r0, r8
 5371 002e A842     		cmp	r0, r5
 5372 0030 22D8     		bhi	.L477
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5373              		.loc 1 3216 0 is_stmt 0 discriminator 1
 5374 0032 0DB3     		cbz	r5, .L477
3231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5375              		.loc 1 3231 0 is_stmt 1
 5376 0034 2368     		ldr	r3, [r4]
 5377 0036 1A68     		ldr	r2, [r3]
 5378 0038 12F0040F 		tst	r2, #4
 5379 003c E7D0     		beq	.L476
3233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5380              		.loc 1 3233 0
 5381 003e DA69     		ldr	r2, [r3, #28]
 5382 0040 12F4006F 		tst	r2, #2048
 5383 0044 E3D0     		beq	.L476
3236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5384              		.loc 1 3236 0
 5385 0046 4FF40062 		mov	r2, #2048
 5386 004a 1A62     		str	r2, [r3, #32]
3240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5387              		.loc 1 3240 0
 5388 004c 2268     		ldr	r2, [r4]
 5389 004e 1368     		ldr	r3, [r2]
 5390 0050 23F4D073 		bic	r3, r3, #416
 5391 0054 1360     		str	r3, [r2]
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5392              		.loc 1 3241 0
 5393 0056 2268     		ldr	r2, [r4]
 5394 0058 9368     		ldr	r3, [r2, #8]
 5395 005a 23F00103 		bic	r3, r3, #1
 5396 005e 9360     		str	r3, [r2, #8]
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5397              		.loc 1 3243 0
 5398 0060 2023     		movs	r3, #32
 5399 0062 C4F88030 		str	r3, [r4, #128]
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 5400              		.loc 1 3244 0
 5401 0066 C4F88430 		str	r3, [r4, #132]
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5402              		.loc 1 3245 0
 5403 006a C4F88830 		str	r3, [r4, #136]
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5404              		.loc 1 3248 0
 5405 006e 0023     		movs	r3, #0
ARM GAS  /tmp/cc5hFHZt.s 			page 181


 5406 0070 84F87C30 		strb	r3, [r4, #124]
3250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5407              		.loc 1 3250 0
 5408 0074 0320     		movs	r0, #3
 5409 0076 14E0     		b	.L479
 5410              	.L477:
3220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5411              		.loc 1 3220 0
 5412 0078 2268     		ldr	r2, [r4]
 5413 007a 1368     		ldr	r3, [r2]
 5414 007c 23F4D073 		bic	r3, r3, #416
 5415 0080 1360     		str	r3, [r2]
3221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5416              		.loc 1 3221 0
 5417 0082 2268     		ldr	r2, [r4]
 5418 0084 9368     		ldr	r3, [r2, #8]
 5419 0086 23F00103 		bic	r3, r3, #1
 5420 008a 9360     		str	r3, [r2, #8]
3223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5421              		.loc 1 3223 0
 5422 008c 2023     		movs	r3, #32
 5423 008e C4F88030 		str	r3, [r4, #128]
3224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5424              		.loc 1 3224 0
 5425 0092 C4F88430 		str	r3, [r4, #132]
3226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5426              		.loc 1 3226 0
 5427 0096 0023     		movs	r3, #0
 5428 0098 84F87C30 		strb	r3, [r4, #124]
3228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 5429              		.loc 1 3228 0
 5430 009c 0320     		movs	r0, #3
 5431 009e 00E0     		b	.L479
 5432              	.L482:
3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 5433              		.loc 1 3255 0
 5434 00a0 0020     		movs	r0, #0
 5435              	.L479:
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5436              		.loc 1 3256 0
 5437 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5438              		.cfi_endproc
 5439              	.LFE177:
 5441              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 5442              		.align	1
 5443              		.global	HAL_UART_Transmit
 5444              		.syntax unified
 5445              		.thumb
 5446              		.thumb_func
 5447              		.fpu fpv4-sp-d16
 5449              	HAL_UART_Transmit:
 5450              	.LFB139:
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 5451              		.loc 1 1040 0
 5452              		.cfi_startproc
 5453              		@ args = 0, pretend = 0, frame = 0
 5454              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc5hFHZt.s 			page 182


 5455              	.LVL458:
 5456 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5457              	.LCFI35:
 5458              		.cfi_def_cfa_offset 24
 5459              		.cfi_offset 4, -24
 5460              		.cfi_offset 5, -20
 5461              		.cfi_offset 6, -16
 5462              		.cfi_offset 7, -12
 5463              		.cfi_offset 8, -8
 5464              		.cfi_offset 14, -4
 5465 0004 82B0     		sub	sp, sp, #8
 5466              	.LCFI36:
 5467              		.cfi_def_cfa_offset 32
 5468 0006 1E46     		mov	r6, r3
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5469              		.loc 1 1046 0
 5470 0008 D0F88030 		ldr	r3, [r0, #128]
 5471              	.LVL459:
 5472 000c 202B     		cmp	r3, #32
 5473 000e 58D1     		bne	.L490
 5474 0010 0446     		mov	r4, r0
 5475 0012 0D46     		mov	r5, r1
 5476 0014 9046     		mov	r8, r2
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5477              		.loc 1 1048 0
 5478 0016 0029     		cmp	r1, #0
 5479 0018 58D0     		beq	.L491
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5480              		.loc 1 1048 0 is_stmt 0 discriminator 1
 5481 001a 002A     		cmp	r2, #0
 5482 001c 58D0     		beq	.L492
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5483              		.loc 1 1053 0 is_stmt 1
 5484 001e 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 5485 0022 012B     		cmp	r3, #1
 5486 0024 56D0     		beq	.L493
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5487              		.loc 1 1053 0 is_stmt 0 discriminator 2
 5488 0026 0123     		movs	r3, #1
 5489 0028 80F87C30 		strb	r3, [r0, #124]
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 5490              		.loc 1 1055 0 is_stmt 1 discriminator 2
 5491 002c 0023     		movs	r3, #0
 5492 002e C0F88830 		str	r3, [r0, #136]
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5493              		.loc 1 1056 0 discriminator 2
 5494 0032 2123     		movs	r3, #33
 5495 0034 C0F88030 		str	r3, [r0, #128]
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5496              		.loc 1 1059 0 discriminator 2
 5497 0038 FFF7FEFF 		bl	HAL_GetTick
 5498              	.LVL460:
 5499 003c 0746     		mov	r7, r0
 5500              	.LVL461:
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 5501              		.loc 1 1061 0 discriminator 2
 5502 003e A4F85480 		strh	r8, [r4, #84]	@ movhi
ARM GAS  /tmp/cc5hFHZt.s 			page 183


1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5503              		.loc 1 1062 0 discriminator 2
 5504 0042 A4F85680 		strh	r8, [r4, #86]	@ movhi
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5505              		.loc 1 1065 0 discriminator 2
 5506 0046 A368     		ldr	r3, [r4, #8]
 5507 0048 B3F5805F 		cmp	r3, #4096
 5508 004c 05D0     		beq	.L499
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5509              		.loc 1 1073 0
 5510 004e 4FF00008 		mov	r8, #0
 5511              	.LVL462:
 5512              	.L485:
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5513              		.loc 1 1076 0
 5514 0052 0023     		movs	r3, #0
 5515 0054 84F87C30 		strb	r3, [r4, #124]
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5516              		.loc 1 1078 0
 5517 0058 13E0     		b	.L486
 5518              	.LVL463:
 5519              	.L499:
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5520              		.loc 1 1065 0 discriminator 1
 5521 005a 2369     		ldr	r3, [r4, #16]
 5522 005c 13B1     		cbz	r3, .L495
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5523              		.loc 1 1073 0
 5524 005e 4FF00008 		mov	r8, #0
 5525 0062 F6E7     		b	.L485
 5526              	.L495:
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5527              		.loc 1 1068 0
 5528 0064 A846     		mov	r8, r5
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 5529              		.loc 1 1067 0
 5530 0066 0025     		movs	r5, #0
 5531              	.LVL464:
 5532 0068 F3E7     		b	.L485
 5533              	.LVL465:
 5534              	.L501:
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
 5535              		.loc 1 1086 0
 5536 006a 38F8023B 		ldrh	r3, [r8], #2
 5537              	.LVL466:
 5538 006e 2268     		ldr	r2, [r4]
 5539 0070 C3F30803 		ubfx	r3, r3, #0, #9
 5540 0074 9362     		str	r3, [r2, #40]
 5541              	.LVL467:
 5542              	.L488:
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5543              		.loc 1 1094 0
 5544 0076 B4F85630 		ldrh	r3, [r4, #86]
 5545 007a 013B     		subs	r3, r3, #1
 5546 007c 9BB2     		uxth	r3, r3
 5547 007e A4F85630 		strh	r3, [r4, #86]	@ movhi
 5548              	.L486:
ARM GAS  /tmp/cc5hFHZt.s 			page 184


1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5549              		.loc 1 1078 0
 5550 0082 B4F85630 		ldrh	r3, [r4, #86]
 5551 0086 9BB2     		uxth	r3, r3
 5552 0088 73B1     		cbz	r3, .L500
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5553              		.loc 1 1080 0
 5554 008a 0096     		str	r6, [sp]
 5555 008c 3B46     		mov	r3, r7
 5556 008e 0022     		movs	r2, #0
 5557 0090 8021     		movs	r1, #128
 5558 0092 2046     		mov	r0, r4
 5559 0094 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5560              	.LVL468:
 5561 0098 F0B9     		cbnz	r0, .L496
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5562              		.loc 1 1084 0
 5563 009a 002D     		cmp	r5, #0
 5564 009c E5D0     		beq	.L501
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
 5565              		.loc 1 1091 0
 5566 009e 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 5567              	.LVL469:
 5568 00a2 2368     		ldr	r3, [r4]
 5569 00a4 9A62     		str	r2, [r3, #40]
 5570              	.LVL470:
 5571 00a6 E6E7     		b	.L488
 5572              	.L500:
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5573              		.loc 1 1097 0
 5574 00a8 0096     		str	r6, [sp]
 5575 00aa 3B46     		mov	r3, r7
 5576 00ac 0022     		movs	r2, #0
 5577 00ae 4021     		movs	r1, #64
 5578 00b0 2046     		mov	r0, r4
 5579 00b2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5580              	.LVL471:
 5581 00b6 0346     		mov	r3, r0
 5582 00b8 80B9     		cbnz	r0, .L497
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5583              		.loc 1 1103 0
 5584 00ba 2022     		movs	r2, #32
 5585 00bc C4F88020 		str	r2, [r4, #128]
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5586              		.loc 1 1105 0
 5587 00c0 00E0     		b	.L484
 5588              	.LVL472:
 5589              	.L490:
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5590              		.loc 1 1109 0
 5591 00c2 0223     		movs	r3, #2
 5592              	.LVL473:
 5593              	.L484:
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5594              		.loc 1 1111 0
 5595 00c4 1846     		mov	r0, r3
 5596 00c6 02B0     		add	sp, sp, #8
ARM GAS  /tmp/cc5hFHZt.s 			page 185


 5597              	.LCFI37:
 5598              		.cfi_remember_state
 5599              		.cfi_def_cfa_offset 24
 5600              		@ sp needed
 5601 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5602              	.LVL474:
 5603              	.L491:
 5604              	.LCFI38:
 5605              		.cfi_restore_state
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5606              		.loc 1 1050 0
 5607 00cc 0123     		movs	r3, #1
 5608 00ce F9E7     		b	.L484
 5609              	.L492:
 5610 00d0 0123     		movs	r3, #1
 5611 00d2 F7E7     		b	.L484
 5612              	.L493:
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5613              		.loc 1 1053 0
 5614 00d4 0223     		movs	r3, #2
 5615 00d6 F5E7     		b	.L484
 5616              	.LVL475:
 5617              	.L496:
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 5618              		.loc 1 1082 0
 5619 00d8 0323     		movs	r3, #3
 5620 00da F3E7     		b	.L484
 5621              	.L497:
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5622              		.loc 1 1099 0
 5623 00dc 0323     		movs	r3, #3
 5624 00de F1E7     		b	.L484
 5625              		.cfi_endproc
 5626              	.LFE139:
 5628              		.section	.text.HAL_UART_Receive,"ax",%progbits
 5629              		.align	1
 5630              		.global	HAL_UART_Receive
 5631              		.syntax unified
 5632              		.thumb
 5633              		.thumb_func
 5634              		.fpu fpv4-sp-d16
 5636              	HAL_UART_Receive:
 5637              	.LFB140:
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 5638              		.loc 1 1129 0
 5639              		.cfi_startproc
 5640              		@ args = 0, pretend = 0, frame = 0
 5641              		@ frame_needed = 0, uses_anonymous_args = 0
 5642              	.LVL476:
 5643 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5644              	.LCFI39:
 5645              		.cfi_def_cfa_offset 28
 5646              		.cfi_offset 4, -28
 5647              		.cfi_offset 5, -24
 5648              		.cfi_offset 6, -20
 5649              		.cfi_offset 7, -16
 5650              		.cfi_offset 8, -12
ARM GAS  /tmp/cc5hFHZt.s 			page 186


 5651              		.cfi_offset 9, -8
 5652              		.cfi_offset 14, -4
 5653 0004 83B0     		sub	sp, sp, #12
 5654              	.LCFI40:
 5655              		.cfi_def_cfa_offset 40
 5656 0006 1E46     		mov	r6, r3
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5657              		.loc 1 1136 0
 5658 0008 D0F88430 		ldr	r3, [r0, #132]
 5659              	.LVL477:
 5660 000c 202B     		cmp	r3, #32
 5661 000e 7ED1     		bne	.L516
 5662 0010 0446     		mov	r4, r0
 5663 0012 0D46     		mov	r5, r1
 5664 0014 9046     		mov	r8, r2
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5665              		.loc 1 1138 0
 5666 0016 0029     		cmp	r1, #0
 5667 0018 7DD0     		beq	.L517
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5668              		.loc 1 1138 0 is_stmt 0 discriminator 1
 5669 001a 002A     		cmp	r2, #0
 5670 001c 7DD0     		beq	.L518
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5671              		.loc 1 1143 0 is_stmt 1
 5672 001e 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 5673 0022 012B     		cmp	r3, #1
 5674 0024 7BD0     		beq	.L519
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5675              		.loc 1 1143 0 is_stmt 0 discriminator 2
 5676 0026 0123     		movs	r3, #1
 5677 0028 80F87C30 		strb	r3, [r0, #124]
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 5678              		.loc 1 1145 0 is_stmt 1 discriminator 2
 5679 002c 0023     		movs	r3, #0
 5680 002e C0F88830 		str	r3, [r0, #136]
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5681              		.loc 1 1146 0 discriminator 2
 5682 0032 2223     		movs	r3, #34
 5683 0034 C0F88430 		str	r3, [r0, #132]
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5684              		.loc 1 1149 0 discriminator 2
 5685 0038 FFF7FEFF 		bl	HAL_GetTick
 5686              	.LVL478:
 5687 003c 0746     		mov	r7, r0
 5688              	.LVL479:
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
 5689              		.loc 1 1151 0 discriminator 2
 5690 003e A4F85C80 		strh	r8, [r4, #92]	@ movhi
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5691              		.loc 1 1152 0 discriminator 2
 5692 0042 A4F85E80 		strh	r8, [r4, #94]	@ movhi
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5693              		.loc 1 1155 0 discriminator 2
 5694 0046 A368     		ldr	r3, [r4, #8]
 5695 0048 B3F5805F 		cmp	r3, #4096
 5696 004c 06D0     		beq	.L524
ARM GAS  /tmp/cc5hFHZt.s 			page 187


 5697 004e A3B9     		cbnz	r3, .L507
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5698              		.loc 1 1155 0 is_stmt 0 discriminator 5
 5699 0050 2269     		ldr	r2, [r4, #16]
 5700 0052 72B9     		cbnz	r2, .L508
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5701              		.loc 1 1155 0 discriminator 7
 5702 0054 FF22     		movs	r2, #255
 5703 0056 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5704 005a 14E0     		b	.L506
 5705              	.L524:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5706              		.loc 1 1155 0 discriminator 1
 5707 005c 2269     		ldr	r2, [r4, #16]
 5708 005e 22B9     		cbnz	r2, .L505
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5709              		.loc 1 1155 0 discriminator 3
 5710 0060 40F2FF12 		movw	r2, #511
 5711 0064 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5712 0068 0DE0     		b	.L506
 5713              	.L505:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5714              		.loc 1 1155 0 discriminator 4
 5715 006a FF22     		movs	r2, #255
 5716 006c A4F86020 		strh	r2, [r4, #96]	@ movhi
 5717 0070 09E0     		b	.L506
 5718              	.L508:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5719              		.loc 1 1155 0 discriminator 8
 5720 0072 7F22     		movs	r2, #127
 5721 0074 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5722 0078 05E0     		b	.L506
 5723              	.L507:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5724              		.loc 1 1155 0 discriminator 6
 5725 007a B3F1805F 		cmp	r3, #268435456
 5726 007e 0DD0     		beq	.L525
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5727              		.loc 1 1155 0 discriminator 10
 5728 0080 0022     		movs	r2, #0
 5729 0082 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5730              	.L506:
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5731              		.loc 1 1156 0 is_stmt 1
 5732 0086 B4F86080 		ldrh	r8, [r4, #96]
 5733              	.LVL480:
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5734              		.loc 1 1159 0
 5735 008a B3F5805F 		cmp	r3, #4096
 5736 008e 0FD0     		beq	.L526
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5737              		.loc 1 1167 0
 5738 0090 4FF00009 		mov	r9, #0
 5739              	.LVL481:
 5740              	.L511:
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5741              		.loc 1 1170 0
ARM GAS  /tmp/cc5hFHZt.s 			page 188


 5742 0094 0023     		movs	r3, #0
 5743 0096 84F87C30 		strb	r3, [r4, #124]
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5744              		.loc 1 1173 0
 5745 009a 1DE0     		b	.L512
 5746              	.LVL482:
 5747              	.L525:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5748              		.loc 1 1155 0 discriminator 9
 5749 009c 2269     		ldr	r2, [r4, #16]
 5750 009e 1AB9     		cbnz	r2, .L510
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5751              		.loc 1 1155 0 is_stmt 0 discriminator 11
 5752 00a0 7F22     		movs	r2, #127
 5753 00a2 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5754 00a6 EEE7     		b	.L506
 5755              	.L510:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5756              		.loc 1 1155 0 discriminator 12
 5757 00a8 3F22     		movs	r2, #63
 5758 00aa A4F86020 		strh	r2, [r4, #96]	@ movhi
 5759 00ae EAE7     		b	.L506
 5760              	.LVL483:
 5761              	.L526:
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5762              		.loc 1 1159 0 is_stmt 1 discriminator 1
 5763 00b0 2369     		ldr	r3, [r4, #16]
 5764 00b2 13B1     		cbz	r3, .L521
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5765              		.loc 1 1167 0
 5766 00b4 4FF00009 		mov	r9, #0
 5767 00b8 ECE7     		b	.L511
 5768              	.L521:
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5769              		.loc 1 1162 0
 5770 00ba A946     		mov	r9, r5
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 5771              		.loc 1 1161 0
 5772 00bc 0025     		movs	r5, #0
 5773              	.LVL484:
 5774 00be E9E7     		b	.L511
 5775              	.LVL485:
 5776              	.L528:
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
 5777              		.loc 1 1181 0
 5778 00c0 2368     		ldr	r3, [r4]
 5779 00c2 5B6A     		ldr	r3, [r3, #36]
 5780 00c4 08EA0303 		and	r3, r8, r3
 5781 00c8 29F8023B 		strh	r3, [r9], #2	@ movhi
 5782              	.LVL486:
 5783              	.L514:
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5784              		.loc 1 1189 0
 5785 00cc B4F85E30 		ldrh	r3, [r4, #94]
 5786 00d0 013B     		subs	r3, r3, #1
 5787 00d2 9BB2     		uxth	r3, r3
 5788 00d4 A4F85E30 		strh	r3, [r4, #94]	@ movhi
ARM GAS  /tmp/cc5hFHZt.s 			page 189


 5789              	.L512:
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5790              		.loc 1 1173 0
 5791 00d8 B4F85E30 		ldrh	r3, [r4, #94]
 5792 00dc 9BB2     		uxth	r3, r3
 5793 00de 8BB1     		cbz	r3, .L527
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5794              		.loc 1 1175 0
 5795 00e0 0096     		str	r6, [sp]
 5796 00e2 3B46     		mov	r3, r7
 5797 00e4 0022     		movs	r2, #0
 5798 00e6 2021     		movs	r1, #32
 5799 00e8 2046     		mov	r0, r4
 5800 00ea FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5801              	.LVL487:
 5802 00ee C0B9     		cbnz	r0, .L522
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5803              		.loc 1 1179 0
 5804 00f0 002D     		cmp	r5, #0
 5805 00f2 E5D0     		beq	.L528
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
 5806              		.loc 1 1186 0
 5807 00f4 2368     		ldr	r3, [r4]
 5808 00f6 5A6A     		ldr	r2, [r3, #36]
 5809 00f8 5FFA88F3 		uxtb	r3, r8
 5810 00fc 1340     		ands	r3, r3, r2
 5811 00fe 05F8013B 		strb	r3, [r5], #1
 5812              	.LVL488:
 5813 0102 E3E7     		b	.L514
 5814              	.L527:
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5815              		.loc 1 1193 0
 5816 0104 2023     		movs	r3, #32
 5817 0106 C4F88430 		str	r3, [r4, #132]
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5818              		.loc 1 1195 0
 5819 010a 0020     		movs	r0, #0
 5820 010c 00E0     		b	.L503
 5821              	.LVL489:
 5822              	.L516:
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5823              		.loc 1 1199 0
 5824 010e 0220     		movs	r0, #2
 5825              	.LVL490:
 5826              	.L503:
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5827              		.loc 1 1201 0
 5828 0110 03B0     		add	sp, sp, #12
 5829              	.LCFI41:
 5830              		.cfi_remember_state
 5831              		.cfi_def_cfa_offset 28
 5832              		@ sp needed
 5833 0112 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5834              	.LVL491:
 5835              	.L517:
 5836              	.LCFI42:
 5837              		.cfi_restore_state
ARM GAS  /tmp/cc5hFHZt.s 			page 190


1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5838              		.loc 1 1140 0
 5839 0116 0120     		movs	r0, #1
 5840              	.LVL492:
 5841 0118 FAE7     		b	.L503
 5842              	.LVL493:
 5843              	.L518:
 5844 011a 0120     		movs	r0, #1
 5845              	.LVL494:
 5846 011c F8E7     		b	.L503
 5847              	.LVL495:
 5848              	.L519:
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5849              		.loc 1 1143 0
 5850 011e 0220     		movs	r0, #2
 5851              	.LVL496:
 5852 0120 F6E7     		b	.L503
 5853              	.LVL497:
 5854              	.L522:
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 5855              		.loc 1 1177 0
 5856 0122 0320     		movs	r0, #3
 5857 0124 F4E7     		b	.L503
 5858              		.cfi_endproc
 5859              	.LFE140:
 5861              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5862              		.align	1
 5863              		.global	UART_CheckIdleState
 5864              		.syntax unified
 5865              		.thumb
 5866              		.thumb_func
 5867              		.fpu fpv4-sp-d16
 5869              	UART_CheckIdleState:
 5870              	.LFB176:
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
 5871              		.loc 1 3158 0
 5872              		.cfi_startproc
 5873              		@ args = 0, pretend = 0, frame = 0
 5874              		@ frame_needed = 0, uses_anonymous_args = 0
 5875              	.LVL498:
 5876 0000 30B5     		push	{r4, r5, lr}
 5877              	.LCFI43:
 5878              		.cfi_def_cfa_offset 12
 5879              		.cfi_offset 4, -12
 5880              		.cfi_offset 5, -8
 5881              		.cfi_offset 14, -4
 5882 0002 83B0     		sub	sp, sp, #12
 5883              	.LCFI44:
 5884              		.cfi_def_cfa_offset 24
 5885 0004 0446     		mov	r4, r0
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5886              		.loc 1 3162 0
 5887 0006 0023     		movs	r3, #0
 5888 0008 C0F88830 		str	r3, [r0, #136]
3165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5889              		.loc 1 3165 0
 5890 000c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc5hFHZt.s 			page 191


 5891              	.LVL499:
 5892 0010 0546     		mov	r5, r0
 5893              	.LVL500:
3168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5894              		.loc 1 3168 0
 5895 0012 2368     		ldr	r3, [r4]
 5896 0014 1B68     		ldr	r3, [r3]
 5897 0016 13F0080F 		tst	r3, #8
 5898 001a 0ED1     		bne	.L536
 5899              	.LVL501:
 5900              	.L530:
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5901              		.loc 1 3179 0
 5902 001c 2368     		ldr	r3, [r4]
 5903 001e 1B68     		ldr	r3, [r3]
 5904 0020 13F0040F 		tst	r3, #4
 5905 0024 17D1     		bne	.L537
 5906              	.L532:
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5907              		.loc 1 3190 0
 5908 0026 2023     		movs	r3, #32
 5909 0028 C4F88030 		str	r3, [r4, #128]
3191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5910              		.loc 1 3191 0
 5911 002c C4F88430 		str	r3, [r4, #132]
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5912              		.loc 1 3193 0
 5913 0030 0020     		movs	r0, #0
 5914 0032 84F87C00 		strb	r0, [r4, #124]
 5915              	.L531:
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5916              		.loc 1 3196 0
 5917 0036 03B0     		add	sp, sp, #12
 5918              	.LCFI45:
 5919              		.cfi_remember_state
 5920              		.cfi_def_cfa_offset 12
 5921              		@ sp needed
 5922 0038 30BD     		pop	{r4, r5, pc}
 5923              	.LVL502:
 5924              	.L536:
 5925              	.LCFI46:
 5926              		.cfi_restore_state
3171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5927              		.loc 1 3171 0
 5928 003a 6FF07E43 		mvn	r3, #-33554432
 5929 003e 0093     		str	r3, [sp]
 5930 0040 0346     		mov	r3, r0
 5931 0042 0022     		movs	r2, #0
 5932 0044 4FF40011 		mov	r1, #2097152
 5933 0048 2046     		mov	r0, r4
 5934              	.LVL503:
 5935 004a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5936              	.LVL504:
 5937 004e 0028     		cmp	r0, #0
 5938 0050 E4D0     		beq	.L530
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5939              		.loc 1 3174 0
ARM GAS  /tmp/cc5hFHZt.s 			page 192


 5940 0052 0320     		movs	r0, #3
 5941 0054 EFE7     		b	.L531
 5942              	.L537:
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5943              		.loc 1 3182 0
 5944 0056 6FF07E43 		mvn	r3, #-33554432
 5945 005a 0093     		str	r3, [sp]
 5946 005c 2B46     		mov	r3, r5
 5947 005e 0022     		movs	r2, #0
 5948 0060 4FF48001 		mov	r1, #4194304
 5949 0064 2046     		mov	r0, r4
 5950 0066 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5951              	.LVL505:
 5952 006a 0028     		cmp	r0, #0
 5953 006c DBD0     		beq	.L532
3185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5954              		.loc 1 3185 0
 5955 006e 0320     		movs	r0, #3
 5956 0070 E1E7     		b	.L531
 5957              		.cfi_endproc
 5958              	.LFE176:
 5960              		.section	.text.HAL_UART_Init,"ax",%progbits
 5961              		.align	1
 5962              		.global	HAL_UART_Init
 5963              		.syntax unified
 5964              		.thumb
 5965              		.thumb_func
 5966              		.fpu fpv4-sp-d16
 5968              	HAL_UART_Init:
 5969              	.LFB132:
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5970              		.loc 1 299 0
 5971              		.cfi_startproc
 5972              		@ args = 0, pretend = 0, frame = 0
 5973              		@ frame_needed = 0, uses_anonymous_args = 0
 5974              	.LVL506:
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5975              		.loc 1 301 0
 5976 0000 0028     		cmp	r0, #0
 5977 0002 67D0     		beq	.L544
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 5978              		.loc 1 299 0
 5979 0004 10B5     		push	{r4, lr}
 5980              	.LCFI47:
 5981              		.cfi_def_cfa_offset 8
 5982              		.cfi_offset 4, -8
 5983              		.cfi_offset 14, -4
 5984 0006 0446     		mov	r4, r0
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5985              		.loc 1 306 0
 5986 0008 8369     		ldr	r3, [r0, #24]
 5987 000a 002B     		cmp	r3, #0
 5988 000c 3ED0     		beq	.L540
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5989              		.loc 1 309 0
 5990 000e 0368     		ldr	r3, [r0]
 5991 0010 314A     		ldr	r2, .L551
ARM GAS  /tmp/cc5hFHZt.s 			page 193


 5992 0012 9342     		cmp	r3, r2
 5993 0014 14D0     		beq	.L541
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5994              		.loc 1 309 0 is_stmt 0 discriminator 1
 5995 0016 A2F57442 		sub	r2, r2, #62464
 5996 001a 9342     		cmp	r3, r2
 5997 001c 10D0     		beq	.L541
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5998              		.loc 1 309 0 discriminator 2
 5999 001e 02F58062 		add	r2, r2, #1024
 6000 0022 9342     		cmp	r3, r2
 6001 0024 0CD0     		beq	.L541
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6002              		.loc 1 309 0 discriminator 3
 6003 0026 02F58062 		add	r2, r2, #1024
 6004 002a 9342     		cmp	r3, r2
 6005 002c 08D0     		beq	.L541
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6006              		.loc 1 309 0 discriminator 4
 6007 002e 02F55052 		add	r2, r2, #13312
 6008 0032 9342     		cmp	r3, r2
 6009 0034 04D0     		beq	.L541
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6010              		.loc 1 309 0 discriminator 5
 6011 0036 40F23511 		movw	r1, #309
 6012 003a 2848     		ldr	r0, .L551+4
 6013              	.LVL507:
 6014 003c FFF7FEFF 		bl	assert_failed
 6015              	.LVL508:
 6016              	.L541:
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6017              		.loc 1 317 0 is_stmt 1
 6018 0040 D4F88030 		ldr	r3, [r4, #128]
 6019 0044 002B     		cmp	r3, #0
 6020 0046 3BD0     		beq	.L549
 6021              	.L542:
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6022              		.loc 1 338 0
 6023 0048 2423     		movs	r3, #36
 6024 004a C4F88030 		str	r3, [r4, #128]
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6025              		.loc 1 340 0
 6026 004e 2268     		ldr	r2, [r4]
 6027 0050 1368     		ldr	r3, [r2]
 6028 0052 23F00103 		bic	r3, r3, #1
 6029 0056 1360     		str	r3, [r2]
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6030              		.loc 1 343 0
 6031 0058 2046     		mov	r0, r4
 6032 005a FFF7FEFF 		bl	UART_SetConfig
 6033              	.LVL509:
 6034 005e 0128     		cmp	r0, #1
 6035 0060 13D0     		beq	.L539
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6036              		.loc 1 348 0
 6037 0062 A36A     		ldr	r3, [r4, #40]
 6038 0064 93BB     		cbnz	r3, .L550
ARM GAS  /tmp/cc5hFHZt.s 			page 194


 6039              	.L543:
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 6040              		.loc 1 356 0
 6041 0066 2268     		ldr	r2, [r4]
 6042 0068 5368     		ldr	r3, [r2, #4]
 6043 006a 23F49043 		bic	r3, r3, #18432
 6044 006e 5360     		str	r3, [r2, #4]
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6045              		.loc 1 357 0
 6046 0070 2268     		ldr	r2, [r4]
 6047 0072 9368     		ldr	r3, [r2, #8]
 6048 0074 23F02A03 		bic	r3, r3, #42
 6049 0078 9360     		str	r3, [r2, #8]
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6050              		.loc 1 359 0
 6051 007a 2268     		ldr	r2, [r4]
 6052 007c 1368     		ldr	r3, [r2]
 6053 007e 43F00103 		orr	r3, r3, #1
 6054 0082 1360     		str	r3, [r2]
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6055              		.loc 1 362 0
 6056 0084 2046     		mov	r0, r4
 6057 0086 FFF7FEFF 		bl	UART_CheckIdleState
 6058              	.LVL510:
 6059              	.L539:
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6060              		.loc 1 363 0
 6061 008a 10BD     		pop	{r4, pc}
 6062              	.LVL511:
 6063              	.L540:
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6064              		.loc 1 314 0
 6065 008c 0368     		ldr	r3, [r0]
 6066 008e 124A     		ldr	r2, .L551
 6067 0090 9342     		cmp	r3, r2
 6068 0092 D5D0     		beq	.L541
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6069              		.loc 1 314 0 is_stmt 0 discriminator 1
 6070 0094 A2F57442 		sub	r2, r2, #62464
 6071 0098 9342     		cmp	r3, r2
 6072 009a D1D0     		beq	.L541
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6073              		.loc 1 314 0 discriminator 2
 6074 009c 02F58062 		add	r2, r2, #1024
 6075 00a0 9342     		cmp	r3, r2
 6076 00a2 CDD0     		beq	.L541
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6077              		.loc 1 314 0 discriminator 3
 6078 00a4 02F58062 		add	r2, r2, #1024
 6079 00a8 9342     		cmp	r3, r2
 6080 00aa C9D0     		beq	.L541
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6081              		.loc 1 314 0 discriminator 4
 6082 00ac 02F55052 		add	r2, r2, #13312
 6083 00b0 9342     		cmp	r3, r2
 6084 00b2 C5D0     		beq	.L541
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
ARM GAS  /tmp/cc5hFHZt.s 			page 195


 6085              		.loc 1 314 0 discriminator 5
 6086 00b4 4FF49D71 		mov	r1, #314
 6087 00b8 0848     		ldr	r0, .L551+4
 6088              	.LVL512:
 6089 00ba FFF7FEFF 		bl	assert_failed
 6090              	.LVL513:
 6091 00be BFE7     		b	.L541
 6092              	.L549:
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6093              		.loc 1 320 0 is_stmt 1
 6094 00c0 84F87C30 		strb	r3, [r4, #124]
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6095              		.loc 1 334 0
 6096 00c4 2046     		mov	r0, r4
 6097 00c6 FFF7FEFF 		bl	HAL_UART_MspInit
 6098              	.LVL514:
 6099 00ca BDE7     		b	.L542
 6100              	.L550:
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6101              		.loc 1 350 0
 6102 00cc 2046     		mov	r0, r4
 6103 00ce FFF7FEFF 		bl	UART_AdvFeatureConfig
 6104              	.LVL515:
 6105 00d2 C8E7     		b	.L543
 6106              	.LVL516:
 6107              	.L544:
 6108              	.LCFI48:
 6109              		.cfi_def_cfa_offset 0
 6110              		.cfi_restore 4
 6111              		.cfi_restore 14
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6112              		.loc 1 303 0
 6113 00d4 0120     		movs	r0, #1
 6114              	.LVL517:
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6115              		.loc 1 363 0
 6116 00d6 7047     		bx	lr
 6117              	.L552:
 6118              		.align	2
 6119              	.L551:
 6120 00d8 00380140 		.word	1073821696
 6121 00dc 00000000 		.word	.LC0
 6122              		.cfi_endproc
 6123              	.LFE132:
 6125              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 6126              		.align	1
 6127              		.global	HAL_HalfDuplex_Init
 6128              		.syntax unified
 6129              		.thumb
 6130              		.thumb_func
 6131              		.fpu fpv4-sp-d16
 6133              	HAL_HalfDuplex_Init:
 6134              	.LFB133:
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6135              		.loc 1 372 0
 6136              		.cfi_startproc
 6137              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc5hFHZt.s 			page 196


 6138              		@ frame_needed = 0, uses_anonymous_args = 0
 6139              	.LVL518:
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6140              		.loc 1 374 0
 6141 0000 0028     		cmp	r0, #0
 6142 0002 4ED0     		beq	.L558
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6143              		.loc 1 372 0
 6144 0004 10B5     		push	{r4, lr}
 6145              	.LCFI49:
 6146              		.cfi_def_cfa_offset 8
 6147              		.cfi_offset 4, -8
 6148              		.cfi_offset 14, -4
 6149 0006 0446     		mov	r4, r0
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6150              		.loc 1 380 0
 6151 0008 0368     		ldr	r3, [r0]
 6152 000a 274A     		ldr	r2, .L565
 6153 000c 9342     		cmp	r3, r2
 6154 000e 14D0     		beq	.L555
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6155              		.loc 1 380 0 is_stmt 0 discriminator 1
 6156 0010 A2F57442 		sub	r2, r2, #62464
 6157 0014 9342     		cmp	r3, r2
 6158 0016 10D0     		beq	.L555
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6159              		.loc 1 380 0 discriminator 2
 6160 0018 02F58062 		add	r2, r2, #1024
 6161 001c 9342     		cmp	r3, r2
 6162 001e 0CD0     		beq	.L555
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6163              		.loc 1 380 0 discriminator 3
 6164 0020 02F58062 		add	r2, r2, #1024
 6165 0024 9342     		cmp	r3, r2
 6166 0026 08D0     		beq	.L555
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6167              		.loc 1 380 0 discriminator 4
 6168 0028 02F55052 		add	r2, r2, #13312
 6169 002c 9342     		cmp	r3, r2
 6170 002e 04D0     		beq	.L555
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6171              		.loc 1 380 0 discriminator 5
 6172 0030 4FF4BE71 		mov	r1, #380
 6173 0034 1D48     		ldr	r0, .L565+4
 6174              	.LVL519:
 6175 0036 FFF7FEFF 		bl	assert_failed
 6176              	.LVL520:
 6177              	.L555:
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6178              		.loc 1 382 0 is_stmt 1
 6179 003a D4F88030 		ldr	r3, [r4, #128]
 6180 003e 33B3     		cbz	r3, .L563
 6181              	.L556:
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6182              		.loc 1 403 0
 6183 0040 2423     		movs	r3, #36
 6184 0042 C4F88030 		str	r3, [r4, #128]
ARM GAS  /tmp/cc5hFHZt.s 			page 197


 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6185              		.loc 1 405 0
 6186 0046 2268     		ldr	r2, [r4]
 6187 0048 1368     		ldr	r3, [r2]
 6188 004a 23F00103 		bic	r3, r3, #1
 6189 004e 1360     		str	r3, [r2]
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6190              		.loc 1 408 0
 6191 0050 2046     		mov	r0, r4
 6192 0052 FFF7FEFF 		bl	UART_SetConfig
 6193              	.LVL521:
 6194 0056 0128     		cmp	r0, #1
 6195 0058 18D0     		beq	.L554
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6196              		.loc 1 413 0
 6197 005a A36A     		ldr	r3, [r4, #40]
 6198 005c EBB9     		cbnz	r3, .L564
 6199              	.L557:
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 6200              		.loc 1 421 0
 6201 005e 2268     		ldr	r2, [r4]
 6202 0060 5368     		ldr	r3, [r2, #4]
 6203 0062 23F49043 		bic	r3, r3, #18432
 6204 0066 5360     		str	r3, [r2, #4]
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6205              		.loc 1 422 0
 6206 0068 2268     		ldr	r2, [r4]
 6207 006a 9368     		ldr	r3, [r2, #8]
 6208 006c 23F02203 		bic	r3, r3, #34
 6209 0070 9360     		str	r3, [r2, #8]
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6210              		.loc 1 425 0
 6211 0072 2268     		ldr	r2, [r4]
 6212 0074 9368     		ldr	r3, [r2, #8]
 6213 0076 43F00803 		orr	r3, r3, #8
 6214 007a 9360     		str	r3, [r2, #8]
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6215              		.loc 1 427 0
 6216 007c 2268     		ldr	r2, [r4]
 6217 007e 1368     		ldr	r3, [r2]
 6218 0080 43F00103 		orr	r3, r3, #1
 6219 0084 1360     		str	r3, [r2]
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6220              		.loc 1 430 0
 6221 0086 2046     		mov	r0, r4
 6222 0088 FFF7FEFF 		bl	UART_CheckIdleState
 6223              	.LVL522:
 6224              	.L554:
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6225              		.loc 1 431 0
 6226 008c 10BD     		pop	{r4, pc}
 6227              	.LVL523:
 6228              	.L563:
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6229              		.loc 1 385 0
 6230 008e 84F87C30 		strb	r3, [r4, #124]
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
ARM GAS  /tmp/cc5hFHZt.s 			page 198


 6231              		.loc 1 399 0
 6232 0092 2046     		mov	r0, r4
 6233 0094 FFF7FEFF 		bl	HAL_UART_MspInit
 6234              	.LVL524:
 6235 0098 D2E7     		b	.L556
 6236              	.L564:
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6237              		.loc 1 415 0
 6238 009a 2046     		mov	r0, r4
 6239 009c FFF7FEFF 		bl	UART_AdvFeatureConfig
 6240              	.LVL525:
 6241 00a0 DDE7     		b	.L557
 6242              	.LVL526:
 6243              	.L558:
 6244              	.LCFI50:
 6245              		.cfi_def_cfa_offset 0
 6246              		.cfi_restore 4
 6247              		.cfi_restore 14
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6248              		.loc 1 376 0
 6249 00a2 0120     		movs	r0, #1
 6250              	.LVL527:
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6251              		.loc 1 431 0
 6252 00a4 7047     		bx	lr
 6253              	.L566:
 6254 00a6 00BF     		.align	2
 6255              	.L565:
 6256 00a8 00380140 		.word	1073821696
 6257 00ac 00000000 		.word	.LC0
 6258              		.cfi_endproc
 6259              	.LFE133:
 6261              		.section	.text.HAL_LIN_Init,"ax",%progbits
 6262              		.align	1
 6263              		.global	HAL_LIN_Init
 6264              		.syntax unified
 6265              		.thumb
 6266              		.thumb_func
 6267              		.fpu fpv4-sp-d16
 6269              	HAL_LIN_Init:
 6270              	.LFB134:
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6271              		.loc 1 445 0
 6272              		.cfi_startproc
 6273              		@ args = 0, pretend = 0, frame = 0
 6274              		@ frame_needed = 0, uses_anonymous_args = 0
 6275              	.LVL528:
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6276              		.loc 1 447 0
 6277 0000 0028     		cmp	r0, #0
 6278 0002 62D0     		beq	.L573
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6279              		.loc 1 445 0
 6280 0004 38B5     		push	{r3, r4, r5, lr}
 6281              	.LCFI51:
 6282              		.cfi_def_cfa_offset 16
 6283              		.cfi_offset 3, -16
ARM GAS  /tmp/cc5hFHZt.s 			page 199


 6284              		.cfi_offset 4, -12
 6285              		.cfi_offset 5, -8
 6286              		.cfi_offset 14, -4
 6287 0006 0446     		mov	r4, r0
 6288 0008 0D46     		mov	r5, r1
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6289              		.loc 1 453 0
 6290 000a 0368     		ldr	r3, [r0]
 6291 000c 324A     		ldr	r2, .L583
 6292 000e 9342     		cmp	r3, r2
 6293 0010 10D0     		beq	.L569
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6294              		.loc 1 453 0 is_stmt 0 discriminator 1
 6295 0012 A2F57442 		sub	r2, r2, #62464
 6296 0016 9342     		cmp	r3, r2
 6297 0018 0CD0     		beq	.L569
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6298              		.loc 1 453 0 discriminator 2
 6299 001a 02F58062 		add	r2, r2, #1024
 6300 001e 9342     		cmp	r3, r2
 6301 0020 08D0     		beq	.L569
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6302              		.loc 1 453 0 discriminator 3
 6303 0022 02F58062 		add	r2, r2, #1024
 6304 0026 9342     		cmp	r3, r2
 6305 0028 04D0     		beq	.L569
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6306              		.loc 1 453 0 discriminator 4
 6307 002a 40F2C511 		movw	r1, #453
 6308              	.LVL529:
 6309 002e 2B48     		ldr	r0, .L583+4
 6310              	.LVL530:
 6311 0030 FFF7FEFF 		bl	assert_failed
 6312              	.LVL531:
 6313              	.L569:
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6314              		.loc 1 455 0 is_stmt 1
 6315 0034 0DB1     		cbz	r5, .L570
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6316              		.loc 1 455 0 is_stmt 0 discriminator 1
 6317 0036 202D     		cmp	r5, #32
 6318 0038 37D1     		bne	.L580
 6319              	.L570:
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6320              		.loc 1 458 0 is_stmt 1
 6321 003a E369     		ldr	r3, [r4, #28]
 6322 003c B3F5004F 		cmp	r3, #32768
 6323 0040 45D0     		beq	.L574
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6324              		.loc 1 463 0
 6325 0042 A368     		ldr	r3, [r4, #8]
 6326 0044 002B     		cmp	r3, #0
 6327 0046 44D1     		bne	.L575
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6328              		.loc 1 468 0
 6329 0048 D4F88030 		ldr	r3, [r4, #128]
 6330 004c 002B     		cmp	r3, #0
ARM GAS  /tmp/cc5hFHZt.s 			page 200


 6331 004e 32D0     		beq	.L581
 6332              	.L571:
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6333              		.loc 1 489 0
 6334 0050 2423     		movs	r3, #36
 6335 0052 C4F88030 		str	r3, [r4, #128]
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6336              		.loc 1 491 0
 6337 0056 2268     		ldr	r2, [r4]
 6338 0058 1368     		ldr	r3, [r2]
 6339 005a 23F00103 		bic	r3, r3, #1
 6340 005e 1360     		str	r3, [r2]
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6341              		.loc 1 494 0
 6342 0060 2046     		mov	r0, r4
 6343 0062 FFF7FEFF 		bl	UART_SetConfig
 6344              	.LVL532:
 6345 0066 0128     		cmp	r0, #1
 6346 0068 34D0     		beq	.L568
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6347              		.loc 1 499 0
 6348 006a A36A     		ldr	r3, [r4, #40]
 6349 006c 4BBB     		cbnz	r3, .L582
 6350              	.L572:
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 6351              		.loc 1 507 0
 6352 006e 2268     		ldr	r2, [r4]
 6353 0070 5368     		ldr	r3, [r2, #4]
 6354 0072 23F40063 		bic	r3, r3, #2048
 6355 0076 5360     		str	r3, [r2, #4]
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6356              		.loc 1 508 0
 6357 0078 2268     		ldr	r2, [r4]
 6358 007a 9368     		ldr	r3, [r2, #8]
 6359 007c 23F02A03 		bic	r3, r3, #42
 6360 0080 9360     		str	r3, [r2, #8]
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6361              		.loc 1 511 0
 6362 0082 2268     		ldr	r2, [r4]
 6363 0084 5368     		ldr	r3, [r2, #4]
 6364 0086 43F48043 		orr	r3, r3, #16384
 6365 008a 5360     		str	r3, [r2, #4]
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6366              		.loc 1 514 0
 6367 008c 2368     		ldr	r3, [r4]
 6368 008e 5968     		ldr	r1, [r3, #4]
 6369 0090 21F02001 		bic	r1, r1, #32
 6370 0094 0D43     		orrs	r5, r5, r1
 6371              	.LVL533:
 6372 0096 5D60     		str	r5, [r3, #4]
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6373              		.loc 1 516 0
 6374 0098 2268     		ldr	r2, [r4]
 6375 009a 1368     		ldr	r3, [r2]
 6376 009c 43F00103 		orr	r3, r3, #1
 6377 00a0 1360     		str	r3, [r2]
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  /tmp/cc5hFHZt.s 			page 201


 6378              		.loc 1 519 0
 6379 00a2 2046     		mov	r0, r4
 6380 00a4 FFF7FEFF 		bl	UART_CheckIdleState
 6381              	.LVL534:
 6382 00a8 14E0     		b	.L568
 6383              	.LVL535:
 6384              	.L580:
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6385              		.loc 1 455 0 discriminator 2
 6386 00aa 40F2C711 		movw	r1, #455
 6387 00ae 0B48     		ldr	r0, .L583+4
 6388 00b0 FFF7FEFF 		bl	assert_failed
 6389              	.LVL536:
 6390 00b4 C1E7     		b	.L570
 6391              	.L581:
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6392              		.loc 1 471 0
 6393 00b6 84F87C30 		strb	r3, [r4, #124]
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6394              		.loc 1 485 0
 6395 00ba 2046     		mov	r0, r4
 6396 00bc FFF7FEFF 		bl	HAL_UART_MspInit
 6397              	.LVL537:
 6398 00c0 C6E7     		b	.L571
 6399              	.L582:
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6400              		.loc 1 501 0
 6401 00c2 2046     		mov	r0, r4
 6402 00c4 FFF7FEFF 		bl	UART_AdvFeatureConfig
 6403              	.LVL538:
 6404 00c8 D1E7     		b	.L572
 6405              	.LVL539:
 6406              	.L573:
 6407              	.LCFI52:
 6408              		.cfi_def_cfa_offset 0
 6409              		.cfi_restore 3
 6410              		.cfi_restore 4
 6411              		.cfi_restore 5
 6412              		.cfi_restore 14
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6413              		.loc 1 449 0
 6414 00ca 0120     		movs	r0, #1
 6415              	.LVL540:
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6416              		.loc 1 520 0
 6417 00cc 7047     		bx	lr
 6418              	.LVL541:
 6419              	.L574:
 6420              	.LCFI53:
 6421              		.cfi_def_cfa_offset 16
 6422              		.cfi_offset 3, -16
 6423              		.cfi_offset 4, -12
 6424              		.cfi_offset 5, -8
 6425              		.cfi_offset 14, -4
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6426              		.loc 1 460 0
 6427 00ce 0120     		movs	r0, #1
ARM GAS  /tmp/cc5hFHZt.s 			page 202


 6428 00d0 00E0     		b	.L568
 6429              	.L575:
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6430              		.loc 1 465 0
 6431 00d2 0120     		movs	r0, #1
 6432              	.LVL542:
 6433              	.L568:
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6434              		.loc 1 520 0
 6435 00d4 38BD     		pop	{r3, r4, r5, pc}
 6436              	.LVL543:
 6437              	.L584:
 6438 00d6 00BF     		.align	2
 6439              	.L583:
 6440 00d8 00380140 		.word	1073821696
 6441 00dc 00000000 		.word	.LC0
 6442              		.cfi_endproc
 6443              	.LFE134:
 6445              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 6446              		.align	1
 6447              		.global	HAL_MultiProcessor_Init
 6448              		.syntax unified
 6449              		.thumb
 6450              		.thumb_func
 6451              		.fpu fpv4-sp-d16
 6453              	HAL_MultiProcessor_Init:
 6454              	.LFB135:
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6455              		.loc 1 542 0
 6456              		.cfi_startproc
 6457              		@ args = 0, pretend = 0, frame = 0
 6458              		@ frame_needed = 0, uses_anonymous_args = 0
 6459              	.LVL544:
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6460              		.loc 1 544 0
 6461 0000 0028     		cmp	r0, #0
 6462 0002 4ED0     		beq	.L591
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6463              		.loc 1 542 0
 6464 0004 70B5     		push	{r4, r5, r6, lr}
 6465              	.LCFI54:
 6466              		.cfi_def_cfa_offset 16
 6467              		.cfi_offset 4, -16
 6468              		.cfi_offset 5, -12
 6469              		.cfi_offset 6, -8
 6470              		.cfi_offset 14, -4
 6471 0006 0446     		mov	r4, r0
 6472 0008 1546     		mov	r5, r2
 6473 000a 0E46     		mov	r6, r1
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6474              		.loc 1 550 0
 6475 000c 12B1     		cbz	r2, .L587
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6476              		.loc 1 550 0 is_stmt 0 discriminator 1
 6477 000e B2F5006F 		cmp	r2, #2048
 6478 0012 2ED1     		bne	.L596
 6479              	.LVL545:
ARM GAS  /tmp/cc5hFHZt.s 			page 203


 6480              	.L587:
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6481              		.loc 1 552 0 is_stmt 1
 6482 0014 D4F88030 		ldr	r3, [r4, #128]
 6483 0018 002B     		cmp	r3, #0
 6484 001a 30D0     		beq	.L597
 6485              	.L588:
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6486              		.loc 1 573 0
 6487 001c 2423     		movs	r3, #36
 6488 001e C4F88030 		str	r3, [r4, #128]
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6489              		.loc 1 575 0
 6490 0022 2268     		ldr	r2, [r4]
 6491 0024 1368     		ldr	r3, [r2]
 6492 0026 23F00103 		bic	r3, r3, #1
 6493 002a 1360     		str	r3, [r2]
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6494              		.loc 1 578 0
 6495 002c 2046     		mov	r0, r4
 6496 002e FFF7FEFF 		bl	UART_SetConfig
 6497              	.LVL546:
 6498 0032 0128     		cmp	r0, #1
 6499 0034 1CD0     		beq	.L586
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6500              		.loc 1 583 0
 6501 0036 A36A     		ldr	r3, [r4, #40]
 6502 0038 3BBB     		cbnz	r3, .L598
 6503              	.L589:
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 6504              		.loc 1 591 0
 6505 003a 2268     		ldr	r2, [r4]
 6506 003c 5368     		ldr	r3, [r2, #4]
 6507 003e 23F49043 		bic	r3, r3, #18432
 6508 0042 5360     		str	r3, [r2, #4]
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6509              		.loc 1 592 0
 6510 0044 2268     		ldr	r2, [r4]
 6511 0046 9368     		ldr	r3, [r2, #8]
 6512 0048 23F02A03 		bic	r3, r3, #42
 6513 004c 9360     		str	r3, [r2, #8]
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6514              		.loc 1 594 0
 6515 004e B5F5006F 		cmp	r5, #2048
 6516 0052 1ED0     		beq	.L599
 6517              	.L590:
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6518              		.loc 1 601 0
 6519 0054 2368     		ldr	r3, [r4]
 6520 0056 1A68     		ldr	r2, [r3]
 6521 0058 22F40062 		bic	r2, r2, #2048
 6522 005c 1543     		orrs	r5, r5, r2
 6523              	.LVL547:
 6524 005e 1D60     		str	r5, [r3]
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6525              		.loc 1 603 0
 6526 0060 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc5hFHZt.s 			page 204


 6527 0062 1368     		ldr	r3, [r2]
 6528 0064 43F00103 		orr	r3, r3, #1
 6529 0068 1360     		str	r3, [r2]
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6530              		.loc 1 606 0
 6531 006a 2046     		mov	r0, r4
 6532 006c FFF7FEFF 		bl	UART_CheckIdleState
 6533              	.LVL548:
 6534              	.L586:
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6535              		.loc 1 607 0
 6536 0070 70BD     		pop	{r4, r5, r6, pc}
 6537              	.LVL549:
 6538              	.L596:
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6539              		.loc 1 550 0 discriminator 2
 6540 0072 40F22621 		movw	r1, #550
 6541              	.LVL550:
 6542 0076 0C48     		ldr	r0, .L600
 6543              	.LVL551:
 6544 0078 FFF7FEFF 		bl	assert_failed
 6545              	.LVL552:
 6546 007c CAE7     		b	.L587
 6547              	.L597:
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6548              		.loc 1 555 0
 6549 007e 84F87C30 		strb	r3, [r4, #124]
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6550              		.loc 1 569 0
 6551 0082 2046     		mov	r0, r4
 6552 0084 FFF7FEFF 		bl	HAL_UART_MspInit
 6553              	.LVL553:
 6554 0088 C8E7     		b	.L588
 6555              	.L598:
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6556              		.loc 1 585 0
 6557 008a 2046     		mov	r0, r4
 6558 008c FFF7FEFF 		bl	UART_AdvFeatureConfig
 6559              	.LVL554:
 6560 0090 D3E7     		b	.L589
 6561              	.L599:
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6562              		.loc 1 597 0
 6563 0092 2368     		ldr	r3, [r4]
 6564 0094 5968     		ldr	r1, [r3, #4]
 6565 0096 21F07F41 		bic	r1, r1, #-16777216
 6566 009a 41EA0666 		orr	r6, r1, r6, lsl #24
 6567 009e 5E60     		str	r6, [r3, #4]
 6568 00a0 D8E7     		b	.L590
 6569              	.LVL555:
 6570              	.L591:
 6571              	.LCFI55:
 6572              		.cfi_def_cfa_offset 0
 6573              		.cfi_restore 4
 6574              		.cfi_restore 5
 6575              		.cfi_restore 6
 6576              		.cfi_restore 14
ARM GAS  /tmp/cc5hFHZt.s 			page 205


 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6577              		.loc 1 546 0
 6578 00a2 0120     		movs	r0, #1
 6579              	.LVL556:
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6580              		.loc 1 607 0
 6581 00a4 7047     		bx	lr
 6582              	.L601:
 6583 00a6 00BF     		.align	2
 6584              	.L600:
 6585 00a8 00000000 		.word	.LC0
 6586              		.cfi_endproc
 6587              	.LFE135:
 6589              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 6590              		.align	1
 6591              		.global	HAL_MultiProcessor_EnableMuteMode
 6592              		.syntax unified
 6593              		.thumb
 6594              		.thumb_func
 6595              		.fpu fpv4-sp-d16
 6597              	HAL_MultiProcessor_EnableMuteMode:
 6598              	.LFB166:
2663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6599              		.loc 1 2663 0
 6600              		.cfi_startproc
 6601              		@ args = 0, pretend = 0, frame = 0
 6602              		@ frame_needed = 0, uses_anonymous_args = 0
 6603              	.LVL557:
 6604 0000 08B5     		push	{r3, lr}
 6605              	.LCFI56:
 6606              		.cfi_def_cfa_offset 8
 6607              		.cfi_offset 3, -8
 6608              		.cfi_offset 14, -4
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6609              		.loc 1 2664 0
 6610 0002 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 6611 0006 012B     		cmp	r3, #1
 6612 0008 10D0     		beq	.L604
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6613              		.loc 1 2664 0 is_stmt 0 discriminator 2
 6614 000a 0123     		movs	r3, #1
 6615 000c 80F87C30 		strb	r3, [r0, #124]
2666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6616              		.loc 1 2666 0 is_stmt 1 discriminator 2
 6617 0010 2423     		movs	r3, #36
 6618 0012 C0F88030 		str	r3, [r0, #128]
2669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6619              		.loc 1 2669 0 discriminator 2
 6620 0016 0268     		ldr	r2, [r0]
 6621 0018 1368     		ldr	r3, [r2]
 6622 001a 43F40053 		orr	r3, r3, #8192
 6623 001e 1360     		str	r3, [r2]
2671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6624              		.loc 1 2671 0 discriminator 2
 6625 0020 2023     		movs	r3, #32
 6626 0022 C0F88030 		str	r3, [r0, #128]
2673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  /tmp/cc5hFHZt.s 			page 206


 6627              		.loc 1 2673 0 discriminator 2
 6628 0026 FFF7FEFF 		bl	UART_CheckIdleState
 6629              	.LVL558:
 6630              	.L603:
2674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6631              		.loc 1 2674 0
 6632 002a 08BD     		pop	{r3, pc}
 6633              	.LVL559:
 6634              	.L604:
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6635              		.loc 1 2664 0
 6636 002c 0220     		movs	r0, #2
 6637              	.LVL560:
 6638 002e FCE7     		b	.L603
 6639              		.cfi_endproc
 6640              	.LFE166:
 6642              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 6643              		.align	1
 6644              		.global	HAL_MultiProcessor_DisableMuteMode
 6645              		.syntax unified
 6646              		.thumb
 6647              		.thumb_func
 6648              		.fpu fpv4-sp-d16
 6650              	HAL_MultiProcessor_DisableMuteMode:
 6651              	.LFB167:
2683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6652              		.loc 1 2683 0
 6653              		.cfi_startproc
 6654              		@ args = 0, pretend = 0, frame = 0
 6655              		@ frame_needed = 0, uses_anonymous_args = 0
 6656              	.LVL561:
 6657 0000 08B5     		push	{r3, lr}
 6658              	.LCFI57:
 6659              		.cfi_def_cfa_offset 8
 6660              		.cfi_offset 3, -8
 6661              		.cfi_offset 14, -4
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6662              		.loc 1 2684 0
 6663 0002 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 6664 0006 012B     		cmp	r3, #1
 6665 0008 10D0     		beq	.L608
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6666              		.loc 1 2684 0 is_stmt 0 discriminator 2
 6667 000a 0123     		movs	r3, #1
 6668 000c 80F87C30 		strb	r3, [r0, #124]
2686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6669              		.loc 1 2686 0 is_stmt 1 discriminator 2
 6670 0010 2423     		movs	r3, #36
 6671 0012 C0F88030 		str	r3, [r0, #128]
2689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6672              		.loc 1 2689 0 discriminator 2
 6673 0016 0268     		ldr	r2, [r0]
 6674 0018 1368     		ldr	r3, [r2]
 6675 001a 23F40053 		bic	r3, r3, #8192
 6676 001e 1360     		str	r3, [r2]
2691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6677              		.loc 1 2691 0 discriminator 2
ARM GAS  /tmp/cc5hFHZt.s 			page 207


 6678 0020 2023     		movs	r3, #32
 6679 0022 C0F88030 		str	r3, [r0, #128]
2693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6680              		.loc 1 2693 0 discriminator 2
 6681 0026 FFF7FEFF 		bl	UART_CheckIdleState
 6682              	.LVL562:
 6683              	.L607:
2694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6684              		.loc 1 2694 0
 6685 002a 08BD     		pop	{r3, pc}
 6686              	.LVL563:
 6687              	.L608:
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6688              		.loc 1 2684 0
 6689 002c 0220     		movs	r0, #2
 6690              	.LVL564:
 6691 002e FCE7     		b	.L607
 6692              		.cfi_endproc
 6693              	.LFE167:
 6695              		.global	UARTPrescTable
 6696              		.section	.rodata.HAL_UART_DeInit.str1.4,"aMS",%progbits,1
 6697              		.align	2
 6698              	.LC0:
 6699 0000 44726976 		.ascii	"Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart"
 6699      6572732F 
 6699      53544D33 
 6699      32473478 
 6699      785F4841 
 6700 0033 2E6300   		.ascii	".c\000"
 6701              		.section	.rodata.UARTPrescTable,"a",%progbits
 6702              		.align	2
 6703              		.set	.LANCHOR0,. + 0
 6706              	UARTPrescTable:
 6707 0000 0100     		.short	1
 6708 0002 0200     		.short	2
 6709 0004 0400     		.short	4
 6710 0006 0600     		.short	6
 6711 0008 0800     		.short	8
 6712 000a 0A00     		.short	10
 6713 000c 0C00     		.short	12
 6714 000e 1000     		.short	16
 6715 0010 2000     		.short	32
 6716 0012 4000     		.short	64
 6717 0014 8000     		.short	128
 6718 0016 0001     		.short	256
 6719              		.text
 6720              	.Letext0:
 6721              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 6722              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 6723              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 6724              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 6725              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 6726              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 6727              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 6728              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 6729              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 6730              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
ARM GAS  /tmp/cc5hFHZt.s 			page 208


 6731              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 6732              		.file 13 "Core/Inc/stm32g4xx_hal_conf.h"
 6733              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 6734              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart_ex.h"
ARM GAS  /tmp/cc5hFHZt.s 			page 209


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_uart.c
     /tmp/cc5hFHZt.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/cc5hFHZt.s:24     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/cc5hFHZt.s:52     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/cc5hFHZt.s:58     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/cc5hFHZt.s:89     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/cc5hFHZt.s:95     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/cc5hFHZt.s:147    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/cc5hFHZt.s:153    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/cc5hFHZt.s:210    .text.UART_TxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/cc5hFHZt.s:216    .text.UART_TxISR_8BIT_FIFOEN:0000000000000000 UART_TxISR_8BIT_FIFOEN
     /tmp/cc5hFHZt.s:289    .text.UART_TxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/cc5hFHZt.s:295    .text.UART_TxISR_16BIT_FIFOEN:0000000000000000 UART_TxISR_16BIT_FIFOEN
     /tmp/cc5hFHZt.s:373    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc5hFHZt.s:380    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc5hFHZt.s:394    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc5hFHZt.s:401    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc5hFHZt.s:415    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc5hFHZt.s:422    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc5hFHZt.s:519    .text.HAL_UART_DeInit:0000000000000078 $d
     /tmp/cc5hFHZt.s:525    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc5hFHZt.s:532    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc5hFHZt.s:670    .text.HAL_UART_Transmit_IT:00000000000000a8 $d
     /tmp/cc5hFHZt.s:678    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc5hFHZt.s:685    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc5hFHZt.s:891    .text.HAL_UART_Receive_IT:0000000000000118 $d
     /tmp/cc5hFHZt.s:2009   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/cc5hFHZt.s:2182   .text.UART_RxISR_8BIT_FIFOEN:0000000000000000 UART_RxISR_8BIT_FIFOEN
     /tmp/cc5hFHZt.s:2315   .text.UART_RxISR_16BIT_FIFOEN:0000000000000000 UART_RxISR_16BIT_FIFOEN
     /tmp/cc5hFHZt.s:2095   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/cc5hFHZt.s:899    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc5hFHZt.s:906    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc5hFHZt.s:1035   .text.HAL_UART_Transmit_DMA:00000000000000a0 $d
     /tmp/cc5hFHZt.s:1842   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc5hFHZt.s:1958   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc5hFHZt.s:2582   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc5hFHZt.s:1042   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc5hFHZt.s:1049   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc5hFHZt.s:1182   .text.HAL_UART_Receive_DMA:00000000000000ac $d
     /tmp/cc5hFHZt.s:2451   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc5hFHZt.s:2531   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc5hFHZt.s:1189   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc5hFHZt.s:1196   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc5hFHZt.s:1288   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc5hFHZt.s:1295   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc5hFHZt.s:1366   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc5hFHZt.s:1373   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc5hFHZt.s:1491   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cc5hFHZt.s:1498   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cc5hFHZt.s:1633   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cc5hFHZt.s:1640   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/cc5hFHZt.s:1726   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cc5hFHZt.s:1733   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cc5hFHZt.s:1815   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:1822   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc5hFHZt.s:1836   .text.UART_DMATransmitCplt:0000000000000000 $t
ARM GAS  /tmp/cc5hFHZt.s 			page 210


     /tmp/cc5hFHZt.s:1893   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cc5hFHZt.s:1899   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cc5hFHZt.s:1931   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:1938   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc5hFHZt.s:1952   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cc5hFHZt.s:1982   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:1989   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc5hFHZt.s:2003   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/cc5hFHZt.s:2089   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/cc5hFHZt.s:2176   .text.UART_RxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/cc5hFHZt.s:2304   .text.UART_RxISR_8BIT_FIFOEN:00000000000000a8 $d
     /tmp/cc5hFHZt.s:2309   .text.UART_RxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/cc5hFHZt.s:2440   .text.UART_RxISR_16BIT_FIFOEN:00000000000000a4 $d
     /tmp/cc5hFHZt.s:2445   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc5hFHZt.s:2504   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:2511   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc5hFHZt.s:2525   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cc5hFHZt.s:2555   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:2562   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc5hFHZt.s:2576   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc5hFHZt.s:2658   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc5hFHZt.s:2665   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc5hFHZt.s:2993   .text.HAL_UART_IRQHandler:00000000000001d8 $d
     /tmp/cc5hFHZt.s:3006   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cc5hFHZt.s:3000   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc5hFHZt.s:3035   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:3042   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cc5hFHZt.s:3056   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cc5hFHZt.s:3063   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/cc5hFHZt.s:3241   .text.HAL_UART_Abort_IT:00000000000000f4 $d
     /tmp/cc5hFHZt.s:3319   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cc5hFHZt.s:3253   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/cc5hFHZt.s:3247   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:3313   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:3384   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:3391   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc5hFHZt.s:3405   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cc5hFHZt.s:3412   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cc5hFHZt.s:3510   .text.HAL_UART_AbortTransmit_IT:0000000000000080 $d
     /tmp/cc5hFHZt.s:3521   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cc5hFHZt.s:3515   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:3564   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:3571   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc5hFHZt.s:3585   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cc5hFHZt.s:3592   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cc5hFHZt.s:3689   .text.HAL_UART_AbortReceive_IT:0000000000000084 $d
     /tmp/cc5hFHZt.s:3700   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cc5hFHZt.s:3694   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc5hFHZt.s:3739   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
     /tmp/cc5hFHZt.s:3746   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
     /tmp/cc5hFHZt.s:3795   .text.HAL_UART_ReceiverTimeout_Config:0000000000000030 $d
     /tmp/cc5hFHZt.s:3801   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
     /tmp/cc5hFHZt.s:3808   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
     /tmp/cc5hFHZt.s:3871   .text.HAL_UART_EnableReceiverTimeout:0000000000000048 $d
     /tmp/cc5hFHZt.s:3876   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
     /tmp/cc5hFHZt.s:3883   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
     /tmp/cc5hFHZt.s:3946   .text.HAL_UART_DisableReceiverTimeout:0000000000000048 $d
ARM GAS  /tmp/cc5hFHZt.s 			page 211


     /tmp/cc5hFHZt.s:3951   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc5hFHZt.s:3958   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc5hFHZt.s:3977   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc5hFHZt.s:3984   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc5hFHZt.s:4033   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc5hFHZt.s:4040   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc5hFHZt.s:4089   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cc5hFHZt.s:4096   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cc5hFHZt.s:4165   .text.HAL_LIN_SendBreak:0000000000000060 $d
     /tmp/cc5hFHZt.s:4171   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc5hFHZt.s:4178   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc5hFHZt.s:4200   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cc5hFHZt.s:4207   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cc5hFHZt.s:4225   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc5hFHZt.s:4232   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cc5hFHZt.s:4435   .text.UART_SetConfig:000000000000013c $d
     /tmp/cc5hFHZt.s:4445   .text.UART_SetConfig:000000000000014e $t
     /tmp/cc5hFHZt.s:4526   .text.UART_SetConfig:00000000000001de $d
     /tmp/cc5hFHZt.s:4530   .text.UART_SetConfig:00000000000001e2 $t
     /tmp/cc5hFHZt.s:4560   .text.UART_SetConfig:0000000000000206 $d
     /tmp/cc5hFHZt.s:4664   .text.UART_SetConfig:000000000000027c $d
     /tmp/cc5hFHZt.s:4675   .text.UART_SetConfig:000000000000029c $t
     /tmp/cc5hFHZt.s:4730   .text.UART_SetConfig:00000000000002ec $d
     /tmp/cc5hFHZt.s:4819   .text.UART_SetConfig:0000000000000374 $d
     /tmp/cc5hFHZt.s:5008   .text.UART_SetConfig:0000000000000458 $d
     /tmp/cc5hFHZt.s:5015   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/cc5hFHZt.s:5022   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/cc5hFHZt.s:5319   .text.UART_AdvFeatureConfig:00000000000001e4 $d
     /tmp/cc5hFHZt.s:5325   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc5hFHZt.s:5332   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc5hFHZt.s:5442   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc5hFHZt.s:5449   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc5hFHZt.s:5629   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc5hFHZt.s:5636   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc5hFHZt.s:5862   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/cc5hFHZt.s:5869   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/cc5hFHZt.s:5961   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc5hFHZt.s:5968   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc5hFHZt.s:6120   .text.HAL_UART_Init:00000000000000d8 $d
     /tmp/cc5hFHZt.s:6126   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc5hFHZt.s:6133   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc5hFHZt.s:6256   .text.HAL_HalfDuplex_Init:00000000000000a8 $d
     /tmp/cc5hFHZt.s:6262   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cc5hFHZt.s:6269   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cc5hFHZt.s:6440   .text.HAL_LIN_Init:00000000000000d8 $d
     /tmp/cc5hFHZt.s:6446   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc5hFHZt.s:6453   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc5hFHZt.s:6585   .text.HAL_MultiProcessor_Init:00000000000000a8 $d
     /tmp/cc5hFHZt.s:6590   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/cc5hFHZt.s:6597   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cc5hFHZt.s:6643   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/cc5hFHZt.s:6650   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/cc5hFHZt.s:6706   .rodata.UARTPrescTable:0000000000000000 UARTPrescTable
     /tmp/cc5hFHZt.s:6697   .rodata.HAL_UART_DeInit.str1.4:0000000000000000 $d
     /tmp/cc5hFHZt.s:6702   .rodata.UARTPrescTable:0000000000000000 $d
     /tmp/cc5hFHZt.s:4573   .text.UART_SetConfig:0000000000000213 $d
     /tmp/cc5hFHZt.s:4573   .text.UART_SetConfig:0000000000000214 $t
ARM GAS  /tmp/cc5hFHZt.s 			page 212


     /tmp/cc5hFHZt.s:4739   .text.UART_SetConfig:00000000000002f5 $d
     /tmp/cc5hFHZt.s:4739   .text.UART_SetConfig:00000000000002f6 $t
     /tmp/cc5hFHZt.s:4828   .text.UART_SetConfig:000000000000037d $d
     /tmp/cc5hFHZt.s:4828   .text.UART_SetConfig:000000000000037e $t

UNDEFINED SYMBOLS
assert_failed
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_RxFifoFullCallback
HAL_UARTEx_TxFifoEmptyCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
