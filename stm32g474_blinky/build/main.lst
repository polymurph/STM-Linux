ARM GAS  /tmp/cclTToxe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB133:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/cclTToxe.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE END 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Core/Src/main.c ****   HAL_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Configure the system clock */
  81:Core/Src/main.c ****   SystemClock_Config();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Initialize all configured peripherals */
  88:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  /tmp/cclTToxe.s 			page 3


  89:Core/Src/main.c ****   MX_LPUART1_UART_Init();
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Infinite loop */
  95:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  96:Core/Src/main.c ****   while (1)
  97:Core/Src/main.c ****   {
  98:Core/Src/main.c ****     /* USER CODE END WHILE */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 101:Core/Src/main.c **** 	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 102:Core/Src/main.c **** 	HAL_Delay(300);
 103:Core/Src/main.c **** 	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 104:Core/Src/main.c **** 	HAL_Delay(300);
 105:Core/Src/main.c ****   }
 106:Core/Src/main.c ****   /* USER CODE END 3 */
 107:Core/Src/main.c **** }
 108:Core/Src/main.c **** 
 109:Core/Src/main.c **** /**
 110:Core/Src/main.c ****   * @brief System Clock Configuration
 111:Core/Src/main.c ****   * @retval None
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c **** void SystemClock_Config(void)
 114:Core/Src/main.c **** {
  28              		.loc 1 114 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 160
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 A9B0     		sub	sp, sp, #164
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 176
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 115 0
  42 0004 3822     		movs	r2, #56
  43 0006 0021     		movs	r1, #0
  44 0008 1AA8     		add	r0, sp, #104
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 116 0
  48 000e 0024     		movs	r4, #0
  49 0010 1594     		str	r4, [sp, #84]
  50 0012 1694     		str	r4, [sp, #88]
  51 0014 1794     		str	r4, [sp, #92]
  52 0016 1894     		str	r4, [sp, #96]
  53 0018 1994     		str	r4, [sp, #100]
 117:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  54              		.loc 1 117 0
  55 001a 5422     		movs	r2, #84
ARM GAS  /tmp/cclTToxe.s 			page 4


  56 001c 2146     		mov	r1, r4
  57 001e 6846     		mov	r0, sp
  58 0020 FFF7FEFF 		bl	memset
  59              	.LVL1:
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
  60              		.loc 1 121 0
  61 0024 2046     		mov	r0, r4
  62 0026 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  63              	.LVL2:
 122:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 123:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  64              		.loc 1 125 0
  65 002a 0223     		movs	r3, #2
  66 002c 1A93     		str	r3, [sp, #104]
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  67              		.loc 1 126 0
  68 002e 4FF48072 		mov	r2, #256
  69 0032 1D92     		str	r2, [sp, #116]
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  70              		.loc 1 127 0
  71 0034 4022     		movs	r2, #64
  72 0036 1E92     		str	r2, [sp, #120]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  73              		.loc 1 128 0
  74 0038 2193     		str	r3, [sp, #132]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  75              		.loc 1 129 0
  76 003a 2293     		str	r3, [sp, #136]
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
  77              		.loc 1 130 0
  78 003c 0425     		movs	r5, #4
  79 003e 2395     		str	r5, [sp, #140]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
  80              		.loc 1 131 0
  81 0040 5522     		movs	r2, #85
  82 0042 2492     		str	r2, [sp, #144]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  83              		.loc 1 132 0
  84 0044 2593     		str	r3, [sp, #148]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  85              		.loc 1 133 0
  86 0046 2693     		str	r3, [sp, #152]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  87              		.loc 1 134 0
  88 0048 2793     		str	r3, [sp, #156]
 135:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  89              		.loc 1 135 0
  90 004a 1AA8     		add	r0, sp, #104
  91 004c FFF7FEFF 		bl	HAL_RCC_OscConfig
  92              	.LVL3:
 136:Core/Src/main.c ****   {
 137:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/cclTToxe.s 			page 5


 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  93              		.loc 1 141 0
  94 0050 0F23     		movs	r3, #15
  95 0052 1593     		str	r3, [sp, #84]
 142:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  96              		.loc 1 143 0
  97 0054 0323     		movs	r3, #3
  98 0056 1693     		str	r3, [sp, #88]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  99              		.loc 1 144 0
 100 0058 1794     		str	r4, [sp, #92]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 145 0
 102 005a 1894     		str	r4, [sp, #96]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 103              		.loc 1 146 0
 104 005c 1994     		str	r4, [sp, #100]
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 105              		.loc 1 148 0
 106 005e 2946     		mov	r1, r5
 107 0060 15A8     		add	r0, sp, #84
 108 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 109              	.LVL4:
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     Error_Handler();
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c ****   /** Initializes the peripherals clocks
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_LPUART1;
 110              		.loc 1 154 0
 111 0066 2023     		movs	r3, #32
 112 0068 0093     		str	r3, [sp]
 155:Core/Src/main.c ****   PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 113              		.loc 1 155 0
 114 006a 0694     		str	r4, [sp, #24]
 156:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 115              		.loc 1 156 0
 116 006c 6846     		mov	r0, sp
 117 006e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 118              	.LVL5:
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** }
 119              		.loc 1 160 0
 120 0072 29B0     		add	sp, sp, #164
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 12
 123              		@ sp needed
 124 0074 30BD     		pop	{r4, r5, pc}
 125              		.cfi_endproc
 126              	.LFE133:
ARM GAS  /tmp/cclTToxe.s 			page 6


 128              		.section	.text.main,"ax",%progbits
 129              		.align	1
 130              		.global	main
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 134              		.fpu fpv4-sp-d16
 136              	main:
 137              	.LFB132:
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 138              		.loc 1 66 0
 139              		.cfi_startproc
 140              		@ Volatile: function does not return.
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143 0000 08B5     		push	{r3, lr}
 144              	.LCFI3:
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 3, -8
 147              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 148              		.loc 1 74 0
 149 0002 FFF7FEFF 		bl	HAL_Init
 150              	.LVL6:
  81:Core/Src/main.c **** 
 151              		.loc 1 81 0
 152 0006 FFF7FEFF 		bl	SystemClock_Config
 153              	.LVL7:
  88:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 154              		.loc 1 88 0
 155 000a FFF7FEFF 		bl	MX_GPIO_Init
 156              	.LVL8:
  89:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 157              		.loc 1 89 0
 158 000e FFF7FEFF 		bl	MX_LPUART1_UART_Init
 159              	.LVL9:
 160              	.L4:
 101:Core/Src/main.c **** 	HAL_Delay(300);
 161              		.loc 1 101 0 discriminator 1
 162 0012 0122     		movs	r2, #1
 163 0014 2021     		movs	r1, #32
 164 0016 4FF09040 		mov	r0, #1207959552
 165 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 166              	.LVL10:
 102:Core/Src/main.c **** 	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 167              		.loc 1 102 0 discriminator 1
 168 001e 4FF49670 		mov	r0, #300
 169 0022 FFF7FEFF 		bl	HAL_Delay
 170              	.LVL11:
 103:Core/Src/main.c **** 	HAL_Delay(300);
 171              		.loc 1 103 0 discriminator 1
 172 0026 0022     		movs	r2, #0
 173 0028 2021     		movs	r1, #32
 174 002a 4FF09040 		mov	r0, #1207959552
 175 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 176              	.LVL12:
 104:Core/Src/main.c ****   }
ARM GAS  /tmp/cclTToxe.s 			page 7


 177              		.loc 1 104 0 discriminator 1
 178 0032 4FF49670 		mov	r0, #300
 179 0036 FFF7FEFF 		bl	HAL_Delay
 180              	.LVL13:
 181 003a EAE7     		b	.L4
 182              		.cfi_endproc
 183              	.LFE132:
 185              		.section	.text.Error_Handler,"ax",%progbits
 186              		.align	1
 187              		.global	Error_Handler
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	Error_Handler:
 194              	.LFB134:
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /* USER CODE END 4 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** void Error_Handler(void)
 171:Core/Src/main.c **** {
 195              		.loc 1 171 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 172:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 173:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 176:Core/Src/main.c **** }
 200              		.loc 1 176 0
 201 0000 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE134:
 205              		.section	.text.assert_failed,"ax",%progbits
 206              		.align	1
 207              		.global	assert_failed
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv4-sp-d16
 213              	assert_failed:
 214              	.LFB135:
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** #ifdef  USE_FULL_ASSERT
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief  Reports the name of the source file and the source line number
 181:Core/Src/main.c ****   *         where the assert_param error has occurred.
 182:Core/Src/main.c ****   * @param  file: pointer to the source file name
 183:Core/Src/main.c ****   * @param  line: assert_param error line source number
ARM GAS  /tmp/cclTToxe.s 			page 8


 184:Core/Src/main.c ****   * @retval None
 185:Core/Src/main.c ****   */
 186:Core/Src/main.c **** void assert_failed(uint8_t *file, uint32_t line)
 187:Core/Src/main.c **** {
 215              		.loc 1 187 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 220              	.LVL14:
 188:Core/Src/main.c ****   /* USER CODE BEGIN 6 */
 189:Core/Src/main.c ****   /* User can add his own implementation to report the file name and line number,
 190:Core/Src/main.c ****      tex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
 191:Core/Src/main.c ****   /* USER CODE END 6 */
 192:Core/Src/main.c **** }
 221              		.loc 1 192 0
 222 0000 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE135:
 226              		.text
 227              	.Letext0:
 228              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 229              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 230              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 231              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 232              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 233              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 234              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 235              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc_ex.h"
 236              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 237              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 238              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 239              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 240              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 241              		.file 15 "Core/Inc/usart.h"
 242              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 243              		.file 17 "Core/Inc/gpio.h"
 244              		.file 18 "<built-in>"
ARM GAS  /tmp/cclTToxe.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cclTToxe.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cclTToxe.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cclTToxe.s:129    .text.main:0000000000000000 $t
     /tmp/cclTToxe.s:136    .text.main:0000000000000000 main
     /tmp/cclTToxe.s:186    .text.Error_Handler:0000000000000000 $t
     /tmp/cclTToxe.s:193    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cclTToxe.s:206    .text.assert_failed:0000000000000000 $t
     /tmp/cclTToxe.s:213    .text.assert_failed:0000000000000000 assert_failed

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_LPUART1_UART_Init
HAL_GPIO_WritePin
HAL_Delay
