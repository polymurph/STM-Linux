ARM GAS  /tmp/ccnYk2xI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB178:
  26              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c"
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @file    stm32g4xx_hal_uart.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   [..]
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
ARM GAS  /tmp/ccnYk2xI.s 			page 2


  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         the HAL_UART_Init() API.
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ##### Callback registration #####
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     ==================================
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
ARM GAS  /tmp/ccnYk2xI.s 			page 3


  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and a pointer to the user callback function.
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     weak (surcharged) function.
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and the Callback ID.
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This function allows to reset following callbacks:
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   @endverbatim
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @attention
 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
ARM GAS  /tmp/ccnYk2xI.s 			page 4


 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ******************************************************************************
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #include "stm32g4xx_hal.h"
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @addtogroup STM32G4xx_HAL_Driver
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART UART
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief HAL UART module driver
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** const uint16_t UARTPrescTable[12] = {1U, 2U, 4U, 6U, 8U, 10U, 12U, 16U, 32U, 64U, 128U, 256U};
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccnYk2xI.s 			page 5


 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** ===============================================================================
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in asynchronous mode.
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Baud Rate
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Word Length
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Stop Bit
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Hardware flow control
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) Over Sampling Method
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) data logical level inversion
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) RX and TX pins swap
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) RX overrun detection disabling
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) DMA disabling on RX error
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) MSB first on communication line
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (++) auto Baud rate detection
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
ARM GAS  /tmp/ccnYk2xI.s 			page 6


 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     are available in reference manual).
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   following table.
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   Table 1. UART frame format.
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check the parameters */
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check the parameters */
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
ARM GAS  /tmp/ccnYk2xI.s 			page 7


 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
ARM GAS  /tmp/ccnYk2xI.s 			page 8


 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check UART instance */
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  /tmp/ccnYk2xI.s 			page 9


 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart             UART handle.
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the LIN UART instance */
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 10


 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart        UART handle.
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccnYk2xI.s 			page 11


 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the wake up method parameter */
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware */
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 12


 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart == NULL)
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DeInit the low level hardware */
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DeInit the low level hardware */
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccnYk2xI.s 			page 13


 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart uart handle
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (pCallback == NULL)
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 14


 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 15


 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     status =  HAL_ERROR;
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return status;
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart uart handle
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
ARM GAS  /tmp/ccnYk2xI.s 			page 16


 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                                                                   AbortTransmitCplt
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                                                                   AbortReceiveCpltC
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
ARM GAS  /tmp/ccnYk2xI.s 			page 17


 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (CallbackID)
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default :
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         status =  HAL_ERROR;
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     status =  HAL_ERROR;
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return status;
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
ARM GAS  /tmp/ccnYk2xI.s 			page 18


 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                       ##### IO operation functions #####
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     and Half duplex data transfers.
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) There are two mode of transfer:
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            after finishing transfer.
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            using DMA mode.
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Blocking mode API's are :
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
ARM GAS  /tmp/ccnYk2xI.s 			page 19


1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         Errors are handled as follows :
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            in Interrupt mode reception .
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            to identify error type, and HAL_UART_ErrorCallback() user callback is executed.
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Transfer is kept ongoing on UART side.
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback()
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            user callback is executed.
1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart   UART handle.
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *pdata16bits;
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return  HAL_ERROR;
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init tickstart for timeout management */
ARM GAS  /tmp/ccnYk2xI.s 			page 20


1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = NULL;
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = pData;
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = NULL;
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (pdata8bits == NULL)
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
ARM GAS  /tmp/ccnYk2xI.s 			page 21


1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart   UART handle.
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *pdata16bits;
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask;
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return  HAL_ERROR;
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tickstart = HAL_GetTick();
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = NULL;
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata8bits  = pData;
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = NULL;
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* as long as data have to be received */
ARM GAS  /tmp/ccnYk2xI.s 			page 22


1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (pdata8bits == NULL)
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR       = NULL;
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 23


1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccnYk2xI.s 			page 24


1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize  = Size;
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxISR       = NULL;
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 25


1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 provided through pData.
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA error callback */
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA abort callback */
1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 26


1401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Set error code to DMA */
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_ERROR;
1413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in the UART CR3 register */
1422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the parity bit (MSB position).
1436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         of u16 available through pData.
1439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_ERROR;
1452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_LOCK(huart);
1455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize = Size;
ARM GAS  /tmp/ccnYk2xI.s 			page 27


1458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA error callback */
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
1472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the DMA abort callback */
1474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the DMA channel */
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Set error code to DMA */
1480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_ERROR;
1488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     in the UART CR3 register */
1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_OK;
1503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
1505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_BUSY;
1507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccnYk2xI.s 			page 28


1515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
1521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
1552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/ccnYk2xI.s 			page 29


1572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
1579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
ARM GAS  /tmp/ccnYk2xI.s 			page 30


1629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                    USART_CR1_TCIE));
1661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccnYk2xI.s 			page 31


1686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
1727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
ARM GAS  /tmp/ccnYk2xI.s 			page 32


1743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
1783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
1799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
ARM GAS  /tmp/ccnYk2xI.s 			page 33


1800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
1830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Set error code to DMA */
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
1834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
1835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
1841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
1855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/ccnYk2xI.s 			page 34


1857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
1859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
1863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
1867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
1868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE |
1874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                    USART_CR1_TXEIE_TXFNFIE));
1875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      before any call to DMA Abort functions */
1879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        Otherwise, set it to NULL */
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        Otherwise, set it to NULL */
1898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
1903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 35


1914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA TX */
1921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 0U;
1928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA RX */
1944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 1U;
1948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
1950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
1951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 0U;
1952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
1953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (abortcplt == 1U)
1958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
1959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
1962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear ISR function pointers */
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxISR = NULL;
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR = NULL;
1966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset errorCode */
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
ARM GAS  /tmp/ccnYk2xI.s 			page 36


1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
1978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Discard the received data */
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort complete callback */
1989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
1991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
1995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
1997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
1998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
1999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
2004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
2008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
2016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
ARM GAS  /tmp/ccnYk2xI.s 			page 37


2028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA TX */
2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount = 0U;
2042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxISR = NULL;
2045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR = NULL;
2066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccnYk2xI.s 			page 38


2085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         This procedure performs following operations :
2094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - Set handle State to READY
2098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Abort DMA RX */
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount = 0U;
2132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Discard the received data */
2140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 39


2142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t errorflags;
2194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t errorcode;
2195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If no error occurs */
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (errorflags == 0U)
ARM GAS  /tmp/ccnYk2xI.s 			page 40


2199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxISR != NULL)
2206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR(huart);
2208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
2210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* If some errors occur */
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((errorflags != 0U)
2215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
2217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
ARM GAS  /tmp/ccnYk2xI.s 			page 41


2256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (huart->RxISR != NULL)
2269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxISR(huart);
2271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           - Receiver Timeout error in Reception
2276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           - Overrun error in Reception
2277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           - any error occurs in DMA mode reception
2278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       */
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
2296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Abort DMA RX */
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             {
2303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             }
2306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
2307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           else
2308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
2309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /* Call user error callback */
2310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /*Call registered error callback*/
2312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             huart->ErrorCallback(huart);
ARM GAS  /tmp/ccnYk2xI.s 			page 42


2313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           }
2319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         else
2321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Call user error callback */
2323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call registered error callback*/
2325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
2333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            Error is notified to user through user error callback */
2336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered error callback*/
2338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   } /* End if some error occurs */
2349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
ARM GAS  /tmp/ccnYk2xI.s 			page 43


2370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxISR != NULL)
2374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxISR(huart);
2376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
2407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
2411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
ARM GAS  /tmp/ccnYk2xI.s 			page 44


2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART error callback.
2476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 45


2484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UNUSED(huart);
2528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****    */
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief   UART control functions
2540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
ARM GAS  /tmp/ccnYk2xI.s 			page 46


2541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
2542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
2543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****  ===============================================================================
2545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
2546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
2560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Locked */
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_LOCK(huart);
2594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Set the USART RTOEN bit */
ARM GAS  /tmp/ccnYk2xI.s 			page 47


2598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Unlocked */
2603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_OK;
2606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_BUSY;
2610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
2615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
2627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->gState == HAL_UART_STATE_READY)
2629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Locked */
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_LOCK(huart);
2632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_BUSY;
2634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear the USART RTOEN bit */
2636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Process Unlocked */
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
2642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_OK;
2644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
2646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_BUSY;
2648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
2651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return HAL_ERROR;
2653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
ARM GAS  /tmp/ccnYk2xI.s 			page 48


2655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
2701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccnYk2xI.s 			page 49


2712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear TE and RE bits */
2718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status.
2734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear TE and RE bits */
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Transmit break characters.
2756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
2765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Send break characters */
ARM GAS  /tmp/ccnYk2xI.s 			page 50


2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *
2785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @verbatim
2786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ==============================================================================
2787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   ==============================================================================
2789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     [..]
2790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     This subsection provides functions allowing to :
2791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) Return the UART handle state.
2792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (+) Return the UART handle error code
2793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** @endverbatim
2795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Return the UART handle state.
2800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL state
2803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp1;
2807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp2;
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp1 = huart->gState;
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp2 = huart->RxState;
2810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval UART Error Code
2819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return huart->ErrorCode;
2823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
ARM GAS  /tmp/ccnYk2xI.s 			page 51


2826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @}
2830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @{
2834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
2839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval none
2840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Init the UART Callback settings */
2845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
2858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
2861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
2863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
2864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
2865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
2867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tmpreg;
2868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t brrtemp;
2869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t usartdiv;
2871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres;
2873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t pclk;
2874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
ARM GAS  /tmp/ccnYk2xI.s 			page 52


2883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * to huart->Init.StopBits value */
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure
2912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Configure
2926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check LPUART instance */
2933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Retrieve frequency clock */
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
2937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
ARM GAS  /tmp/ccnYk2xI.s 			page 53


2940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
2943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
2949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
2951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = 0U;
2952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
2953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
2955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* If proper clock source reported */
2957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (pclk != 0U)
2958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Compute clock after Prescaler */
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
2961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
2962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
2964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
2965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
2967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
2968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
2969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
2970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Check computed UsartDiv value is in allocated range
2971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
2972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescale
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
2974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
2976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         else
2978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
2979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ret = HAL_ERROR;
2980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
2981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
2982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                 (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
2983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     } /* if (pclk != 0) */
2984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
2985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
2989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
2990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
2992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
2995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
ARM GAS  /tmp/ccnYk2xI.s 			page 54


2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
2998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
2999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
3006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = 0U;
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (pclk != 0U)
3013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescal
3015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
3018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
3019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
3020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     switch (clocksource)
3030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
3033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
3036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) HSI_VALUE;
3039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
3042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = (uint32_t) LSE_VALUE;
3045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       default:
3047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pclk = 0U;
3048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
3050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (pclk != 0U)
3053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccnYk2xI.s 			page 55


3054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* USARTDIV must be greater than or equal to 0d16 */
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPresca
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
3057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->BRR = usartdiv;
3059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         ret = HAL_ERROR;
3063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear ISR function pointers */
3072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxISR = NULL;
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
3074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return ret;
3076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
3090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
3093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
3097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
3100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure data inversion */
3103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
3104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
3107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
ARM GAS  /tmp/ccnYk2xI.s 			page 56


3111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
3114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
3160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Init tickstart for timeout management */
3165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tickstart = HAL_GetTick();
3166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
ARM GAS  /tmp/ccnYk2xI.s 			page 57


3168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Timeout occurred */
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
3175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Timeout occurred */
3185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return HAL_TIMEOUT;
3186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Initialize the UART State */
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart     UART handle.
3201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Tickstart Tick start value
3204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param Timeout   Timeout duration
3205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval HAL status
3206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Wait until flag is set */
3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Check for the Timeout */
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            interrupts for the interrupt process */
3220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccnYk2xI.s 			page 58


3225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         return HAL_TIMEOUT;
3229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
3235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
3239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****              interrupts for the interrupt process */
3240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TX
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           /* Process Unlocked */
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           return HAL_TIMEOUT;
3251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
3252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return HAL_OK;
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
3262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
  27              		.loc 1 3265 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
3266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
  33              		.loc 1 3267 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 1368     		ldr	r3, [r2]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 1360     		str	r3, [r2]
3268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
  38              		.loc 1 3268 0
  39 000a 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccnYk2xI.s 			page 59


  40 000c 9368     		ldr	r3, [r2, #8]
  41 000e 23F40003 		bic	r3, r3, #8388608
  42 0012 9360     		str	r3, [r2, #8]
3269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  43              		.loc 1 3271 0
  44 0014 2023     		movs	r3, #32
  45 0016 C0F88030 		str	r3, [r0, #128]
3272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
  46              		.loc 1 3272 0
  47 001a 7047     		bx	lr
  48              		.cfi_endproc
  49              	.LFE178:
  51              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  52              		.align	1
  53              		.syntax unified
  54              		.thumb
  55              		.thumb_func
  56              		.fpu fpv4-sp-d16
  58              	UART_EndRxTransfer:
  59              	.LFB179:
3273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart UART handle.
3278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
  60              		.loc 1 3281 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65              	.LVL1:
3282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
  66              		.loc 1 3283 0
  67 0000 0268     		ldr	r2, [r0]
  68 0002 1368     		ldr	r3, [r2]
  69 0004 23F49073 		bic	r3, r3, #288
  70 0008 1360     		str	r3, [r2]
3284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
  71              		.loc 1 3284 0
  72 000a 0268     		ldr	r2, [r0]
  73 000c 9368     		ldr	r3, [r2, #8]
  74 000e 23F08053 		bic	r3, r3, #268435456
  75 0012 23F00103 		bic	r3, r3, #1
  76 0016 9360     		str	r3, [r2, #8]
3285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  77              		.loc 1 3287 0
  78 0018 2023     		movs	r3, #32
  79 001a C0F88430 		str	r3, [r0, #132]
ARM GAS  /tmp/ccnYk2xI.s 			page 60


3288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxISR = NULL;
  80              		.loc 1 3290 0
  81 001e 0023     		movs	r3, #0
  82 0020 C366     		str	r3, [r0, #108]
3291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
  83              		.loc 1 3291 0
  84 0022 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE179:
  88              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  89              		.align	1
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	UART_TxISR_8BIT:
  96              	.LFB190:
3292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Normal mode */
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        in the UART CR3 register */
3310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Circular mode */
3316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
ARM GAS  /tmp/ccnYk2xI.s 			page 61


3330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* DMA Normal mode */
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****        in the UART CR3 register */
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
ARM GAS  /tmp/ccnYk2xI.s 			page 62


3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param hdma DMA handle.
3402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = 0U;
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered error callback*/
3431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccnYk2xI.s 			page 63


3444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered error callback*/
3452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
3479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset errorCode */
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccnYk2xI.s 			page 64


3501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       return;
3533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Reset errorCode */
3541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccnYk2xI.s 			page 65


3558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
3577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  hdma DMA handle.
3603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
3607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
3610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Discard the received data */
ARM GAS  /tmp/ccnYk2xI.s 			page 66


3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call user Abort complete callback */
3621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
3629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length .
3632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
  97              		.loc 1 3638 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102              	.LVL2:
3639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 103              		.loc 1 3640 0
 104 0000 D0F88030 		ldr	r3, [r0, #128]
 105 0004 212B     		cmp	r3, #33
 106 0006 00D0     		beq	.L6
 107              	.L3:
3641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
3651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
3654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
3655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 108              		.loc 1 3657 0
 109 0008 7047     		bx	lr
 110              	.L6:
ARM GAS  /tmp/ccnYk2xI.s 			page 67


3642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 111              		.loc 1 3642 0
 112 000a B0F85630 		ldrh	r3, [r0, #86]
 113 000e 9BB2     		uxth	r3, r3
 114 0010 6BB1     		cbz	r3, .L7
3652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 115              		.loc 1 3652 0
 116 0012 036D     		ldr	r3, [r0, #80]
 117 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 118 0016 0368     		ldr	r3, [r0]
 119 0018 9A62     		str	r2, [r3, #40]
3653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
 120              		.loc 1 3653 0
 121 001a 036D     		ldr	r3, [r0, #80]
 122 001c 0133     		adds	r3, r3, #1
 123 001e 0365     		str	r3, [r0, #80]
3654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 124              		.loc 1 3654 0
 125 0020 B0F85630 		ldrh	r3, [r0, #86]
 126 0024 013B     		subs	r3, r3, #1
 127 0026 9BB2     		uxth	r3, r3
 128 0028 A0F85630 		strh	r3, [r0, #86]	@ movhi
 129              		.loc 1 3657 0
 130 002c ECE7     		b	.L3
 131              	.L7:
3645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 132              		.loc 1 3645 0
 133 002e 0268     		ldr	r2, [r0]
 134 0030 1368     		ldr	r3, [r2]
 135 0032 23F08003 		bic	r3, r3, #128
 136 0036 1360     		str	r3, [r2]
3648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 137              		.loc 1 3648 0
 138 0038 0268     		ldr	r2, [r0]
 139 003a 1368     		ldr	r3, [r2]
 140 003c 43F04003 		orr	r3, r3, #64
 141 0040 1360     		str	r3, [r2]
 142 0042 7047     		bx	lr
 143              		.cfi_endproc
 144              	.LFE190:
 146              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 147              		.align	1
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 151              		.fpu fpv4-sp-d16
 153              	UART_TxISR_16BIT:
 154              	.LFB191:
3658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length.
3661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccnYk2xI.s 			page 68


3667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 155              		.loc 1 3667 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL3:
3668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 161              		.loc 1 3671 0
 162 0000 D0F88030 		ldr	r3, [r0, #128]
 163 0004 212B     		cmp	r3, #33
 164 0006 00D0     		beq	.L11
 165              	.L8:
3672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     else
3682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
3687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 166              		.loc 1 3689 0
 167 0008 7047     		bx	lr
 168              	.L11:
3673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 169              		.loc 1 3673 0
 170 000a B0F85630 		ldrh	r3, [r0, #86]
 171 000e 9BB2     		uxth	r3, r3
 172 0010 7BB1     		cbz	r3, .L12
3683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 173              		.loc 1 3683 0
 174 0012 036D     		ldr	r3, [r0, #80]
 175              	.LVL4:
3684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 176              		.loc 1 3684 0
 177 0014 1B88     		ldrh	r3, [r3]
 178              	.LVL5:
 179 0016 0268     		ldr	r2, [r0]
 180 0018 C3F30803 		ubfx	r3, r3, #0, #9
 181 001c 9362     		str	r3, [r2, #40]
 182              	.LVL6:
3685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->TxXferCount--;
 183              		.loc 1 3685 0
 184 001e 036D     		ldr	r3, [r0, #80]
ARM GAS  /tmp/ccnYk2xI.s 			page 69


 185 0020 0233     		adds	r3, r3, #2
 186 0022 0365     		str	r3, [r0, #80]
3686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 187              		.loc 1 3686 0
 188 0024 B0F85630 		ldrh	r3, [r0, #86]
 189 0028 013B     		subs	r3, r3, #1
 190 002a 9BB2     		uxth	r3, r3
 191 002c A0F85630 		strh	r3, [r0, #86]	@ movhi
 192              		.loc 1 3689 0
 193 0030 EAE7     		b	.L8
 194              	.L12:
3676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 195              		.loc 1 3676 0
 196 0032 0268     		ldr	r2, [r0]
 197 0034 1368     		ldr	r3, [r2]
 198 0036 23F08003 		bic	r3, r3, #128
 199 003a 1360     		str	r3, [r2]
3679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 200              		.loc 1 3679 0
 201 003c 0268     		ldr	r2, [r0]
 202 003e 1368     		ldr	r3, [r2]
 203 0040 43F04003 		orr	r3, r3, #64
 204 0044 1360     		str	r3, [r2]
 205 0046 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE191:
 209              		.section	.text.UART_TxISR_8BIT_FIFOEN,"ax",%progbits
 210              		.align	1
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	UART_TxISR_8BIT_FIFOEN:
 217              	.LFB192:
3690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 218              		.loc 1 3699 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223              	.LVL7:
3700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 224              		.loc 1 3703 0
 225 0000 D0F88030 		ldr	r3, [r0, #128]
 226 0004 212B     		cmp	r3, #33
ARM GAS  /tmp/ccnYk2xI.s 			page 70


 227 0006 00D0     		beq	.L19
 228              	.L13:
3704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break; /* force exit loop */
3716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
3721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
3722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Nothing to do */
3726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 229              		.loc 1 3729 0
 230 0008 7047     		bx	lr
 231              	.L19:
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 232              		.loc 1 3705 0
 233 000a B0F86A30 		ldrh	r3, [r0, #106]
 234              	.LVL8:
 235 000e 0CE0     		b	.L15
 236              	.L20:
3710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 237              		.loc 1 3710 0
 238 0010 0268     		ldr	r2, [r0]
 239 0012 9368     		ldr	r3, [r2, #8]
 240              	.LVL9:
 241 0014 23F40003 		bic	r3, r3, #8388608
 242 0018 9360     		str	r3, [r2, #8]
3713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 243              		.loc 1 3713 0
 244 001a 0268     		ldr	r2, [r0]
 245 001c 1368     		ldr	r3, [r2]
 246 001e 43F04003 		orr	r3, r3, #64
 247 0022 1360     		str	r3, [r2]
3715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 248              		.loc 1 3715 0
 249 0024 7047     		bx	lr
 250              	.LVL10:
 251              	.L17:
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 252              		.loc 1 3705 0 discriminator 2
ARM GAS  /tmp/ccnYk2xI.s 			page 71


 253 0026 013B     		subs	r3, r3, #1
 254              	.LVL11:
 255 0028 9BB2     		uxth	r3, r3
 256              	.LVL12:
 257              	.L15:
3705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 258              		.loc 1 3705 0 is_stmt 0 discriminator 1
 259 002a 002B     		cmp	r3, #0
 260 002c ECD0     		beq	.L13
3707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 261              		.loc 1 3707 0 is_stmt 1
 262 002e B0F85620 		ldrh	r2, [r0, #86]
 263 0032 92B2     		uxth	r2, r2
 264 0034 002A     		cmp	r2, #0
 265 0036 EBD0     		beq	.L20
3717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 266              		.loc 1 3717 0
 267 0038 0268     		ldr	r2, [r0]
 268 003a D169     		ldr	r1, [r2, #28]
 269 003c 11F0800F 		tst	r1, #128
 270 0040 F1D0     		beq	.L17
3719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr++;
 271              		.loc 1 3719 0
 272 0042 016D     		ldr	r1, [r0, #80]
 273 0044 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 274 0046 9162     		str	r1, [r2, #40]
3720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
 275              		.loc 1 3720 0
 276 0048 026D     		ldr	r2, [r0, #80]
 277 004a 0132     		adds	r2, r2, #1
 278 004c 0265     		str	r2, [r0, #80]
3721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 279              		.loc 1 3721 0
 280 004e B0F85620 		ldrh	r2, [r0, #86]
 281 0052 013A     		subs	r2, r2, #1
 282 0054 92B2     		uxth	r2, r2
 283 0056 A0F85620 		strh	r2, [r0, #86]	@ movhi
 284 005a E4E7     		b	.L17
 285              		.cfi_endproc
 286              	.LFE192:
 288              		.section	.text.UART_TxISR_16BIT_FIFOEN,"ax",%progbits
 289              		.align	1
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	UART_TxISR_16BIT_FIFOEN:
 296              	.LFB193:
3730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief TX interrupt handler for 9 bits data word length and FIFO mode is enabled.
3733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
ARM GAS  /tmp/ccnYk2xI.s 			page 72


3739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 297              		.loc 1 3739 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302              	.LVL13:
3740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 303              		.loc 1 3744 0
 304 0000 D0F88030 		ldr	r3, [r0, #128]
 305 0004 212B     		cmp	r3, #33
 306 0006 00D0     		beq	.L27
 307              	.L21:
3745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break; /* force exit loop */
3757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
3764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       else
3766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Nothing to do */
3768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 308              		.loc 1 3771 0
 309 0008 7047     		bx	lr
 310              	.L27:
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 311              		.loc 1 3746 0
 312 000a B0F86A30 		ldrh	r3, [r0, #106]
 313              	.LVL14:
 314 000e 0CE0     		b	.L23
 315              	.L28:
3751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 316              		.loc 1 3751 0
 317 0010 0268     		ldr	r2, [r0]
 318 0012 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccnYk2xI.s 			page 73


 319              	.LVL15:
 320 0014 23F40003 		bic	r3, r3, #8388608
 321 0018 9360     		str	r3, [r2, #8]
3754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 322              		.loc 1 3754 0
 323 001a 0268     		ldr	r2, [r0]
 324 001c 1368     		ldr	r3, [r2]
 325 001e 43F04003 		orr	r3, r3, #64
 326 0022 1360     		str	r3, [r2]
3756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 327              		.loc 1 3756 0
 328 0024 7047     		bx	lr
 329              	.LVL16:
 330              	.L25:
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 331              		.loc 1 3746 0 discriminator 2
 332 0026 013B     		subs	r3, r3, #1
 333              	.LVL17:
 334 0028 9BB2     		uxth	r3, r3
 335              	.LVL18:
 336              	.L23:
3746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 337              		.loc 1 3746 0 is_stmt 0 discriminator 1
 338 002a 002B     		cmp	r3, #0
 339 002c ECD0     		beq	.L21
3748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 340              		.loc 1 3748 0 is_stmt 1
 341 002e B0F85620 		ldrh	r2, [r0, #86]
 342 0032 92B2     		uxth	r2, r2
 343 0034 002A     		cmp	r2, #0
 344 0036 EBD0     		beq	.L28
3758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 345              		.loc 1 3758 0
 346 0038 0268     		ldr	r2, [r0]
 347 003a D169     		ldr	r1, [r2, #28]
 348 003c 11F0800F 		tst	r1, #128
 349 0040 F1D0     		beq	.L25
3760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 350              		.loc 1 3760 0
 351 0042 016D     		ldr	r1, [r0, #80]
 352              	.LVL19:
3761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 353              		.loc 1 3761 0
 354 0044 0988     		ldrh	r1, [r1]
 355              	.LVL20:
 356 0046 C1F30801 		ubfx	r1, r1, #0, #9
 357 004a 9162     		str	r1, [r2, #40]
 358              	.LVL21:
3762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->TxXferCount--;
 359              		.loc 1 3762 0
 360 004c 026D     		ldr	r2, [r0, #80]
 361 004e 0232     		adds	r2, r2, #2
 362 0050 0265     		str	r2, [r0, #80]
3763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 363              		.loc 1 3763 0
 364 0052 B0F85620 		ldrh	r2, [r0, #86]
 365 0056 013A     		subs	r2, r2, #1
ARM GAS  /tmp/ccnYk2xI.s 			page 74


 366 0058 92B2     		uxth	r2, r2
 367 005a A0F85620 		strh	r2, [r0, #86]	@ movhi
 368 005e E2E7     		b	.L25
 369              		.cfi_endproc
 370              	.LFE193:
 372              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 373              		.align	1
 374              		.weak	HAL_UART_MspInit
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	HAL_UART_MspInit:
 381              	.LFB137:
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 382              		.loc 1 661 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387              	.LVL22:
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 388              		.loc 1 668 0
 389 0000 7047     		bx	lr
 390              		.cfi_endproc
 391              	.LFE137:
 393              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 394              		.align	1
 395              		.weak	HAL_UART_MspDeInit
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu fpv4-sp-d16
 401              	HAL_UART_MspDeInit:
 402              	.LFB138:
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 403              		.loc 1 676 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		@ link register save eliminated.
 408              	.LVL23:
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 409              		.loc 1 683 0
 410 0000 7047     		bx	lr
 411              		.cfi_endproc
 412              	.LFE138:
 414              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 415              		.align	1
 416              		.global	HAL_UART_DeInit
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 420              		.fpu fpv4-sp-d16
 422              	HAL_UART_DeInit:
 423              	.LFB136:
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /tmp/ccnYk2xI.s 			page 75


 424              		.loc 1 616 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              	.LVL24:
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 429              		.loc 1 618 0
 430 0000 0028     		cmp	r0, #0
 431 0002 3AD0     		beq	.L34
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 432              		.loc 1 616 0
 433 0004 38B5     		push	{r3, r4, r5, lr}
 434              	.LCFI0:
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 3, -16
 437              		.cfi_offset 4, -12
 438              		.cfi_offset 5, -8
 439              		.cfi_offset 14, -4
 440 0006 0446     		mov	r4, r0
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 441              		.loc 1 624 0
 442 0008 0368     		ldr	r3, [r0]
 443 000a 1D4A     		ldr	r2, .L39
 444 000c 9342     		cmp	r3, r2
 445 000e 18D0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 446              		.loc 1 624 0 is_stmt 0 discriminator 1
 447 0010 A2F57442 		sub	r2, r2, #62464
 448 0014 9342     		cmp	r3, r2
 449 0016 14D0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 450              		.loc 1 624 0 discriminator 2
 451 0018 02F58062 		add	r2, r2, #1024
 452 001c 9342     		cmp	r3, r2
 453 001e 10D0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 454              		.loc 1 624 0 discriminator 3
 455 0020 02F58062 		add	r2, r2, #1024
 456 0024 9342     		cmp	r3, r2
 457 0026 0CD0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 458              		.loc 1 624 0 discriminator 4
 459 0028 02F58062 		add	r2, r2, #1024
 460 002c 9342     		cmp	r3, r2
 461 002e 08D0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 462              		.loc 1 624 0 discriminator 5
 463 0030 02F54052 		add	r2, r2, #12288
 464 0034 9342     		cmp	r3, r2
 465 0036 04D0     		beq	.L33
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 466              		.loc 1 624 0 discriminator 6
 467 0038 4FF41C71 		mov	r1, #624
 468 003c 1148     		ldr	r0, .L39+4
 469              	.LVL25:
 470 003e FFF7FEFF 		bl	assert_failed
 471              	.LVL26:
ARM GAS  /tmp/ccnYk2xI.s 			page 76


 472              	.L33:
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 473              		.loc 1 626 0 is_stmt 1
 474 0042 2423     		movs	r3, #36
 475 0044 C4F88030 		str	r3, [r4, #128]
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 476              		.loc 1 628 0
 477 0048 2268     		ldr	r2, [r4]
 478 004a 1368     		ldr	r3, [r2]
 479 004c 23F00103 		bic	r3, r3, #1
 480 0050 1360     		str	r3, [r2]
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 481              		.loc 1 630 0
 482 0052 2368     		ldr	r3, [r4]
 483 0054 0025     		movs	r5, #0
 484 0056 1D60     		str	r5, [r3]
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 485              		.loc 1 631 0
 486 0058 2368     		ldr	r3, [r4]
 487 005a 5D60     		str	r5, [r3, #4]
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 488              		.loc 1 632 0
 489 005c 2368     		ldr	r3, [r4]
 490 005e 9D60     		str	r5, [r3, #8]
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 491              		.loc 1 643 0
 492 0060 2046     		mov	r0, r4
 493 0062 FFF7FEFF 		bl	HAL_UART_MspDeInit
 494              	.LVL27:
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 495              		.loc 1 646 0
 496 0066 C4F88850 		str	r5, [r4, #136]
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 497              		.loc 1 647 0
 498 006a C4F88050 		str	r5, [r4, #128]
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 499              		.loc 1 648 0
 500 006e C4F88450 		str	r5, [r4, #132]
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 501              		.loc 1 650 0
 502 0072 84F87C50 		strb	r5, [r4, #124]
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 503              		.loc 1 652 0
 504 0076 2846     		mov	r0, r5
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 505              		.loc 1 653 0
 506 0078 38BD     		pop	{r3, r4, r5, pc}
 507              	.LVL28:
 508              	.L34:
 509              	.LCFI1:
 510              		.cfi_def_cfa_offset 0
 511              		.cfi_restore 3
 512              		.cfi_restore 4
 513              		.cfi_restore 5
 514              		.cfi_restore 14
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 515              		.loc 1 620 0
ARM GAS  /tmp/ccnYk2xI.s 			page 77


 516 007a 0120     		movs	r0, #1
 517              	.LVL29:
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 518              		.loc 1 653 0
 519 007c 7047     		bx	lr
 520              	.L40:
 521 007e 00BF     		.align	2
 522              	.L39:
 523 0080 00380140 		.word	1073821696
 524 0084 00000000 		.word	.LC0
 525              		.cfi_endproc
 526              	.LFE136:
 528              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 529              		.align	1
 530              		.global	HAL_UART_Transmit_IT
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 534              		.fpu fpv4-sp-d16
 536              	HAL_UART_Transmit_IT:
 537              	.LFB141:
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 538              		.loc 1 1214 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543              	.LVL30:
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 544              		.loc 1 1216 0
 545 0000 D0F88030 		ldr	r3, [r0, #128]
 546 0004 202B     		cmp	r3, #32
 547 0006 46D1     		bne	.L48
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 548              		.loc 1 1218 0
 549 0008 0029     		cmp	r1, #0
 550 000a 46D0     		beq	.L49
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 551              		.loc 1 1218 0 is_stmt 0 discriminator 1
 552 000c 002A     		cmp	r2, #0
 553 000e 46D0     		beq	.L50
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 554              		.loc 1 1223 0 is_stmt 1
 555 0010 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 556 0014 012B     		cmp	r3, #1
 557 0016 44D0     		beq	.L51
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 558              		.loc 1 1223 0 is_stmt 0 discriminator 2
 559 0018 0123     		movs	r3, #1
 560 001a 80F87C30 		strb	r3, [r0, #124]
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 561              		.loc 1 1225 0 is_stmt 1 discriminator 2
 562 001e 0165     		str	r1, [r0, #80]
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 563              		.loc 1 1226 0 discriminator 2
 564 0020 A0F85420 		strh	r2, [r0, #84]	@ movhi
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR       = NULL;
ARM GAS  /tmp/ccnYk2xI.s 			page 78


 565              		.loc 1 1227 0 discriminator 2
 566 0024 A0F85620 		strh	r2, [r0, #86]	@ movhi
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 567              		.loc 1 1228 0 discriminator 2
 568 0028 0023     		movs	r3, #0
 569 002a 0367     		str	r3, [r0, #112]
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 570              		.loc 1 1230 0 discriminator 2
 571 002c C0F88830 		str	r3, [r0, #136]
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 572              		.loc 1 1231 0 discriminator 2
 573 0030 2123     		movs	r3, #33
 574 0032 C0F88030 		str	r3, [r0, #128]
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 575              		.loc 1 1234 0 discriminator 2
 576 0036 436E     		ldr	r3, [r0, #100]
 577 0038 B3F1005F 		cmp	r3, #536870912
 578 003c 0FD0     		beq	.L52
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 579              		.loc 1 1254 0
 580 003e 8368     		ldr	r3, [r0, #8]
 581 0040 B3F5805F 		cmp	r3, #4096
 582 0044 21D0     		beq	.L53
 583              	.L46:
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 584              		.loc 1 1260 0
 585 0046 184B     		ldr	r3, .L55
 586 0048 0367     		str	r3, [r0, #112]
 587              	.L47:
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 588              		.loc 1 1263 0
 589 004a 0023     		movs	r3, #0
 590 004c 80F87C30 		strb	r3, [r0, #124]
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 591              		.loc 1 1266 0
 592 0050 0168     		ldr	r1, [r0]
 593              	.LVL31:
 594 0052 0A68     		ldr	r2, [r1]
 595              	.LVL32:
 596 0054 42F08002 		orr	r2, r2, #128
 597 0058 0A60     		str	r2, [r1]
 598              	.LVL33:
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 599              		.loc 1 1269 0
 600 005a 1846     		mov	r0, r3
 601              	.LVL34:
 602 005c 7047     		bx	lr
 603              	.LVL35:
 604              	.L52:
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 605              		.loc 1 1237 0
 606 005e 8368     		ldr	r3, [r0, #8]
 607 0060 B3F5805F 		cmp	r3, #4096
 608 0064 0BD0     		beq	.L54
 609              	.L44:
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 610              		.loc 1 1243 0
ARM GAS  /tmp/ccnYk2xI.s 			page 79


 611 0066 114B     		ldr	r3, .L55+4
 612 0068 0367     		str	r3, [r0, #112]
 613              	.L45:
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 614              		.loc 1 1246 0
 615 006a 0023     		movs	r3, #0
 616 006c 80F87C30 		strb	r3, [r0, #124]
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 617              		.loc 1 1249 0
 618 0070 0168     		ldr	r1, [r0]
 619              	.LVL36:
 620 0072 8A68     		ldr	r2, [r1, #8]
 621              	.LVL37:
 622 0074 42F40002 		orr	r2, r2, #8388608
 623 0078 8A60     		str	r2, [r1, #8]
 624              	.LVL38:
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 625              		.loc 1 1269 0
 626 007a 1846     		mov	r0, r3
 627              	.LVL39:
 628 007c 7047     		bx	lr
 629              	.LVL40:
 630              	.L54:
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 631              		.loc 1 1237 0 discriminator 1
 632 007e 0369     		ldr	r3, [r0, #16]
 633 0080 002B     		cmp	r3, #0
 634 0082 F0D1     		bne	.L44
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 635              		.loc 1 1239 0
 636 0084 0A4B     		ldr	r3, .L55+8
 637 0086 0367     		str	r3, [r0, #112]
 638 0088 EFE7     		b	.L45
 639              	.L53:
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 640              		.loc 1 1254 0 discriminator 1
 641 008a 0369     		ldr	r3, [r0, #16]
 642 008c 002B     		cmp	r3, #0
 643 008e DAD1     		bne	.L46
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 644              		.loc 1 1256 0
 645 0090 084B     		ldr	r3, .L55+12
 646 0092 0367     		str	r3, [r0, #112]
 647 0094 D9E7     		b	.L47
 648              	.L48:
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 649              		.loc 1 1273 0
 650 0096 0220     		movs	r0, #2
 651              	.LVL41:
 652 0098 7047     		bx	lr
 653              	.LVL42:
 654              	.L49:
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 655              		.loc 1 1220 0
 656 009a 0120     		movs	r0, #1
 657              	.LVL43:
 658 009c 7047     		bx	lr
ARM GAS  /tmp/ccnYk2xI.s 			page 80


 659              	.LVL44:
 660              	.L50:
 661 009e 0120     		movs	r0, #1
 662              	.LVL45:
 663 00a0 7047     		bx	lr
 664              	.LVL46:
 665              	.L51:
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 666              		.loc 1 1223 0
 667 00a2 0220     		movs	r0, #2
 668              	.LVL47:
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 669              		.loc 1 1275 0
 670 00a4 7047     		bx	lr
 671              	.L56:
 672 00a6 00BF     		.align	2
 673              	.L55:
 674 00a8 00000000 		.word	UART_TxISR_8BIT
 675 00ac 00000000 		.word	UART_TxISR_8BIT_FIFOEN
 676 00b0 00000000 		.word	UART_TxISR_16BIT_FIFOEN
 677 00b4 00000000 		.word	UART_TxISR_16BIT
 678              		.cfi_endproc
 679              	.LFE141:
 681              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 682              		.align	1
 683              		.global	HAL_UART_Receive_IT
 684              		.syntax unified
 685              		.thumb
 686              		.thumb_func
 687              		.fpu fpv4-sp-d16
 689              	HAL_UART_Receive_IT:
 690              	.LFB142:
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 691              		.loc 1 1288 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 696              	.LVL48:
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 697              		.loc 1 1290 0
 698 0000 D0F88430 		ldr	r3, [r0, #132]
 699 0004 202B     		cmp	r3, #32
 700 0006 7FD1     		bne	.L71
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 701              		.loc 1 1292 0
 702 0008 0029     		cmp	r1, #0
 703 000a 7FD0     		beq	.L72
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 704              		.loc 1 1292 0 is_stmt 0 discriminator 1
 705 000c 002A     		cmp	r2, #0
 706 000e 7FD0     		beq	.L73
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 707              		.loc 1 1297 0 is_stmt 1
 708 0010 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 709 0014 012B     		cmp	r3, #1
 710 0016 7DD0     		beq	.L74
ARM GAS  /tmp/ccnYk2xI.s 			page 81


1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 711              		.loc 1 1297 0 is_stmt 0 discriminator 2
 712 0018 0123     		movs	r3, #1
 713 001a 80F87C30 		strb	r3, [r0, #124]
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 714              		.loc 1 1299 0 is_stmt 1 discriminator 2
 715 001e 8165     		str	r1, [r0, #88]
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
 716              		.loc 1 1300 0 discriminator 2
 717 0020 A0F85C20 		strh	r2, [r0, #92]	@ movhi
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxISR       = NULL;
 718              		.loc 1 1301 0 discriminator 2
 719 0024 A0F85E20 		strh	r2, [r0, #94]	@ movhi
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 720              		.loc 1 1302 0 discriminator 2
 721 0028 0023     		movs	r3, #0
 722 002a C366     		str	r3, [r0, #108]
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 723              		.loc 1 1305 0 discriminator 2
 724 002c 8368     		ldr	r3, [r0, #8]
 725 002e B3F5805F 		cmp	r3, #4096
 726 0032 06D0     		beq	.L75
 727 0034 A3B9     		cbnz	r3, .L62
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 728              		.loc 1 1305 0 is_stmt 0 discriminator 5
 729 0036 0369     		ldr	r3, [r0, #16]
 730 0038 73B9     		cbnz	r3, .L63
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 731              		.loc 1 1305 0 discriminator 7
 732 003a FF23     		movs	r3, #255
 733 003c A0F86030 		strh	r3, [r0, #96]	@ movhi
 734 0040 14E0     		b	.L61
 735              	.L75:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 736              		.loc 1 1305 0 discriminator 1
 737 0042 0369     		ldr	r3, [r0, #16]
 738 0044 23B9     		cbnz	r3, .L60
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 739              		.loc 1 1305 0 discriminator 3
 740 0046 40F2FF13 		movw	r3, #511
 741 004a A0F86030 		strh	r3, [r0, #96]	@ movhi
 742 004e 0DE0     		b	.L61
 743              	.L60:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 744              		.loc 1 1305 0 discriminator 4
 745 0050 FF23     		movs	r3, #255
 746 0052 A0F86030 		strh	r3, [r0, #96]	@ movhi
 747 0056 09E0     		b	.L61
 748              	.L63:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 749              		.loc 1 1305 0 discriminator 8
 750 0058 7F23     		movs	r3, #127
 751 005a A0F86030 		strh	r3, [r0, #96]	@ movhi
 752 005e 05E0     		b	.L61
 753              	.L62:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 754              		.loc 1 1305 0 discriminator 6
ARM GAS  /tmp/ccnYk2xI.s 			page 82


 755 0060 B3F1805F 		cmp	r3, #268435456
 756 0064 21D0     		beq	.L76
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 757              		.loc 1 1305 0 discriminator 10
 758 0066 0023     		movs	r3, #0
 759 0068 A0F86030 		strh	r3, [r0, #96]	@ movhi
 760              	.L61:
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 761              		.loc 1 1307 0 is_stmt 1
 762 006c 0023     		movs	r3, #0
 763 006e C0F88830 		str	r3, [r0, #136]
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 764              		.loc 1 1308 0
 765 0072 2223     		movs	r3, #34
 766 0074 C0F88430 		str	r3, [r0, #132]
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 767              		.loc 1 1311 0
 768 0078 0168     		ldr	r1, [r0]
 769              	.LVL49:
 770 007a 8B68     		ldr	r3, [r1, #8]
 771 007c 43F00103 		orr	r3, r3, #1
 772 0080 8B60     		str	r3, [r1, #8]
 773              	.LVL50:
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 774              		.loc 1 1314 0
 775 0082 436E     		ldr	r3, [r0, #100]
 776 0084 B3F1005F 		cmp	r3, #536870912
 777 0088 19D0     		beq	.L77
 778              	.L66:
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 779              		.loc 1 1335 0
 780 008a 8368     		ldr	r3, [r0, #8]
 781 008c B3F5805F 		cmp	r3, #4096
 782 0090 34D0     		beq	.L78
 783              	.L69:
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 784              		.loc 1 1341 0
 785 0092 214B     		ldr	r3, .L80
 786 0094 C366     		str	r3, [r0, #108]
 787              	.L70:
1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 788              		.loc 1 1344 0
 789 0096 0023     		movs	r3, #0
 790 0098 80F87C30 		strb	r3, [r0, #124]
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 791              		.loc 1 1347 0
 792 009c 0168     		ldr	r1, [r0]
 793 009e 0A68     		ldr	r2, [r1]
 794              	.LVL51:
 795 00a0 42F49072 		orr	r2, r2, #288
 796 00a4 0A60     		str	r2, [r1]
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 797              		.loc 1 1350 0
 798 00a6 1846     		mov	r0, r3
 799              	.LVL52:
 800 00a8 7047     		bx	lr
 801              	.LVL53:
ARM GAS  /tmp/ccnYk2xI.s 			page 83


 802              	.L76:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 803              		.loc 1 1305 0 discriminator 9
 804 00aa 0369     		ldr	r3, [r0, #16]
 805 00ac 1BB9     		cbnz	r3, .L65
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 806              		.loc 1 1305 0 is_stmt 0 discriminator 11
 807 00ae 7F23     		movs	r3, #127
 808 00b0 A0F86030 		strh	r3, [r0, #96]	@ movhi
 809 00b4 DAE7     		b	.L61
 810              	.L65:
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 811              		.loc 1 1305 0 discriminator 12
 812 00b6 3F23     		movs	r3, #63
 813 00b8 A0F86030 		strh	r3, [r0, #96]	@ movhi
 814 00bc D6E7     		b	.L61
 815              	.LVL54:
 816              	.L77:
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 817              		.loc 1 1314 0 is_stmt 1 discriminator 1
 818 00be B0F86830 		ldrh	r3, [r0, #104]
 819 00c2 9342     		cmp	r3, r2
 820 00c4 E1D8     		bhi	.L66
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 821              		.loc 1 1317 0
 822 00c6 8368     		ldr	r3, [r0, #8]
 823 00c8 B3F5805F 		cmp	r3, #4096
 824 00cc 10D0     		beq	.L79
 825              	.L67:
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 826              		.loc 1 1323 0
 827 00ce 134B     		ldr	r3, .L80+4
 828 00d0 C366     		str	r3, [r0, #108]
 829              	.L68:
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 830              		.loc 1 1326 0
 831 00d2 0023     		movs	r3, #0
 832 00d4 80F87C30 		strb	r3, [r0, #124]
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
 833              		.loc 1 1329 0
 834 00d8 0168     		ldr	r1, [r0]
 835 00da 0A68     		ldr	r2, [r1]
 836              	.LVL55:
 837 00dc 42F48072 		orr	r2, r2, #256
 838 00e0 0A60     		str	r2, [r1]
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 839              		.loc 1 1330 0
 840 00e2 0168     		ldr	r1, [r0]
 841 00e4 8A68     		ldr	r2, [r1, #8]
 842 00e6 42F08052 		orr	r2, r2, #268435456
 843 00ea 8A60     		str	r2, [r1, #8]
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 844              		.loc 1 1350 0
 845 00ec 1846     		mov	r0, r3
 846              	.LVL56:
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 847              		.loc 1 1330 0
ARM GAS  /tmp/ccnYk2xI.s 			page 84


 848 00ee 7047     		bx	lr
 849              	.LVL57:
 850              	.L79:
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 851              		.loc 1 1317 0 discriminator 1
 852 00f0 0369     		ldr	r3, [r0, #16]
 853 00f2 002B     		cmp	r3, #0
 854 00f4 EBD1     		bne	.L67
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 855              		.loc 1 1319 0
 856 00f6 0A4B     		ldr	r3, .L80+8
 857 00f8 C366     		str	r3, [r0, #108]
 858 00fa EAE7     		b	.L68
 859              	.L78:
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 860              		.loc 1 1335 0 discriminator 1
 861 00fc 0369     		ldr	r3, [r0, #16]
 862 00fe 002B     		cmp	r3, #0
 863 0100 C7D1     		bne	.L69
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 864              		.loc 1 1337 0
 865 0102 084B     		ldr	r3, .L80+12
 866 0104 C366     		str	r3, [r0, #108]
 867 0106 C6E7     		b	.L70
 868              	.LVL58:
 869              	.L71:
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 870              		.loc 1 1354 0
 871 0108 0220     		movs	r0, #2
 872              	.LVL59:
 873 010a 7047     		bx	lr
 874              	.LVL60:
 875              	.L72:
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 876              		.loc 1 1294 0
 877 010c 0120     		movs	r0, #1
 878              	.LVL61:
 879 010e 7047     		bx	lr
 880              	.LVL62:
 881              	.L73:
 882 0110 0120     		movs	r0, #1
 883              	.LVL63:
 884 0112 7047     		bx	lr
 885              	.LVL64:
 886              	.L74:
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 887              		.loc 1 1297 0
 888 0114 0220     		movs	r0, #2
 889              	.LVL65:
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 890              		.loc 1 1356 0
 891 0116 7047     		bx	lr
 892              	.L81:
 893              		.align	2
 894              	.L80:
 895 0118 00000000 		.word	UART_RxISR_8BIT
 896 011c 00000000 		.word	UART_RxISR_8BIT_FIFOEN
ARM GAS  /tmp/ccnYk2xI.s 			page 85


 897 0120 00000000 		.word	UART_RxISR_16BIT_FIFOEN
 898 0124 00000000 		.word	UART_RxISR_16BIT
 899              		.cfi_endproc
 900              	.LFE142:
 902              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 903              		.align	1
 904              		.global	HAL_UART_Transmit_DMA
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 908              		.fpu fpv4-sp-d16
 910              	HAL_UART_Transmit_DMA:
 911              	.LFB143:
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 912              		.loc 1 1369 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              	.LVL66:
 917 0000 10B5     		push	{r4, lr}
 918              	.LCFI2:
 919              		.cfi_def_cfa_offset 8
 920              		.cfi_offset 4, -8
 921              		.cfi_offset 14, -4
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 922              		.loc 1 1371 0
 923 0002 D0F88040 		ldr	r4, [r0, #128]
 924 0006 202C     		cmp	r4, #32
 925 0008 42D1     		bne	.L85
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 926              		.loc 1 1373 0
 927 000a 0029     		cmp	r1, #0
 928 000c 42D0     		beq	.L86
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 929              		.loc 1 1373 0 is_stmt 0 discriminator 1
 930 000e 002A     		cmp	r2, #0
 931 0010 42D0     		beq	.L87
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 932              		.loc 1 1378 0 is_stmt 1
 933 0012 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 934 0016 012B     		cmp	r3, #1
 935 0018 40D0     		beq	.L88
 936 001a 1346     		mov	r3, r2
 937 001c 0446     		mov	r4, r0
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 938              		.loc 1 1378 0 is_stmt 0 discriminator 2
 939 001e 0122     		movs	r2, #1
 940              	.LVL67:
 941 0020 80F87C20 		strb	r2, [r0, #124]
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 942              		.loc 1 1380 0 is_stmt 1 discriminator 2
 943 0024 0165     		str	r1, [r0, #80]
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 944              		.loc 1 1381 0 discriminator 2
 945 0026 A0F85430 		strh	r3, [r0, #84]	@ movhi
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 946              		.loc 1 1382 0 discriminator 2
ARM GAS  /tmp/ccnYk2xI.s 			page 86


 947 002a A0F85630 		strh	r3, [r0, #86]	@ movhi
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 948              		.loc 1 1384 0 discriminator 2
 949 002e 0022     		movs	r2, #0
 950 0030 C0F88820 		str	r2, [r0, #136]
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 951              		.loc 1 1385 0 discriminator 2
 952 0034 2122     		movs	r2, #33
 953 0036 C0F88020 		str	r2, [r0, #128]
1387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 954              		.loc 1 1387 0 discriminator 2
 955 003a 426F     		ldr	r2, [r0, #116]
 956 003c 8AB1     		cbz	r2, .L84
1390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 957              		.loc 1 1390 0
 958 003e 1849     		ldr	r1, .L91
 959              	.LVL68:
 960 0040 D162     		str	r1, [r2, #44]
 961              	.LVL69:
1393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 962              		.loc 1 1393 0
 963 0042 426F     		ldr	r2, [r0, #116]
 964 0044 1749     		ldr	r1, .L91+4
 965 0046 1163     		str	r1, [r2, #48]
1396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 966              		.loc 1 1396 0
 967 0048 426F     		ldr	r2, [r0, #116]
 968 004a 1749     		ldr	r1, .L91+8
 969 004c 5163     		str	r1, [r2, #52]
1399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 970              		.loc 1 1399 0
 971 004e 426F     		ldr	r2, [r0, #116]
 972 0050 0021     		movs	r1, #0
 973 0052 9163     		str	r1, [r2, #56]
1402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 974              		.loc 1 1402 0
 975 0054 0268     		ldr	r2, [r0]
 976 0056 2832     		adds	r2, r2, #40
 977 0058 016D     		ldr	r1, [r0, #80]
 978 005a 406F     		ldr	r0, [r0, #116]
 979              	.LVL70:
 980 005c FFF7FEFF 		bl	HAL_DMA_Start_IT
 981              	.LVL71:
 982 0060 58B9     		cbnz	r0, .L90
 983              	.L84:
1416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 984              		.loc 1 1416 0
 985 0062 2368     		ldr	r3, [r4]
 986 0064 4022     		movs	r2, #64
 987 0066 1A62     		str	r2, [r3, #32]
1418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 988              		.loc 1 1418 0
 989 0068 0020     		movs	r0, #0
 990 006a 84F87C00 		strb	r0, [r4, #124]
1422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 991              		.loc 1 1422 0
 992 006e 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccnYk2xI.s 			page 87


 993 0070 9368     		ldr	r3, [r2, #8]
 994 0072 43F08003 		orr	r3, r3, #128
 995 0076 9360     		str	r3, [r2, #8]
1424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 996              		.loc 1 1424 0
 997 0078 0BE0     		b	.L83
 998              	.L90:
1405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 999              		.loc 1 1405 0
 1000 007a 1023     		movs	r3, #16
 1001 007c C4F88830 		str	r3, [r4, #136]
1407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1002              		.loc 1 1407 0
 1003 0080 0023     		movs	r3, #0
 1004 0082 84F87C30 		strb	r3, [r4, #124]
1410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1005              		.loc 1 1410 0
 1006 0086 2023     		movs	r3, #32
 1007 0088 C4F88030 		str	r3, [r4, #128]
1412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 1008              		.loc 1 1412 0
 1009 008c 0120     		movs	r0, #1
 1010 008e 00E0     		b	.L83
 1011              	.LVL72:
 1012              	.L85:
1428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1013              		.loc 1 1428 0
 1014 0090 0220     		movs	r0, #2
 1015              	.LVL73:
 1016              	.L83:
1430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1017              		.loc 1 1430 0
 1018 0092 10BD     		pop	{r4, pc}
 1019              	.LVL74:
 1020              	.L86:
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 1021              		.loc 1 1375 0
 1022 0094 0120     		movs	r0, #1
 1023              	.LVL75:
 1024 0096 FCE7     		b	.L83
 1025              	.LVL76:
 1026              	.L87:
 1027 0098 0120     		movs	r0, #1
 1028              	.LVL77:
 1029 009a FAE7     		b	.L83
 1030              	.LVL78:
 1031              	.L88:
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1032              		.loc 1 1378 0
 1033 009c 0220     		movs	r0, #2
 1034              	.LVL79:
 1035 009e F8E7     		b	.L83
 1036              	.L92:
 1037              		.align	2
 1038              	.L91:
 1039 00a0 00000000 		.word	UART_DMATransmitCplt
 1040 00a4 00000000 		.word	UART_DMATxHalfCplt
ARM GAS  /tmp/ccnYk2xI.s 			page 88


 1041 00a8 00000000 		.word	UART_DMAError
 1042              		.cfi_endproc
 1043              	.LFE143:
 1045              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1046              		.align	1
 1047              		.global	HAL_UART_Receive_DMA
 1048              		.syntax unified
 1049              		.thumb
 1050              		.thumb_func
 1051              		.fpu fpv4-sp-d16
 1053              	HAL_UART_Receive_DMA:
 1054              	.LFB144:
1445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 1055              		.loc 1 1445 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 0
 1058              		@ frame_needed = 0, uses_anonymous_args = 0
 1059              	.LVL80:
 1060 0000 10B5     		push	{r4, lr}
 1061              	.LCFI3:
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 4, -8
 1064              		.cfi_offset 14, -4
1447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1065              		.loc 1 1447 0
 1066 0002 D0F88440 		ldr	r4, [r0, #132]
 1067 0006 202C     		cmp	r4, #32
 1068 0008 47D1     		bne	.L96
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1069              		.loc 1 1449 0
 1070 000a 0029     		cmp	r1, #0
 1071 000c 47D0     		beq	.L97
1449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1072              		.loc 1 1449 0 is_stmt 0 discriminator 1
 1073 000e 002A     		cmp	r2, #0
 1074 0010 47D0     		beq	.L98
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1075              		.loc 1 1454 0 is_stmt 1
 1076 0012 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1077 0016 012B     		cmp	r3, #1
 1078 0018 45D0     		beq	.L99
 1079 001a 1346     		mov	r3, r2
 1080 001c 0446     		mov	r4, r0
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1081              		.loc 1 1454 0 is_stmt 0 discriminator 2
 1082 001e 0122     		movs	r2, #1
 1083              	.LVL81:
 1084 0020 80F87C20 		strb	r2, [r0, #124]
1456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1085              		.loc 1 1456 0 is_stmt 1 discriminator 2
 1086 0024 8165     		str	r1, [r0, #88]
1457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1087              		.loc 1 1457 0 discriminator 2
 1088 0026 A0F85C30 		strh	r3, [r0, #92]	@ movhi
1459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1089              		.loc 1 1459 0 discriminator 2
 1090 002a 0022     		movs	r2, #0
ARM GAS  /tmp/ccnYk2xI.s 			page 89


 1091 002c C0F88820 		str	r2, [r0, #136]
1460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1092              		.loc 1 1460 0 discriminator 2
 1093 0030 2222     		movs	r2, #34
 1094 0032 C0F88420 		str	r2, [r0, #132]
1462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1095              		.loc 1 1462 0 discriminator 2
 1096 0036 826F     		ldr	r2, [r0, #120]
 1097 0038 8AB1     		cbz	r2, .L95
1465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1098              		.loc 1 1465 0
 1099 003a 1C49     		ldr	r1, .L102
 1100              	.LVL82:
 1101 003c D162     		str	r1, [r2, #44]
 1102              	.LVL83:
1468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1103              		.loc 1 1468 0
 1104 003e 826F     		ldr	r2, [r0, #120]
 1105 0040 1B49     		ldr	r1, .L102+4
 1106 0042 1163     		str	r1, [r2, #48]
1471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1107              		.loc 1 1471 0
 1108 0044 826F     		ldr	r2, [r0, #120]
 1109 0046 1B49     		ldr	r1, .L102+8
 1110 0048 5163     		str	r1, [r2, #52]
1474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1111              		.loc 1 1474 0
 1112 004a 826F     		ldr	r2, [r0, #120]
 1113 004c 0021     		movs	r1, #0
 1114 004e 9163     		str	r1, [r2, #56]
1477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1115              		.loc 1 1477 0
 1116 0050 0168     		ldr	r1, [r0]
 1117 0052 826D     		ldr	r2, [r0, #88]
 1118 0054 2431     		adds	r1, r1, #36
 1119 0056 806F     		ldr	r0, [r0, #120]
 1120              	.LVL84:
 1121 0058 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1122              	.LVL85:
 1123 005c 90B9     		cbnz	r0, .L101
 1124              	.L95:
1490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1125              		.loc 1 1490 0
 1126 005e 0020     		movs	r0, #0
 1127 0060 84F87C00 		strb	r0, [r4, #124]
1493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1128              		.loc 1 1493 0
 1129 0064 2268     		ldr	r2, [r4]
 1130 0066 1368     		ldr	r3, [r2]
 1131 0068 43F48073 		orr	r3, r3, #256
 1132 006c 1360     		str	r3, [r2]
1496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1133              		.loc 1 1496 0
 1134 006e 2268     		ldr	r2, [r4]
 1135 0070 9368     		ldr	r3, [r2, #8]
 1136 0072 43F00103 		orr	r3, r3, #1
 1137 0076 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccnYk2xI.s 			page 90


1500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1138              		.loc 1 1500 0
 1139 0078 2268     		ldr	r2, [r4]
 1140 007a 9368     		ldr	r3, [r2, #8]
 1141 007c 43F04003 		orr	r3, r3, #64
 1142 0080 9360     		str	r3, [r2, #8]
1502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1143              		.loc 1 1502 0
 1144 0082 0BE0     		b	.L94
 1145              	.L101:
1480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1146              		.loc 1 1480 0
 1147 0084 1023     		movs	r3, #16
 1148 0086 C4F88830 		str	r3, [r4, #136]
1482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1149              		.loc 1 1482 0
 1150 008a 0023     		movs	r3, #0
 1151 008c 84F87C30 		strb	r3, [r4, #124]
1485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1152              		.loc 1 1485 0
 1153 0090 2023     		movs	r3, #32
 1154 0092 C4F88030 		str	r3, [r4, #128]
1487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 1155              		.loc 1 1487 0
 1156 0096 0120     		movs	r0, #1
 1157 0098 00E0     		b	.L94
 1158              	.LVL86:
 1159              	.L96:
1506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1160              		.loc 1 1506 0
 1161 009a 0220     		movs	r0, #2
 1162              	.LVL87:
 1163              	.L94:
1508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1164              		.loc 1 1508 0
 1165 009c 10BD     		pop	{r4, pc}
 1166              	.LVL88:
 1167              	.L97:
1451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 1168              		.loc 1 1451 0
 1169 009e 0120     		movs	r0, #1
 1170              	.LVL89:
 1171 00a0 FCE7     		b	.L94
 1172              	.LVL90:
 1173              	.L98:
 1174 00a2 0120     		movs	r0, #1
 1175              	.LVL91:
 1176 00a4 FAE7     		b	.L94
 1177              	.LVL92:
 1178              	.L99:
1454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1179              		.loc 1 1454 0
 1180 00a6 0220     		movs	r0, #2
 1181              	.LVL93:
 1182 00a8 F8E7     		b	.L94
 1183              	.L103:
 1184 00aa 00BF     		.align	2
ARM GAS  /tmp/ccnYk2xI.s 			page 91


 1185              	.L102:
 1186 00ac 00000000 		.word	UART_DMAReceiveCplt
 1187 00b0 00000000 		.word	UART_DMARxHalfCplt
 1188 00b4 00000000 		.word	UART_DMAError
 1189              		.cfi_endproc
 1190              	.LFE144:
 1192              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1193              		.align	1
 1194              		.global	HAL_UART_DMAPause
 1195              		.syntax unified
 1196              		.thumb
 1197              		.thumb_func
 1198              		.fpu fpv4-sp-d16
 1200              	HAL_UART_DMAPause:
 1201              	.LFB145:
1516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1202              		.loc 1 1516 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 0
 1205              		@ frame_needed = 0, uses_anonymous_args = 0
 1206              		@ link register save eliminated.
 1207              	.LVL94:
 1208 0000 10B4     		push	{r4}
 1209              	.LCFI4:
 1210              		.cfi_def_cfa_offset 4
 1211              		.cfi_offset 4, -4
1517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1212              		.loc 1 1517 0
 1213 0002 D0F88040 		ldr	r4, [r0, #128]
 1214              	.LVL95:
1518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1215              		.loc 1 1518 0
 1216 0006 D0F88410 		ldr	r1, [r0, #132]
 1217              	.LVL96:
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1218              		.loc 1 1520 0
 1219 000a 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1220 000e 012B     		cmp	r3, #1
 1221 0010 2BD0     		beq	.L108
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1222              		.loc 1 1520 0 is_stmt 0 discriminator 2
 1223 0012 0123     		movs	r3, #1
 1224 0014 80F87C30 		strb	r3, [r0, #124]
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1225              		.loc 1 1522 0 is_stmt 1 discriminator 2
 1226 0018 0368     		ldr	r3, [r0]
 1227 001a 9A68     		ldr	r2, [r3, #8]
 1228 001c 12F0800F 		tst	r2, #128
 1229 0020 01D0     		beq	.L106
1522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1230              		.loc 1 1522 0 is_stmt 0 discriminator 1
 1231 0022 212C     		cmp	r4, #33
 1232 0024 0DD0     		beq	.L110
 1233              	.L106:
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1234              		.loc 1 1528 0 is_stmt 1
 1235 0026 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccnYk2xI.s 			page 92


 1236 0028 9A68     		ldr	r2, [r3, #8]
 1237 002a 12F0400F 		tst	r2, #64
 1238 002e 01D0     		beq	.L107
1528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1239              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1240 0030 2229     		cmp	r1, #34
 1241 0032 0BD0     		beq	.L111
 1242              	.L107:
1539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1243              		.loc 1 1539 0 is_stmt 1
 1244 0034 0023     		movs	r3, #0
 1245 0036 80F87C30 		strb	r3, [r0, #124]
1541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1246              		.loc 1 1541 0
 1247 003a 1846     		mov	r0, r3
 1248              	.LVL97:
 1249              	.L105:
1542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1250              		.loc 1 1542 0
 1251 003c 5DF8044B 		ldr	r4, [sp], #4
 1252              	.LCFI5:
 1253              		.cfi_remember_state
 1254              		.cfi_restore 4
 1255              		.cfi_def_cfa_offset 0
 1256              	.LVL98:
 1257 0040 7047     		bx	lr
 1258              	.LVL99:
 1259              	.L110:
 1260              	.LCFI6:
 1261              		.cfi_restore_state
1526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1262              		.loc 1 1526 0
 1263 0042 9A68     		ldr	r2, [r3, #8]
 1264 0044 22F08002 		bic	r2, r2, #128
 1265 0048 9A60     		str	r2, [r3, #8]
 1266 004a ECE7     		b	.L106
 1267              	.L111:
1532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1268              		.loc 1 1532 0
 1269 004c 1A68     		ldr	r2, [r3]
 1270 004e 22F48072 		bic	r2, r2, #256
 1271 0052 1A60     		str	r2, [r3]
1533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1272              		.loc 1 1533 0
 1273 0054 0268     		ldr	r2, [r0]
 1274 0056 9368     		ldr	r3, [r2, #8]
 1275 0058 23F00103 		bic	r3, r3, #1
 1276 005c 9360     		str	r3, [r2, #8]
1536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1277              		.loc 1 1536 0
 1278 005e 0268     		ldr	r2, [r0]
 1279 0060 9368     		ldr	r3, [r2, #8]
 1280 0062 23F04003 		bic	r3, r3, #64
 1281 0066 9360     		str	r3, [r2, #8]
 1282 0068 E4E7     		b	.L107
 1283              	.L108:
1520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 93


 1284              		.loc 1 1520 0
 1285 006a 0220     		movs	r0, #2
 1286              	.LVL100:
 1287 006c E6E7     		b	.L105
 1288              		.cfi_endproc
 1289              	.LFE145:
 1291              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1292              		.align	1
 1293              		.global	HAL_UART_DMAResume
 1294              		.syntax unified
 1295              		.thumb
 1296              		.thumb_func
 1297              		.fpu fpv4-sp-d16
 1299              	HAL_UART_DMAResume:
 1300              	.LFB146:
1550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1301              		.loc 1 1550 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305              		@ link register save eliminated.
 1306              	.LVL101:
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1307              		.loc 1 1551 0
 1308 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 1309 0004 012B     		cmp	r3, #1
 1310 0006 28D0     		beq	.L116
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1311              		.loc 1 1551 0 is_stmt 0 discriminator 2
 1312 0008 0123     		movs	r3, #1
 1313 000a 80F87C30 		strb	r3, [r0, #124]
1553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1314              		.loc 1 1553 0 is_stmt 1 discriminator 2
 1315 000e D0F88030 		ldr	r3, [r0, #128]
 1316 0012 212B     		cmp	r3, #33
 1317 0014 08D0     		beq	.L117
 1318              	.L114:
1558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1319              		.loc 1 1558 0
 1320 0016 D0F88430 		ldr	r3, [r0, #132]
 1321 001a 222B     		cmp	r3, #34
 1322 001c 0AD0     		beq	.L118
 1323              	.L115:
1571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1324              		.loc 1 1571 0
 1325 001e 0023     		movs	r3, #0
 1326 0020 80F87C30 		strb	r3, [r0, #124]
1573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1327              		.loc 1 1573 0
 1328 0024 1846     		mov	r0, r3
 1329              	.LVL102:
 1330 0026 7047     		bx	lr
 1331              	.LVL103:
 1332              	.L117:
1556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1333              		.loc 1 1556 0
 1334 0028 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccnYk2xI.s 			page 94


 1335 002a 9368     		ldr	r3, [r2, #8]
 1336 002c 43F08003 		orr	r3, r3, #128
 1337 0030 9360     		str	r3, [r2, #8]
 1338 0032 F0E7     		b	.L114
 1339              	.L118:
1561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1340              		.loc 1 1561 0
 1341 0034 0368     		ldr	r3, [r0]
 1342 0036 0822     		movs	r2, #8
 1343 0038 1A62     		str	r2, [r3, #32]
1564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1344              		.loc 1 1564 0
 1345 003a 0268     		ldr	r2, [r0]
 1346 003c 1368     		ldr	r3, [r2]
 1347 003e 43F48073 		orr	r3, r3, #256
 1348 0042 1360     		str	r3, [r2]
1565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1349              		.loc 1 1565 0
 1350 0044 0268     		ldr	r2, [r0]
 1351 0046 9368     		ldr	r3, [r2, #8]
 1352 0048 43F00103 		orr	r3, r3, #1
 1353 004c 9360     		str	r3, [r2, #8]
1568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1354              		.loc 1 1568 0
 1355 004e 0268     		ldr	r2, [r0]
 1356 0050 9368     		ldr	r3, [r2, #8]
 1357 0052 43F04003 		orr	r3, r3, #64
 1358 0056 9360     		str	r3, [r2, #8]
 1359 0058 E1E7     		b	.L115
 1360              	.L116:
1551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1361              		.loc 1 1551 0
 1362 005a 0220     		movs	r0, #2
 1363              	.LVL104:
1574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1364              		.loc 1 1574 0
 1365 005c 7047     		bx	lr
 1366              		.cfi_endproc
 1367              	.LFE146:
 1369              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1370              		.align	1
 1371              		.global	HAL_UART_DMAStop
 1372              		.syntax unified
 1373              		.thumb
 1374              		.thumb_func
 1375              		.fpu fpv4-sp-d16
 1377              	HAL_UART_DMAStop:
 1378              	.LFB147:
1582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1379              		.loc 1 1582 0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 0, uses_anonymous_args = 0
 1383              	.LVL105:
 1384 0000 38B5     		push	{r3, r4, r5, lr}
 1385              	.LCFI7:
 1386              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccnYk2xI.s 			page 95


 1387              		.cfi_offset 3, -16
 1388              		.cfi_offset 4, -12
 1389              		.cfi_offset 5, -8
 1390              		.cfi_offset 14, -4
 1391 0002 0446     		mov	r4, r0
1590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1392              		.loc 1 1590 0
 1393 0004 D0F88010 		ldr	r1, [r0, #128]
 1394              	.LVL106:
1591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1395              		.loc 1 1591 0
 1396 0008 D0F88450 		ldr	r5, [r0, #132]
 1397              	.LVL107:
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1398              		.loc 1 1594 0
 1399 000c 0368     		ldr	r3, [r0]
 1400 000e 9A68     		ldr	r2, [r3, #8]
 1401 0010 12F0800F 		tst	r2, #128
 1402 0014 01D0     		beq	.L120
1594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1403              		.loc 1 1594 0 is_stmt 0 discriminator 1
 1404 0016 2129     		cmp	r1, #33
 1405 0018 08D0     		beq	.L127
 1406              	.LVL108:
 1407              	.L120:
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1408              		.loc 1 1618 0 is_stmt 1
 1409 001a 2368     		ldr	r3, [r4]
 1410 001c 9A68     		ldr	r2, [r3, #8]
 1411 001e 12F0400F 		tst	r2, #64
 1412 0022 32D0     		beq	.L124
1618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1413              		.loc 1 1618 0 is_stmt 0 discriminator 1
 1414 0024 222D     		cmp	r5, #34
 1415 0026 18D0     		beq	.L128
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1416              		.loc 1 1641 0 is_stmt 1
 1417 0028 0020     		movs	r0, #0
 1418 002a 2FE0     		b	.L122
 1419              	.LVL109:
 1420              	.L127:
1597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1421              		.loc 1 1597 0
 1422 002c 9A68     		ldr	r2, [r3, #8]
 1423 002e 22F08002 		bic	r2, r2, #128
 1424 0032 9A60     		str	r2, [r3, #8]
1600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1425              		.loc 1 1600 0
 1426 0034 406F     		ldr	r0, [r0, #116]
 1427              	.LVL110:
 1428 0036 10B1     		cbz	r0, .L121
1602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1429              		.loc 1 1602 0
 1430 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1431              	.LVL111:
 1432 003c 18B9     		cbnz	r0, .L129
 1433              	.L121:
ARM GAS  /tmp/ccnYk2xI.s 			page 96


1614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1434              		.loc 1 1614 0
 1435 003e 2046     		mov	r0, r4
 1436 0040 FFF7FEFF 		bl	UART_EndTxTransfer
 1437              	.LVL112:
 1438 0044 E9E7     		b	.L120
 1439              	.L129:
1604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1440              		.loc 1 1604 0
 1441 0046 606F     		ldr	r0, [r4, #116]
 1442 0048 FFF7FEFF 		bl	HAL_DMA_GetError
 1443              	.LVL113:
 1444 004c 2028     		cmp	r0, #32
 1445 004e F6D1     		bne	.L121
1607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1446              		.loc 1 1607 0
 1447 0050 1023     		movs	r3, #16
 1448 0052 C4F88830 		str	r3, [r4, #136]
1609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1449              		.loc 1 1609 0
 1450 0056 0320     		movs	r0, #3
 1451 0058 18E0     		b	.L122
 1452              	.L128:
1621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1453              		.loc 1 1621 0
 1454 005a 9A68     		ldr	r2, [r3, #8]
 1455 005c 22F04002 		bic	r2, r2, #64
 1456 0060 9A60     		str	r2, [r3, #8]
1624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1457              		.loc 1 1624 0
 1458 0062 A06F     		ldr	r0, [r4, #120]
 1459 0064 10B1     		cbz	r0, .L123
1626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1460              		.loc 1 1626 0
 1461 0066 FFF7FEFF 		bl	HAL_DMA_Abort
 1462              	.LVL114:
 1463 006a 20B9     		cbnz	r0, .L130
 1464              	.L123:
1638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1465              		.loc 1 1638 0
 1466 006c 2046     		mov	r0, r4
 1467 006e FFF7FEFF 		bl	UART_EndRxTransfer
 1468              	.LVL115:
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1469              		.loc 1 1641 0
 1470 0072 0020     		movs	r0, #0
 1471 0074 0AE0     		b	.L122
 1472              	.L130:
1628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1473              		.loc 1 1628 0
 1474 0076 A06F     		ldr	r0, [r4, #120]
 1475 0078 FFF7FEFF 		bl	HAL_DMA_GetError
 1476              	.LVL116:
 1477 007c 2028     		cmp	r0, #32
 1478 007e F5D1     		bne	.L123
1631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1479              		.loc 1 1631 0
ARM GAS  /tmp/ccnYk2xI.s 			page 97


 1480 0080 1023     		movs	r3, #16
 1481 0082 C4F88830 		str	r3, [r4, #136]
1633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1482              		.loc 1 1633 0
 1483 0086 0320     		movs	r0, #3
 1484 0088 00E0     		b	.L122
 1485              	.L124:
1641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1486              		.loc 1 1641 0
 1487 008a 0020     		movs	r0, #0
 1488              	.L122:
1642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1489              		.loc 1 1642 0
 1490 008c 38BD     		pop	{r3, r4, r5, pc}
 1491              		.cfi_endproc
 1492              	.LFE147:
 1494              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1495              		.align	1
 1496              		.global	HAL_UART_Abort
 1497              		.syntax unified
 1498              		.thumb
 1499              		.thumb_func
 1500              		.fpu fpv4-sp-d16
 1502              	HAL_UART_Abort:
 1503              	.LFB148:
1657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
 1504              		.loc 1 1657 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508              	.LVL117:
 1509 0000 10B5     		push	{r4, lr}
 1510              	.LCFI8:
 1511              		.cfi_def_cfa_offset 8
 1512              		.cfi_offset 4, -8
 1513              		.cfi_offset 14, -4
 1514 0002 0446     		mov	r4, r0
1659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                    USART_CR1_TCIE));
 1515              		.loc 1 1659 0
 1516 0004 0268     		ldr	r2, [r0]
 1517 0006 1368     		ldr	r3, [r2]
 1518 0008 23F4F073 		bic	r3, r3, #480
 1519 000c 1360     		str	r3, [r2]
1661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1520              		.loc 1 1661 0
 1521 000e 0268     		ldr	r2, [r0]
 1522 0010 9368     		ldr	r3, [r2, #8]
 1523 0012 23F08453 		bic	r3, r3, #276824064
 1524 0016 23F00103 		bic	r3, r3, #1
 1525 001a 9360     		str	r3, [r2, #8]
1664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1526              		.loc 1 1664 0
 1527 001c 0368     		ldr	r3, [r0]
 1528 001e 9A68     		ldr	r2, [r3, #8]
 1529 0020 12F0800F 		tst	r2, #128
 1530 0024 0BD0     		beq	.L132
1666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 98


 1531              		.loc 1 1666 0
 1532 0026 9A68     		ldr	r2, [r3, #8]
 1533 0028 22F08002 		bic	r2, r2, #128
 1534 002c 9A60     		str	r2, [r3, #8]
1669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1535              		.loc 1 1669 0
 1536 002e 436F     		ldr	r3, [r0, #116]
 1537 0030 2BB1     		cbz	r3, .L132
1673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1538              		.loc 1 1673 0
 1539 0032 0022     		movs	r2, #0
 1540 0034 9A63     		str	r2, [r3, #56]
1675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1541              		.loc 1 1675 0
 1542 0036 406F     		ldr	r0, [r0, #116]
 1543              	.LVL118:
 1544 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1545              	.LVL119:
 1546 003c 50BB     		cbnz	r0, .L137
 1547              	.L132:
1689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1548              		.loc 1 1689 0
 1549 003e 2368     		ldr	r3, [r4]
 1550 0040 9A68     		ldr	r2, [r3, #8]
 1551 0042 12F0400F 		tst	r2, #64
 1552 0046 0BD0     		beq	.L134
1691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1553              		.loc 1 1691 0
 1554 0048 9A68     		ldr	r2, [r3, #8]
 1555 004a 22F04002 		bic	r2, r2, #64
 1556 004e 9A60     		str	r2, [r3, #8]
1694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1557              		.loc 1 1694 0
 1558 0050 A36F     		ldr	r3, [r4, #120]
 1559 0052 2BB1     		cbz	r3, .L134
1698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1560              		.loc 1 1698 0
 1561 0054 0022     		movs	r2, #0
 1562 0056 9A63     		str	r2, [r3, #56]
1700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1563              		.loc 1 1700 0
 1564 0058 A06F     		ldr	r0, [r4, #120]
 1565 005a FFF7FEFF 		bl	HAL_DMA_Abort
 1566              	.LVL120:
 1567 005e 18BB     		cbnz	r0, .L138
 1568              	.L134:
1714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1569              		.loc 1 1714 0
 1570 0060 0023     		movs	r3, #0
 1571 0062 A4F85630 		strh	r3, [r4, #86]	@ movhi
1715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1572              		.loc 1 1715 0
 1573 0066 A4F85E30 		strh	r3, [r4, #94]	@ movhi
1718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1574              		.loc 1 1718 0
 1575 006a 2368     		ldr	r3, [r4]
 1576 006c 0F22     		movs	r2, #15
ARM GAS  /tmp/ccnYk2xI.s 			page 99


 1577 006e 1A62     		str	r2, [r3, #32]
1721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1578              		.loc 1 1721 0
 1579 0070 636E     		ldr	r3, [r4, #100]
 1580 0072 B3F1005F 		cmp	r3, #536870912
 1581 0076 21D0     		beq	.L139
 1582              	.L135:
1727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1583              		.loc 1 1727 0
 1584 0078 2268     		ldr	r2, [r4]
 1585 007a 9369     		ldr	r3, [r2, #24]
 1586 007c 43F00803 		orr	r3, r3, #8
 1587 0080 9361     		str	r3, [r2, #24]
1730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1588              		.loc 1 1730 0
 1589 0082 2023     		movs	r3, #32
 1590 0084 C4F88030 		str	r3, [r4, #128]
1731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1591              		.loc 1 1731 0
 1592 0088 C4F88430 		str	r3, [r4, #132]
1733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1593              		.loc 1 1733 0
 1594 008c 0020     		movs	r0, #0
 1595 008e C4F88800 		str	r0, [r4, #136]
 1596              	.L133:
1736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1597              		.loc 1 1736 0
 1598 0092 10BD     		pop	{r4, pc}
 1599              	.LVL121:
 1600              	.L137:
1677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1601              		.loc 1 1677 0
 1602 0094 606F     		ldr	r0, [r4, #116]
 1603 0096 FFF7FEFF 		bl	HAL_DMA_GetError
 1604              	.LVL122:
 1605 009a 2028     		cmp	r0, #32
 1606 009c CFD1     		bne	.L132
1680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1607              		.loc 1 1680 0
 1608 009e 1023     		movs	r3, #16
 1609 00a0 C4F88830 		str	r3, [r4, #136]
1682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1610              		.loc 1 1682 0
 1611 00a4 0320     		movs	r0, #3
 1612 00a6 F4E7     		b	.L133
 1613              	.L138:
1702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1614              		.loc 1 1702 0
 1615 00a8 A06F     		ldr	r0, [r4, #120]
 1616 00aa FFF7FEFF 		bl	HAL_DMA_GetError
 1617              	.LVL123:
 1618 00ae 2028     		cmp	r0, #32
 1619 00b0 D6D1     		bne	.L134
1705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1620              		.loc 1 1705 0
 1621 00b2 1023     		movs	r3, #16
 1622 00b4 C4F88830 		str	r3, [r4, #136]
ARM GAS  /tmp/ccnYk2xI.s 			page 100


1707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1623              		.loc 1 1707 0
 1624 00b8 0320     		movs	r0, #3
 1625 00ba EAE7     		b	.L133
 1626              	.L139:
1723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1627              		.loc 1 1723 0
 1628 00bc 2268     		ldr	r2, [r4]
 1629 00be 9369     		ldr	r3, [r2, #24]
 1630 00c0 43F01003 		orr	r3, r3, #16
 1631 00c4 9361     		str	r3, [r2, #24]
 1632 00c6 D7E7     		b	.L135
 1633              		.cfi_endproc
 1634              	.LFE148:
 1636              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1637              		.align	1
 1638              		.global	HAL_UART_AbortTransmit
 1639              		.syntax unified
 1640              		.thumb
 1641              		.thumb_func
 1642              		.fpu fpv4-sp-d16
 1644              	HAL_UART_AbortTransmit:
 1645              	.LFB149:
1751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
 1646              		.loc 1 1751 0
 1647              		.cfi_startproc
 1648              		@ args = 0, pretend = 0, frame = 0
 1649              		@ frame_needed = 0, uses_anonymous_args = 0
 1650              	.LVL124:
 1651 0000 10B5     		push	{r4, lr}
 1652              	.LCFI9:
 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 4, -8
 1655              		.cfi_offset 14, -4
 1656 0002 0446     		mov	r4, r0
1753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 1657              		.loc 1 1753 0
 1658 0004 0268     		ldr	r2, [r0]
 1659 0006 1368     		ldr	r3, [r2]
 1660 0008 23F0C003 		bic	r3, r3, #192
 1661 000c 1360     		str	r3, [r2]
1754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1662              		.loc 1 1754 0
 1663 000e 0268     		ldr	r2, [r0]
 1664 0010 9368     		ldr	r3, [r2, #8]
 1665 0012 23F40003 		bic	r3, r3, #8388608
 1666 0016 9360     		str	r3, [r2, #8]
1757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1667              		.loc 1 1757 0
 1668 0018 0368     		ldr	r3, [r0]
 1669 001a 9A68     		ldr	r2, [r3, #8]
 1670 001c 12F0800F 		tst	r2, #128
 1671 0020 0BD0     		beq	.L141
1759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1672              		.loc 1 1759 0
 1673 0022 9A68     		ldr	r2, [r3, #8]
 1674 0024 22F08002 		bic	r2, r2, #128
ARM GAS  /tmp/ccnYk2xI.s 			page 101


 1675 0028 9A60     		str	r2, [r3, #8]
1762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1676              		.loc 1 1762 0
 1677 002a 436F     		ldr	r3, [r0, #116]
 1678 002c 2BB1     		cbz	r3, .L141
1766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1679              		.loc 1 1766 0
 1680 002e 0022     		movs	r2, #0
 1681 0030 9A63     		str	r2, [r3, #56]
1768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1682              		.loc 1 1768 0
 1683 0032 406F     		ldr	r0, [r0, #116]
 1684              	.LVL125:
 1685 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1686              	.LVL126:
 1687 0038 58B9     		cbnz	r0, .L145
 1688              	.L141:
1782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1689              		.loc 1 1782 0
 1690 003a 0023     		movs	r3, #0
 1691 003c A4F85630 		strh	r3, [r4, #86]	@ movhi
1785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1692              		.loc 1 1785 0
 1693 0040 636E     		ldr	r3, [r4, #100]
 1694 0042 B3F1005F 		cmp	r3, #536870912
 1695 0046 0ED0     		beq	.L146
 1696              	.L143:
1791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1697              		.loc 1 1791 0
 1698 0048 2023     		movs	r3, #32
 1699 004a C4F88030 		str	r3, [r4, #128]
1793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1700              		.loc 1 1793 0
 1701 004e 0020     		movs	r0, #0
 1702              	.L142:
1794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1703              		.loc 1 1794 0
 1704 0050 10BD     		pop	{r4, pc}
 1705              	.LVL127:
 1706              	.L145:
1770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1707              		.loc 1 1770 0
 1708 0052 606F     		ldr	r0, [r4, #116]
 1709 0054 FFF7FEFF 		bl	HAL_DMA_GetError
 1710              	.LVL128:
 1711 0058 2028     		cmp	r0, #32
 1712 005a EED1     		bne	.L141
1773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1713              		.loc 1 1773 0
 1714 005c 1023     		movs	r3, #16
 1715 005e C4F88830 		str	r3, [r4, #136]
1775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1716              		.loc 1 1775 0
 1717 0062 0320     		movs	r0, #3
 1718 0064 F4E7     		b	.L142
 1719              	.L146:
1787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccnYk2xI.s 			page 102


 1720              		.loc 1 1787 0
 1721 0066 2268     		ldr	r2, [r4]
 1722 0068 9369     		ldr	r3, [r2, #24]
 1723 006a 43F01003 		orr	r3, r3, #16
 1724 006e 9361     		str	r3, [r2, #24]
 1725 0070 EAE7     		b	.L143
 1726              		.cfi_endproc
 1727              	.LFE149:
 1729              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1730              		.align	1
 1731              		.global	HAL_UART_AbortReceive
 1732              		.syntax unified
 1733              		.thumb
 1734              		.thumb_func
 1735              		.fpu fpv4-sp-d16
 1737              	HAL_UART_AbortReceive:
 1738              	.LFB150:
1809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
 1739              		.loc 1 1809 0
 1740              		.cfi_startproc
 1741              		@ args = 0, pretend = 0, frame = 0
 1742              		@ frame_needed = 0, uses_anonymous_args = 0
 1743              	.LVL129:
 1744 0000 10B5     		push	{r4, lr}
 1745              	.LCFI10:
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 4, -8
 1748              		.cfi_offset 14, -4
 1749 0002 0446     		mov	r4, r0
1811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
 1750              		.loc 1 1811 0
 1751 0004 0268     		ldr	r2, [r0]
 1752 0006 1368     		ldr	r3, [r2]
 1753 0008 23F49073 		bic	r3, r3, #288
 1754 000c 1360     		str	r3, [r2]
1812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1755              		.loc 1 1812 0
 1756 000e 0268     		ldr	r2, [r0]
 1757 0010 9368     		ldr	r3, [r2, #8]
 1758 0012 23F08053 		bic	r3, r3, #268435456
 1759 0016 23F00103 		bic	r3, r3, #1
 1760 001a 9360     		str	r3, [r2, #8]
1815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1761              		.loc 1 1815 0
 1762 001c 0368     		ldr	r3, [r0]
 1763 001e 9A68     		ldr	r2, [r3, #8]
 1764 0020 12F0400F 		tst	r2, #64
 1765 0024 0BD0     		beq	.L148
1817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1766              		.loc 1 1817 0
 1767 0026 9A68     		ldr	r2, [r3, #8]
 1768 0028 22F04002 		bic	r2, r2, #64
 1769 002c 9A60     		str	r2, [r3, #8]
1820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 1770              		.loc 1 1820 0
 1771 002e 836F     		ldr	r3, [r0, #120]
 1772 0030 2BB1     		cbz	r3, .L148
ARM GAS  /tmp/ccnYk2xI.s 			page 103


1824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1773              		.loc 1 1824 0
 1774 0032 0022     		movs	r2, #0
 1775 0034 9A63     		str	r2, [r3, #56]
1826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 1776              		.loc 1 1826 0
 1777 0036 806F     		ldr	r0, [r0, #120]
 1778              	.LVL130:
 1779 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1780              	.LVL131:
 1781 003c 70B9     		cbnz	r0, .L151
 1782              	.L148:
1840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1783              		.loc 1 1840 0
 1784 003e 0020     		movs	r0, #0
 1785 0040 A4F85E00 		strh	r0, [r4, #94]	@ movhi
1843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1786              		.loc 1 1843 0
 1787 0044 2368     		ldr	r3, [r4]
 1788 0046 0F22     		movs	r2, #15
 1789 0048 1A62     		str	r2, [r3, #32]
1846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1790              		.loc 1 1846 0
 1791 004a 2268     		ldr	r2, [r4]
 1792 004c 9369     		ldr	r3, [r2, #24]
 1793 004e 43F00803 		orr	r3, r3, #8
 1794 0052 9361     		str	r3, [r2, #24]
1849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1795              		.loc 1 1849 0
 1796 0054 2023     		movs	r3, #32
 1797 0056 C4F88430 		str	r3, [r4, #132]
 1798              	.L149:
1852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1799              		.loc 1 1852 0
 1800 005a 10BD     		pop	{r4, pc}
 1801              	.LVL132:
 1802              	.L151:
1828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 1803              		.loc 1 1828 0
 1804 005c A06F     		ldr	r0, [r4, #120]
 1805 005e FFF7FEFF 		bl	HAL_DMA_GetError
 1806              	.LVL133:
 1807 0062 2028     		cmp	r0, #32
 1808 0064 EBD1     		bne	.L148
1831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1809              		.loc 1 1831 0
 1810 0066 1023     		movs	r3, #16
 1811 0068 C4F88830 		str	r3, [r4, #136]
1833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 1812              		.loc 1 1833 0
 1813 006c 0320     		movs	r0, #3
 1814 006e F4E7     		b	.L149
 1815              		.cfi_endproc
 1816              	.LFE150:
 1818              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1819              		.align	1
 1820              		.weak	HAL_UART_TxCpltCallback
ARM GAS  /tmp/ccnYk2xI.s 			page 104


 1821              		.syntax unified
 1822              		.thumb
 1823              		.thumb_func
 1824              		.fpu fpv4-sp-d16
 1826              	HAL_UART_TxCpltCallback:
 1827              	.LFB155:
2420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1828              		.loc 1 2420 0
 1829              		.cfi_startproc
 1830              		@ args = 0, pretend = 0, frame = 0
 1831              		@ frame_needed = 0, uses_anonymous_args = 0
 1832              		@ link register save eliminated.
 1833              	.LVL134:
2427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1834              		.loc 1 2427 0
 1835 0000 7047     		bx	lr
 1836              		.cfi_endproc
 1837              	.LFE155:
 1839              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1840              		.align	1
 1841              		.syntax unified
 1842              		.thumb
 1843              		.thumb_func
 1844              		.fpu fpv4-sp-d16
 1846              	UART_DMATransmitCplt:
 1847              	.LFB180:
3300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1848              		.loc 1 3300 0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 0
 1851              		@ frame_needed = 0, uses_anonymous_args = 0
 1852              	.LVL135:
 1853 0000 08B5     		push	{r3, lr}
 1854              	.LCFI11:
 1855              		.cfi_def_cfa_offset 8
 1856              		.cfi_offset 3, -8
 1857              		.cfi_offset 14, -4
3301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1858              		.loc 1 3301 0
 1859 0002 836A     		ldr	r3, [r0, #40]
 1860              	.LVL136:
3304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 1861              		.loc 1 3304 0
 1862 0004 0268     		ldr	r2, [r0]
 1863 0006 1268     		ldr	r2, [r2]
 1864 0008 12F0200F 		tst	r2, #32
 1865 000c 0DD1     		bne	.L154
3306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1866              		.loc 1 3306 0
 1867 000e 0022     		movs	r2, #0
 1868 0010 A3F85620 		strh	r2, [r3, #86]	@ movhi
3310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1869              		.loc 1 3310 0
 1870 0014 1968     		ldr	r1, [r3]
 1871 0016 8A68     		ldr	r2, [r1, #8]
 1872 0018 22F08002 		bic	r2, r2, #128
 1873 001c 8A60     		str	r2, [r1, #8]
ARM GAS  /tmp/ccnYk2xI.s 			page 105


3313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 1874              		.loc 1 3313 0
 1875 001e 1A68     		ldr	r2, [r3]
 1876 0020 1368     		ldr	r3, [r2]
 1877              	.LVL137:
 1878 0022 43F04003 		orr	r3, r3, #64
 1879 0026 1360     		str	r3, [r2]
 1880              	.LVL138:
 1881              	.L153:
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1882              		.loc 1 3326 0
 1883 0028 08BD     		pop	{r3, pc}
 1884              	.LVL139:
 1885              	.L154:
3323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1886              		.loc 1 3323 0
 1887 002a 1846     		mov	r0, r3
 1888              	.LVL140:
 1889 002c FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1890              	.LVL141:
3326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1891              		.loc 1 3326 0
 1892 0030 FAE7     		b	.L153
 1893              		.cfi_endproc
 1894              	.LFE180:
 1896              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1897              		.align	1
 1898              		.syntax unified
 1899              		.thumb
 1900              		.thumb_func
 1901              		.fpu fpv4-sp-d16
 1903              	UART_EndTransmit_IT:
 1904              	.LFB194:
3772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 1905              		.loc 1 3780 0
 1906              		.cfi_startproc
 1907              		@ args = 0, pretend = 0, frame = 0
 1908              		@ frame_needed = 0, uses_anonymous_args = 0
 1909              	.LVL142:
 1910 0000 08B5     		push	{r3, lr}
 1911              	.LCFI12:
 1912              		.cfi_def_cfa_offset 8
 1913              		.cfi_offset 3, -8
 1914              		.cfi_offset 14, -4
3781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1915              		.loc 1 3782 0
 1916 0002 0168     		ldr	r1, [r0]
 1917 0004 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccnYk2xI.s 			page 106


 1918 0006 22F04002 		bic	r2, r2, #64
 1919 000a 0A60     		str	r2, [r1]
3783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1920              		.loc 1 3785 0
 1921 000c 2022     		movs	r2, #32
 1922 000e C0F88020 		str	r2, [r0, #128]
3786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
 1923              		.loc 1 3788 0
 1924 0012 0022     		movs	r2, #0
 1925 0014 0267     		str	r2, [r0, #112]
3789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1926              		.loc 1 3795 0
 1927 0016 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1928              	.LVL143:
3796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 1929              		.loc 1 3797 0
 1930 001a 08BD     		pop	{r3, pc}
 1931              		.cfi_endproc
 1932              	.LFE194:
 1934              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1935              		.align	1
 1936              		.weak	HAL_UART_TxHalfCpltCallback
 1937              		.syntax unified
 1938              		.thumb
 1939              		.thumb_func
 1940              		.fpu fpv4-sp-d16
 1942              	HAL_UART_TxHalfCpltCallback:
 1943              	.LFB156:
2435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1944              		.loc 1 2435 0
 1945              		.cfi_startproc
 1946              		@ args = 0, pretend = 0, frame = 0
 1947              		@ frame_needed = 0, uses_anonymous_args = 0
 1948              		@ link register save eliminated.
 1949              	.LVL144:
2442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1950              		.loc 1 2442 0
 1951 0000 7047     		bx	lr
 1952              		.cfi_endproc
 1953              	.LFE156:
 1955              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1956              		.align	1
 1957              		.syntax unified
 1958              		.thumb
 1959              		.thumb_func
 1960              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccnYk2xI.s 			page 107


 1962              	UART_DMATxHalfCplt:
 1963              	.LFB181:
3334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1964              		.loc 1 3334 0
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 0
 1967              		@ frame_needed = 0, uses_anonymous_args = 0
 1968              	.LVL145:
 1969 0000 08B5     		push	{r3, lr}
 1970              	.LCFI13:
 1971              		.cfi_def_cfa_offset 8
 1972              		.cfi_offset 3, -8
 1973              		.cfi_offset 14, -4
 1974              	.LVL146:
3342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1975              		.loc 1 3342 0
 1976 0002 806A     		ldr	r0, [r0, #40]
 1977              	.LVL147:
 1978 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1979              	.LVL148:
3344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 1980              		.loc 1 3344 0
 1981 0008 08BD     		pop	{r3, pc}
 1982              		.cfi_endproc
 1983              	.LFE181:
 1985              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1986              		.align	1
 1987              		.weak	HAL_UART_RxCpltCallback
 1988              		.syntax unified
 1989              		.thumb
 1990              		.thumb_func
 1991              		.fpu fpv4-sp-d16
 1993              	HAL_UART_RxCpltCallback:
 1994              	.LFB157:
2450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1995              		.loc 1 2450 0
 1996              		.cfi_startproc
 1997              		@ args = 0, pretend = 0, frame = 0
 1998              		@ frame_needed = 0, uses_anonymous_args = 0
 1999              		@ link register save eliminated.
 2000              	.LVL149:
2457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2001              		.loc 1 2457 0
 2002 0000 7047     		bx	lr
 2003              		.cfi_endproc
 2004              	.LFE157:
 2006              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 2007              		.align	1
 2008              		.syntax unified
 2009              		.thumb
 2010              		.thumb_func
 2011              		.fpu fpv4-sp-d16
 2013              	UART_RxISR_8BIT:
 2014              	.LFB195:
3798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8 bits data word length .
ARM GAS  /tmp/ccnYk2xI.s 			page 108


3801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2015              		.loc 1 3805 0
 2016              		.cfi_startproc
 2017              		@ args = 0, pretend = 0, frame = 0
 2018              		@ frame_needed = 0, uses_anonymous_args = 0
 2019              	.LVL150:
 2020 0000 08B5     		push	{r3, lr}
 2021              	.LCFI14:
 2022              		.cfi_def_cfa_offset 8
 2023              		.cfi_offset 3, -8
 2024              		.cfi_offset 14, -4
3806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2025              		.loc 1 3806 0
 2026 0002 B0F86030 		ldrh	r3, [r0, #96]
 2027              	.LVL151:
3807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2028              		.loc 1 3810 0
 2029 0006 D0F88420 		ldr	r2, [r0, #132]
 2030 000a 222A     		cmp	r2, #34
 2031 000c 05D0     		beq	.L167
3811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr++;
3815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
3816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = NULL;
3830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
ARM GAS  /tmp/ccnYk2xI.s 			page 109


3841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2032              		.loc 1 3843 0
 2033 000e 0268     		ldr	r2, [r0]
 2034 0010 9369     		ldr	r3, [r2, #24]
 2035              	.LVL152:
 2036 0012 43F00803 		orr	r3, r3, #8
 2037 0016 9361     		str	r3, [r2, #24]
 2038              	.LVL153:
 2039              	.L163:
3844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2040              		.loc 1 3845 0
 2041 0018 08BD     		pop	{r3, pc}
 2042              	.LVL154:
 2043              	.L167:
3812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 2044              		.loc 1 3812 0
 2045 001a 0268     		ldr	r2, [r0]
 2046 001c 516A     		ldr	r1, [r2, #36]
 2047              	.LVL155:
3813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr++;
 2048              		.loc 1 3813 0
 2049 001e DBB2     		uxtb	r3, r3
 2050              	.LVL156:
 2051 0020 826D     		ldr	r2, [r0, #88]
 2052 0022 0B40     		ands	r3, r3, r1
 2053 0024 1370     		strb	r3, [r2]
 2054              	.LVL157:
3814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
 2055              		.loc 1 3814 0
 2056 0026 836D     		ldr	r3, [r0, #88]
 2057 0028 0133     		adds	r3, r3, #1
 2058 002a 8365     		str	r3, [r0, #88]
3815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2059              		.loc 1 3815 0
 2060 002c B0F85E30 		ldrh	r3, [r0, #94]
 2061 0030 013B     		subs	r3, r3, #1
 2062 0032 9BB2     		uxth	r3, r3
 2063 0034 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2064              		.loc 1 3817 0
 2065 0038 B0F85E30 		ldrh	r3, [r0, #94]
 2066 003c 9BB2     		uxth	r3, r3
 2067 003e 002B     		cmp	r3, #0
 2068 0040 EAD1     		bne	.L163
3820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2069              		.loc 1 3820 0
 2070 0042 0268     		ldr	r2, [r0]
 2071 0044 1368     		ldr	r3, [r2]
 2072 0046 23F49073 		bic	r3, r3, #288
 2073 004a 1360     		str	r3, [r2]
3823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2074              		.loc 1 3823 0
 2075 004c 0268     		ldr	r2, [r0]
 2076 004e 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccnYk2xI.s 			page 110


 2077 0050 23F00103 		bic	r3, r3, #1
 2078 0054 9360     		str	r3, [r2, #8]
3826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2079              		.loc 1 3826 0
 2080 0056 2023     		movs	r3, #32
 2081 0058 C0F88430 		str	r3, [r0, #132]
3829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2082              		.loc 1 3829 0
 2083 005c 0023     		movs	r3, #0
 2084 005e C366     		str	r3, [r0, #108]
3836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2085              		.loc 1 3836 0
 2086 0060 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2087              	.LVL158:
 2088 0064 D8E7     		b	.L163
 2089              		.cfi_endproc
 2090              	.LFE195:
 2092              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 2093              		.align	1
 2094              		.syntax unified
 2095              		.thumb
 2096              		.thumb_func
 2097              		.fpu fpv4-sp-d16
 2099              	UART_RxISR_16BIT:
 2100              	.LFB196:
3846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length .
3849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2101              		.loc 1 3855 0
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 0
 2104              		@ frame_needed = 0, uses_anonymous_args = 0
 2105              	.LVL159:
 2106 0000 08B5     		push	{r3, lr}
 2107              	.LCFI15:
 2108              		.cfi_def_cfa_offset 8
 2109              		.cfi_offset 3, -8
 2110              		.cfi_offset 14, -4
3856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2111              		.loc 1 3857 0
 2112 0002 B0F86020 		ldrh	r2, [r0, #96]
 2113              	.LVL160:
3858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2114              		.loc 1 3861 0
 2115 0006 D0F88430 		ldr	r3, [r0, #132]
 2116 000a 222B     		cmp	r3, #34
ARM GAS  /tmp/ccnYk2xI.s 			page 111


 2117 000c 05D0     		beq	.L172
3862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
3865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
3866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
3867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
3868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = NULL;
3882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2118              		.loc 1 3895 0
 2119 000e 0268     		ldr	r2, [r0]
 2120              	.LVL161:
 2121 0010 9369     		ldr	r3, [r2, #24]
 2122 0012 43F00803 		orr	r3, r3, #8
 2123 0016 9361     		str	r3, [r2, #24]
 2124              	.LVL162:
 2125              	.L168:
3896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2126              		.loc 1 3897 0
 2127 0018 08BD     		pop	{r3, pc}
 2128              	.LVL163:
 2129              	.L172:
3863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 2130              		.loc 1 3863 0
 2131 001a 0368     		ldr	r3, [r0]
 2132 001c 5B6A     		ldr	r3, [r3, #36]
 2133              	.LVL164:
3864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 2134              		.loc 1 3864 0
 2135 001e 816D     		ldr	r1, [r0, #88]
ARM GAS  /tmp/ccnYk2xI.s 			page 112


 2136              	.LVL165:
3865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 2137              		.loc 1 3865 0
 2138 0020 1340     		ands	r3, r3, r2
 2139              	.LVL166:
 2140 0022 0B80     		strh	r3, [r1]	@ movhi
3866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount--;
 2141              		.loc 1 3866 0
 2142 0024 836D     		ldr	r3, [r0, #88]
 2143 0026 0233     		adds	r3, r3, #2
 2144 0028 8365     		str	r3, [r0, #88]
3867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2145              		.loc 1 3867 0
 2146 002a B0F85E30 		ldrh	r3, [r0, #94]
 2147 002e 013B     		subs	r3, r3, #1
 2148 0030 9BB2     		uxth	r3, r3
 2149 0032 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2150              		.loc 1 3869 0
 2151 0036 B0F85E30 		ldrh	r3, [r0, #94]
 2152 003a 9BB2     		uxth	r3, r3
 2153 003c 002B     		cmp	r3, #0
 2154 003e EBD1     		bne	.L168
3872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2155              		.loc 1 3872 0
 2156 0040 0268     		ldr	r2, [r0]
 2157              	.LVL167:
 2158 0042 1368     		ldr	r3, [r2]
 2159 0044 23F49073 		bic	r3, r3, #288
 2160 0048 1360     		str	r3, [r2]
3875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2161              		.loc 1 3875 0
 2162 004a 0268     		ldr	r2, [r0]
 2163 004c 9368     		ldr	r3, [r2, #8]
 2164 004e 23F00103 		bic	r3, r3, #1
 2165 0052 9360     		str	r3, [r2, #8]
3878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2166              		.loc 1 3878 0
 2167 0054 2023     		movs	r3, #32
 2168 0056 C0F88430 		str	r3, [r0, #132]
3881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2169              		.loc 1 3881 0
 2170 005a 0023     		movs	r3, #0
 2171 005c C366     		str	r3, [r0, #108]
3888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2172              		.loc 1 3888 0
 2173 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2174              	.LVL168:
 2175 0062 D9E7     		b	.L168
 2176              		.cfi_endproc
 2177              	.LFE196:
 2179              		.section	.text.UART_RxISR_8BIT_FIFOEN,"ax",%progbits
 2180              		.align	1
 2181              		.syntax unified
 2182              		.thumb
 2183              		.thumb_func
 2184              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccnYk2xI.s 			page 113


 2186              	UART_RxISR_8BIT_FIFOEN:
 2187              	.LFB197:
3898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 7 or 8  bits data word length and FIFO mode is enabled.
3901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2188              		.loc 1 3907 0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 0
 2191              		@ frame_needed = 0, uses_anonymous_args = 0
 2192              	.LVL169:
 2193 0000 70B5     		push	{r4, r5, r6, lr}
 2194              	.LCFI16:
 2195              		.cfi_def_cfa_offset 16
 2196              		.cfi_offset 4, -16
 2197              		.cfi_offset 5, -12
 2198              		.cfi_offset 6, -8
 2199              		.cfi_offset 14, -4
3908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 2200              		.loc 1 3908 0
 2201 0002 B0F86050 		ldrh	r5, [r0, #96]
 2202              	.LVL170:
3909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t   nb_rx_data;
3911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  rxdatacount;
3912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2203              		.loc 1 3914 0
 2204 0006 D0F88430 		ldr	r3, [r0, #132]
 2205 000a 222B     		cmp	r3, #34
 2206 000c 05D0     		beq	.L180
3915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
3917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr++;
3921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
3922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
3924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
3925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
3926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
3929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
3930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
3933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccnYk2xI.s 			page 114


3934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Clear RxISR function pointer */
3936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = NULL;
3937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
3942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
3944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
3946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
3949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
3950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
3951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     */
3952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
3953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
3954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
3956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
3957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Update the RxISR function pointer */
3959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
3960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
3962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
3963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
3964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
3966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2207              		.loc 1 3968 0
 2208 000e 0268     		ldr	r2, [r0]
 2209 0010 9369     		ldr	r3, [r2, #24]
 2210 0012 43F00803 		orr	r3, r3, #8
 2211 0016 9361     		str	r3, [r2, #24]
 2212              	.LVL171:
 2213              	.L173:
3969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
3970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2214              		.loc 1 3970 0
 2215 0018 70BD     		pop	{r4, r5, r6, pc}
 2216              	.LVL172:
 2217              	.L180:
 2218 001a 0446     		mov	r4, r0
3916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2219              		.loc 1 3916 0
 2220 001c B0F86860 		ldrh	r6, [r0, #104]
 2221              	.LVL173:
 2222 0020 01E0     		b	.L175
 2223              	.LVL174:
 2224              	.L176:
3916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccnYk2xI.s 			page 115


 2225              		.loc 1 3916 0 is_stmt 0 discriminator 2
 2226 0022 013E     		subs	r6, r6, #1
 2227              	.LVL175:
 2228 0024 B6B2     		uxth	r6, r6
 2229              	.LVL176:
 2230              	.L175:
3916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2231              		.loc 1 3916 0 discriminator 1
 2232 0026 46B3     		cbz	r6, .L181
3918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 2233              		.loc 1 3918 0 is_stmt 1
 2234 0028 2368     		ldr	r3, [r4]
 2235 002a 596A     		ldr	r1, [r3, #36]
 2236              	.LVL177:
3919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr++;
 2237              		.loc 1 3919 0
 2238 002c EBB2     		uxtb	r3, r5
 2239 002e A26D     		ldr	r2, [r4, #88]
 2240 0030 0B40     		ands	r3, r3, r1
 2241 0032 1370     		strb	r3, [r2]
3920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
 2242              		.loc 1 3920 0
 2243 0034 A36D     		ldr	r3, [r4, #88]
 2244 0036 0133     		adds	r3, r3, #1
 2245 0038 A365     		str	r3, [r4, #88]
3921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2246              		.loc 1 3921 0
 2247 003a B4F85E30 		ldrh	r3, [r4, #94]
 2248 003e 013B     		subs	r3, r3, #1
 2249 0040 9BB2     		uxth	r3, r3
 2250 0042 A4F85E30 		strh	r3, [r4, #94]	@ movhi
3923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 2251              		.loc 1 3923 0
 2252 0046 B4F85E30 		ldrh	r3, [r4, #94]
 2253 004a 9BB2     		uxth	r3, r3
 2254 004c 002B     		cmp	r3, #0
 2255 004e E8D1     		bne	.L176
3926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2256              		.loc 1 3926 0
 2257 0050 2268     		ldr	r2, [r4]
 2258 0052 1368     		ldr	r3, [r2]
 2259 0054 23F48073 		bic	r3, r3, #256
 2260 0058 1360     		str	r3, [r2]
3930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2261              		.loc 1 3930 0
 2262 005a 2268     		ldr	r2, [r4]
 2263 005c 9368     		ldr	r3, [r2, #8]
 2264 005e 23F08053 		bic	r3, r3, #268435456
 2265 0062 23F00103 		bic	r3, r3, #1
 2266 0066 9360     		str	r3, [r2, #8]
3933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2267              		.loc 1 3933 0
 2268 0068 2023     		movs	r3, #32
 2269 006a C4F88430 		str	r3, [r4, #132]
3936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2270              		.loc 1 3936 0
 2271 006e 0023     		movs	r3, #0
ARM GAS  /tmp/ccnYk2xI.s 			page 116


 2272 0070 E366     		str	r3, [r4, #108]
3943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2273              		.loc 1 3943 0
 2274 0072 2046     		mov	r0, r4
 2275 0074 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2276              	.LVL178:
 2277 0078 D3E7     		b	.L176
 2278              	.L181:
3952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 2279              		.loc 1 3952 0
 2280 007a B4F85E30 		ldrh	r3, [r4, #94]
 2281 007e 9BB2     		uxth	r3, r3
 2282              	.LVL179:
3953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2283              		.loc 1 3953 0
 2284 0080 002B     		cmp	r3, #0
 2285 0082 C9D0     		beq	.L173
3953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2286              		.loc 1 3953 0 is_stmt 0 discriminator 1
 2287 0084 B4F86820 		ldrh	r2, [r4, #104]
 2288 0088 9A42     		cmp	r2, r3
 2289 008a C5D9     		bls	.L173
3956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2290              		.loc 1 3956 0 is_stmt 1
 2291 008c 2268     		ldr	r2, [r4]
 2292 008e 9368     		ldr	r3, [r2, #8]
 2293              	.LVL180:
 2294 0090 23F08053 		bic	r3, r3, #268435456
 2295 0094 9360     		str	r3, [r2, #8]
3959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2296              		.loc 1 3959 0
 2297 0096 044B     		ldr	r3, .L182
 2298 0098 E366     		str	r3, [r4, #108]
3962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2299              		.loc 1 3962 0
 2300 009a 2268     		ldr	r2, [r4]
 2301 009c 1368     		ldr	r3, [r2]
 2302 009e 43F02003 		orr	r3, r3, #32
 2303 00a2 1360     		str	r3, [r2]
 2304 00a4 B8E7     		b	.L173
 2305              	.L183:
 2306 00a6 00BF     		.align	2
 2307              	.L182:
 2308 00a8 00000000 		.word	UART_RxISR_8BIT
 2309              		.cfi_endproc
 2310              	.LFE197:
 2312              		.section	.text.UART_RxISR_16BIT_FIFOEN,"ax",%progbits
 2313              		.align	1
 2314              		.syntax unified
 2315              		.thumb
 2316              		.thumb_func
 2317              		.fpu fpv4-sp-d16
 2319              	UART_RxISR_16BIT_FIFOEN:
 2320              	.LFB198:
3971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
3973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @brief RX interrupt handler for 9 bits data word length and FIFO mode is enabled.
ARM GAS  /tmp/ccnYk2xI.s 			page 117


3974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @param huart UART handle.
3977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   * @retval None
3978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   */
3979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** {
 2321              		.loc 1 3980 0
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 0
 2324              		@ frame_needed = 0, uses_anonymous_args = 0
 2325              	.LVL181:
 2326 0000 70B5     		push	{r4, r5, r6, lr}
 2327              	.LCFI17:
 2328              		.cfi_def_cfa_offset 16
 2329              		.cfi_offset 4, -16
 2330              		.cfi_offset 5, -12
 2331              		.cfi_offset 6, -8
 2332              		.cfi_offset 14, -4
3981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t *tmp;
3982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 2333              		.loc 1 3982 0
 2334 0002 B0F86060 		ldrh	r6, [r0, #96]
 2335              	.LVL182:
3983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  uhdata;
3984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t   nb_rx_data;
3985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint16_t  rxdatacount;
3986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2336              		.loc 1 3988 0
 2337 0006 D0F88430 		ldr	r3, [r0, #132]
 2338 000a 222B     		cmp	r3, #34
 2339 000c 05D0     		beq	.L191
3989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
3990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     for (nb_rx_data = huart->NbRxDataToProcess ; nb_rx_data > 0U ; nb_rx_data--)
3991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
3992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
3994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
3995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
3996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
3997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
3998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if (huart->RxXferCount == 0U)
3999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
4000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXFT interrupt*/
4001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
4002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error)
4004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            and RX FIFO Threshold interrupt */
4005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
4006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
4008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
4009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /* Clear RxISR function pointer */
4011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxISR = NULL;
ARM GAS  /tmp/ccnYk2xI.s 			page 118


4012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
4014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
4015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
4016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #else
4017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
4018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
4019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
4020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
4021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* When remaining number of bytes to receive is less than the RX FIFO
4024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     threshold, next incoming frames are processed as if FIFO mode was
4025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     disabled (i.e. one interrupt per received frame).
4026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     */
4027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     rxdatacount = huart->RxXferCount;
4028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
4029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
4030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Disable the UART RXFT interrupt*/
4031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
4032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Update the RxISR function pointer */
4034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
4035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
4036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       /* Enable the UART Data Register Not Empty interrupt */
4037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_RXNEIE_RXFNEIE);
4038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
4039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   else
4041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
4042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
4043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2340              		.loc 1 4043 0
 2341 000e 0268     		ldr	r2, [r0]
 2342 0010 9369     		ldr	r3, [r2, #24]
 2343 0012 43F00803 		orr	r3, r3, #8
 2344 0016 9361     		str	r3, [r2, #24]
 2345              	.LVL183:
 2346              	.L184:
4044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
4045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 2347              		.loc 1 4045 0
 2348 0018 70BD     		pop	{r4, r5, r6, pc}
 2349              	.LVL184:
 2350              	.L191:
 2351 001a 0446     		mov	r4, r0
3990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2352              		.loc 1 3990 0
 2353 001c B0F86850 		ldrh	r5, [r0, #104]
 2354              	.LVL185:
 2355 0020 01E0     		b	.L186
 2356              	.LVL186:
 2357              	.L187:
3990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2358              		.loc 1 3990 0 is_stmt 0 discriminator 2
 2359 0022 013D     		subs	r5, r5, #1
 2360              	.LVL187:
ARM GAS  /tmp/ccnYk2xI.s 			page 119


 2361 0024 ADB2     		uxth	r5, r5
 2362              	.LVL188:
 2363              	.L186:
3990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2364              		.loc 1 3990 0 discriminator 1
 2365 0026 3DB3     		cbz	r5, .L192
3992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pRxBuffPtr ;
 2366              		.loc 1 3992 0 is_stmt 1
 2367 0028 2368     		ldr	r3, [r4]
 2368 002a 5B6A     		ldr	r3, [r3, #36]
 2369              	.LVL189:
3993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 2370              		.loc 1 3993 0
 2371 002c A26D     		ldr	r2, [r4, #88]
 2372              	.LVL190:
3994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 2373              		.loc 1 3994 0
 2374 002e 3340     		ands	r3, r3, r6
 2375              	.LVL191:
 2376 0030 1380     		strh	r3, [r2]	@ movhi
3995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       huart->RxXferCount--;
 2377              		.loc 1 3995 0
 2378 0032 A36D     		ldr	r3, [r4, #88]
 2379 0034 0233     		adds	r3, r3, #2
 2380 0036 A365     		str	r3, [r4, #88]
3996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2381              		.loc 1 3996 0
 2382 0038 B4F85E30 		ldrh	r3, [r4, #94]
 2383 003c 013B     		subs	r3, r3, #1
 2384 003e 9BB2     		uxth	r3, r3
 2385 0040 A4F85E30 		strh	r3, [r4, #94]	@ movhi
3998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 2386              		.loc 1 3998 0
 2387 0044 B4F85E30 		ldrh	r3, [r4, #94]
 2388 0048 9BB2     		uxth	r3, r3
 2389 004a 002B     		cmp	r3, #0
 2390 004c E9D1     		bne	.L187
4001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2391              		.loc 1 4001 0
 2392 004e 2268     		ldr	r2, [r4]
 2393              	.LVL192:
 2394 0050 1368     		ldr	r3, [r2]
 2395 0052 23F48073 		bic	r3, r3, #256
 2396 0056 1360     		str	r3, [r2]
4005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2397              		.loc 1 4005 0
 2398 0058 2268     		ldr	r2, [r4]
 2399 005a 9368     		ldr	r3, [r2, #8]
 2400 005c 23F08053 		bic	r3, r3, #268435456
 2401 0060 23F00103 		bic	r3, r3, #1
 2402 0064 9360     		str	r3, [r2, #8]
4008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2403              		.loc 1 4008 0
 2404 0066 2023     		movs	r3, #32
 2405 0068 C4F88430 		str	r3, [r4, #132]
4011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2406              		.loc 1 4011 0
ARM GAS  /tmp/ccnYk2xI.s 			page 120


 2407 006c 0023     		movs	r3, #0
 2408 006e E366     		str	r3, [r4, #108]
4018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2409              		.loc 1 4018 0
 2410 0070 2046     		mov	r0, r4
 2411 0072 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2412              	.LVL193:
 2413 0076 D4E7     		b	.L187
 2414              	.L192:
4027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     if ((rxdatacount != 0U) && (rxdatacount < huart->NbRxDataToProcess))
 2415              		.loc 1 4027 0
 2416 0078 B4F85E30 		ldrh	r3, [r4, #94]
 2417 007c 9BB2     		uxth	r3, r3
 2418              	.LVL194:
4028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2419              		.loc 1 4028 0
 2420 007e 002B     		cmp	r3, #0
 2421 0080 CAD0     		beq	.L184
4028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2422              		.loc 1 4028 0 is_stmt 0 discriminator 1
 2423 0082 B4F86820 		ldrh	r2, [r4, #104]
 2424 0086 9A42     		cmp	r2, r3
 2425 0088 C6D9     		bls	.L184
4031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2426              		.loc 1 4031 0 is_stmt 1
 2427 008a 2268     		ldr	r2, [r4]
 2428 008c 9368     		ldr	r3, [r2, #8]
 2429              	.LVL195:
 2430 008e 23F08053 		bic	r3, r3, #268435456
 2431 0092 9360     		str	r3, [r2, #8]
4034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2432              		.loc 1 4034 0
 2433 0094 034B     		ldr	r3, .L193
 2434 0096 E366     		str	r3, [r4, #108]
4037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2435              		.loc 1 4037 0
 2436 0098 2268     		ldr	r2, [r4]
 2437 009a 1368     		ldr	r3, [r2]
 2438 009c 43F02003 		orr	r3, r3, #32
 2439 00a0 1360     		str	r3, [r2]
 2440 00a2 B9E7     		b	.L184
 2441              	.L194:
 2442              		.align	2
 2443              	.L193:
 2444 00a4 00000000 		.word	UART_RxISR_16BIT
 2445              		.cfi_endproc
 2446              	.LFE198:
 2448              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2449              		.align	1
 2450              		.syntax unified
 2451              		.thumb
 2452              		.thumb_func
 2453              		.fpu fpv4-sp-d16
 2455              	UART_DMAReceiveCplt:
 2456              	.LFB182:
3352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2457              		.loc 1 3352 0
ARM GAS  /tmp/ccnYk2xI.s 			page 121


 2458              		.cfi_startproc
 2459              		@ args = 0, pretend = 0, frame = 0
 2460              		@ frame_needed = 0, uses_anonymous_args = 0
 2461              	.LVL196:
 2462 0000 08B5     		push	{r3, lr}
 2463              	.LCFI18:
 2464              		.cfi_def_cfa_offset 8
 2465              		.cfi_offset 3, -8
 2466              		.cfi_offset 14, -4
3353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2467              		.loc 1 3353 0
 2468 0002 836A     		ldr	r3, [r0, #40]
 2469              	.LVL197:
3356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2470              		.loc 1 3356 0
 2471 0004 0268     		ldr	r2, [r0]
 2472 0006 1268     		ldr	r2, [r2]
 2473 0008 12F0200F 		tst	r2, #32
 2474 000c 14D1     		bne	.L196
3358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2475              		.loc 1 3358 0
 2476 000e 0022     		movs	r2, #0
 2477 0010 A3F85E20 		strh	r2, [r3, #94]	@ movhi
3361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2478              		.loc 1 3361 0
 2479 0014 1968     		ldr	r1, [r3]
 2480 0016 0A68     		ldr	r2, [r1]
 2481 0018 22F48072 		bic	r2, r2, #256
 2482 001c 0A60     		str	r2, [r1]
3362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2483              		.loc 1 3362 0
 2484 001e 1968     		ldr	r1, [r3]
 2485 0020 8A68     		ldr	r2, [r1, #8]
 2486 0022 22F00102 		bic	r2, r2, #1
 2487 0026 8A60     		str	r2, [r1, #8]
3366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2488              		.loc 1 3366 0
 2489 0028 1968     		ldr	r1, [r3]
 2490 002a 8A68     		ldr	r2, [r1, #8]
 2491 002c 22F04002 		bic	r2, r2, #64
 2492 0030 8A60     		str	r2, [r1, #8]
3369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2493              		.loc 1 3369 0
 2494 0032 2022     		movs	r2, #32
 2495 0034 C3F88420 		str	r2, [r3, #132]
 2496              	.L196:
3377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2497              		.loc 1 3377 0
 2498 0038 1846     		mov	r0, r3
 2499              	.LVL198:
 2500 003a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2501              	.LVL199:
3379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2502              		.loc 1 3379 0
 2503 003e 08BD     		pop	{r3, pc}
 2504              		.cfi_endproc
 2505              	.LFE182:
ARM GAS  /tmp/ccnYk2xI.s 			page 122


 2507              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2508              		.align	1
 2509              		.weak	HAL_UART_RxHalfCpltCallback
 2510              		.syntax unified
 2511              		.thumb
 2512              		.thumb_func
 2513              		.fpu fpv4-sp-d16
 2515              	HAL_UART_RxHalfCpltCallback:
 2516              	.LFB158:
2465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2517              		.loc 1 2465 0
 2518              		.cfi_startproc
 2519              		@ args = 0, pretend = 0, frame = 0
 2520              		@ frame_needed = 0, uses_anonymous_args = 0
 2521              		@ link register save eliminated.
 2522              	.LVL200:
2472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2523              		.loc 1 2472 0
 2524 0000 7047     		bx	lr
 2525              		.cfi_endproc
 2526              	.LFE158:
 2528              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2529              		.align	1
 2530              		.syntax unified
 2531              		.thumb
 2532              		.thumb_func
 2533              		.fpu fpv4-sp-d16
 2535              	UART_DMARxHalfCplt:
 2536              	.LFB183:
3387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2537              		.loc 1 3387 0
 2538              		.cfi_startproc
 2539              		@ args = 0, pretend = 0, frame = 0
 2540              		@ frame_needed = 0, uses_anonymous_args = 0
 2541              	.LVL201:
 2542 0000 08B5     		push	{r3, lr}
 2543              	.LCFI19:
 2544              		.cfi_def_cfa_offset 8
 2545              		.cfi_offset 3, -8
 2546              		.cfi_offset 14, -4
 2547              	.LVL202:
3395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2548              		.loc 1 3395 0
 2549 0002 806A     		ldr	r0, [r0, #40]
 2550              	.LVL203:
 2551 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2552              	.LVL204:
3397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2553              		.loc 1 3397 0
 2554 0008 08BD     		pop	{r3, pc}
 2555              		.cfi_endproc
 2556              	.LFE183:
 2558              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2559              		.align	1
 2560              		.weak	HAL_UART_ErrorCallback
 2561              		.syntax unified
 2562              		.thumb
ARM GAS  /tmp/ccnYk2xI.s 			page 123


 2563              		.thumb_func
 2564              		.fpu fpv4-sp-d16
 2566              	HAL_UART_ErrorCallback:
 2567              	.LFB159:
2480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2568              		.loc 1 2480 0
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 0
 2571              		@ frame_needed = 0, uses_anonymous_args = 0
 2572              		@ link register save eliminated.
 2573              	.LVL205:
2487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2574              		.loc 1 2487 0
 2575 0000 7047     		bx	lr
 2576              		.cfi_endproc
 2577              	.LFE159:
 2579              		.section	.text.UART_DMAError,"ax",%progbits
 2580              		.align	1
 2581              		.syntax unified
 2582              		.thumb
 2583              		.thumb_func
 2584              		.fpu fpv4-sp-d16
 2586              	UART_DMAError:
 2587              	.LFB184:
3405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2588              		.loc 1 3405 0
 2589              		.cfi_startproc
 2590              		@ args = 0, pretend = 0, frame = 0
 2591              		@ frame_needed = 0, uses_anonymous_args = 0
 2592              	.LVL206:
 2593 0000 38B5     		push	{r3, r4, r5, lr}
 2594              	.LCFI20:
 2595              		.cfi_def_cfa_offset 16
 2596              		.cfi_offset 3, -16
 2597              		.cfi_offset 4, -12
 2598              		.cfi_offset 5, -8
 2599              		.cfi_offset 14, -4
3406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2600              		.loc 1 3406 0
 2601 0002 846A     		ldr	r4, [r0, #40]
 2602              	.LVL207:
3408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2603              		.loc 1 3408 0
 2604 0004 D4F88020 		ldr	r2, [r4, #128]
 2605              	.LVL208:
3409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2606              		.loc 1 3409 0
 2607 0008 D4F88450 		ldr	r5, [r4, #132]
 2608              	.LVL209:
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2609              		.loc 1 3412 0
 2610 000c 2368     		ldr	r3, [r4]
 2611 000e 9B68     		ldr	r3, [r3, #8]
 2612 0010 13F0800F 		tst	r3, #128
 2613 0014 01D0     		beq	.L203
3412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2614              		.loc 1 3412 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccnYk2xI.s 			page 124


 2615 0016 212A     		cmp	r2, #33
 2616 0018 10D0     		beq	.L206
 2617              	.LVL210:
 2618              	.L203:
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2619              		.loc 1 3420 0 is_stmt 1
 2620 001a 2368     		ldr	r3, [r4]
 2621 001c 9B68     		ldr	r3, [r3, #8]
 2622 001e 13F0400F 		tst	r3, #64
 2623 0022 01D0     		beq	.L204
3420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2624              		.loc 1 3420 0 is_stmt 0 discriminator 1
 2625 0024 222D     		cmp	r5, #34
 2626 0026 10D0     		beq	.L207
 2627              	.L204:
3427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2628              		.loc 1 3427 0 is_stmt 1
 2629 0028 D4F88830 		ldr	r3, [r4, #136]
 2630 002c 43F01003 		orr	r3, r3, #16
 2631 0030 C4F88830 		str	r3, [r4, #136]
3434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2632              		.loc 1 3434 0
 2633 0034 2046     		mov	r0, r4
 2634 0036 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2635              	.LVL211:
3436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2636              		.loc 1 3436 0
 2637 003a 38BD     		pop	{r3, r4, r5, pc}
 2638              	.LVL212:
 2639              	.L206:
3415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2640              		.loc 1 3415 0
 2641 003c 0023     		movs	r3, #0
 2642 003e A4F85630 		strh	r3, [r4, #86]	@ movhi
3416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2643              		.loc 1 3416 0
 2644 0042 2046     		mov	r0, r4
 2645              	.LVL213:
 2646 0044 FFF7FEFF 		bl	UART_EndTxTransfer
 2647              	.LVL214:
 2648 0048 E7E7     		b	.L203
 2649              	.L207:
3423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2650              		.loc 1 3423 0
 2651 004a 0023     		movs	r3, #0
 2652 004c A4F85E30 		strh	r3, [r4, #94]	@ movhi
3424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2653              		.loc 1 3424 0
 2654 0050 2046     		mov	r0, r4
 2655 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 2656              	.LVL215:
 2657 0056 E7E7     		b	.L204
 2658              		.cfi_endproc
 2659              	.LFE184:
 2661              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2662              		.align	1
 2663              		.global	HAL_UART_IRQHandler
ARM GAS  /tmp/ccnYk2xI.s 			page 125


 2664              		.syntax unified
 2665              		.thumb
 2666              		.thumb_func
 2667              		.fpu fpv4-sp-d16
 2669              	HAL_UART_IRQHandler:
 2670              	.LFB154:
2188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2671              		.loc 1 2188 0
 2672              		.cfi_startproc
 2673              		@ args = 0, pretend = 0, frame = 0
 2674              		@ frame_needed = 0, uses_anonymous_args = 0
 2675              	.LVL216:
 2676 0000 70B5     		push	{r4, r5, r6, lr}
 2677              	.LCFI21:
 2678              		.cfi_def_cfa_offset 16
 2679              		.cfi_offset 4, -16
 2680              		.cfi_offset 5, -12
 2681              		.cfi_offset 6, -8
 2682              		.cfi_offset 14, -4
 2683 0002 0446     		mov	r4, r0
2189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2684              		.loc 1 2189 0
 2685 0004 0168     		ldr	r1, [r0]
 2686 0006 CB69     		ldr	r3, [r1, #28]
 2687              	.LVL217:
2190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2688              		.loc 1 2190 0
 2689 0008 0D68     		ldr	r5, [r1]
 2690              	.LVL218:
2191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2691              		.loc 1 2191 0
 2692 000a 8868     		ldr	r0, [r1, #8]
 2693              	.LVL219:
2197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (errorflags == 0U)
 2694              		.loc 1 2197 0
 2695 000c 40F60F02 		movw	r2, #2063
 2696              	.LVL220:
2198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2697              		.loc 1 2198 0
 2698 0010 1A40     		ands	r2, r3, r2
 2699              	.LVL221:
 2700 0012 0DD1     		bne	.L209
2201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 2701              		.loc 1 2201 0
 2702 0014 13F0200F 		tst	r3, #32
 2703 0018 0AD0     		beq	.L209
2202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 2704              		.loc 1 2202 0
 2705 001a 15F0200F 		tst	r5, #32
 2706 001e 02D1     		bne	.L210
2203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2707              		.loc 1 2203 0
 2708 0020 10F0805F 		tst	r0, #268435456
 2709 0024 04D0     		beq	.L209
 2710              	.L210:
2205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 2711              		.loc 1 2205 0
ARM GAS  /tmp/ccnYk2xI.s 			page 126


 2712 0026 E36E     		ldr	r3, [r4, #108]
 2713              	.LVL222:
 2714 0028 0BB1     		cbz	r3, .L208
2207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 2715              		.loc 1 2207 0
 2716 002a 2046     		mov	r0, r4
 2717              	.LVL223:
 2718 002c 9847     		blx	r3
 2719              	.LVL224:
 2720              	.L208:
2412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2721              		.loc 1 2412 0
 2722 002e 70BD     		pop	{r4, r5, r6, pc}
 2723              	.LVL225:
 2724              	.L209:
2214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
 2725              		.loc 1 2214 0
 2726 0030 002A     		cmp	r2, #0
 2727 0032 00F09580 		beq	.L212
2215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_RTOIE)) != 0U))))
 2728              		.loc 1 2215 0
 2729 0036 684A     		ldr	r2, .L235
 2730              	.LVL226:
 2731 0038 0240     		ands	r2, r0, r2
 2732 003a 03D1     		bne	.L213
2216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2733              		.loc 1 2216 0
 2734 003c 674E     		ldr	r6, .L235+4
 2735 003e 3542     		tst	r5, r6
 2736 0040 00F08E80 		beq	.L212
 2737              	.L213:
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2738              		.loc 1 2219 0
 2739 0044 13F0010F 		tst	r3, #1
 2740 0048 09D0     		beq	.L214
2219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2741              		.loc 1 2219 0 is_stmt 0 discriminator 1
 2742 004a 15F4807F 		tst	r5, #256
 2743 004e 06D0     		beq	.L214
2221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2744              		.loc 1 2221 0 is_stmt 1
 2745 0050 0126     		movs	r6, #1
 2746 0052 0E62     		str	r6, [r1, #32]
2223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2747              		.loc 1 2223 0
 2748 0054 D4F88810 		ldr	r1, [r4, #136]
 2749 0058 3143     		orrs	r1, r1, r6
 2750 005a C4F88810 		str	r1, [r4, #136]
 2751              	.L214:
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2752              		.loc 1 2227 0
 2753 005e 13F0020F 		tst	r3, #2
 2754 0062 0BD0     		beq	.L215
2227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2755              		.loc 1 2227 0 is_stmt 0 discriminator 1
 2756 0064 10F0010F 		tst	r0, #1
 2757 0068 08D0     		beq	.L215
ARM GAS  /tmp/ccnYk2xI.s 			page 127


2229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2758              		.loc 1 2229 0 is_stmt 1
 2759 006a 2168     		ldr	r1, [r4]
 2760 006c 0226     		movs	r6, #2
 2761 006e 0E62     		str	r6, [r1, #32]
2231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2762              		.loc 1 2231 0
 2763 0070 D4F88810 		ldr	r1, [r4, #136]
 2764 0074 41F00401 		orr	r1, r1, #4
 2765 0078 C4F88810 		str	r1, [r4, #136]
 2766              	.L215:
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2767              		.loc 1 2235 0
 2768 007c 13F0040F 		tst	r3, #4
 2769 0080 0BD0     		beq	.L216
2235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2770              		.loc 1 2235 0 is_stmt 0 discriminator 1
 2771 0082 10F0010F 		tst	r0, #1
 2772 0086 08D0     		beq	.L216
2237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2773              		.loc 1 2237 0 is_stmt 1
 2774 0088 2168     		ldr	r1, [r4]
 2775 008a 0426     		movs	r6, #4
 2776 008c 0E62     		str	r6, [r1, #32]
2239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2777              		.loc 1 2239 0
 2778 008e D4F88810 		ldr	r1, [r4, #136]
 2779 0092 41F00201 		orr	r1, r1, #2
 2780 0096 C4F88810 		str	r1, [r4, #136]
 2781              	.L216:
2243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
 2782              		.loc 1 2243 0
 2783 009a 13F0080F 		tst	r3, #8
 2784 009e 0BD0     		beq	.L217
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 2785              		.loc 1 2244 0
 2786 00a0 15F0200F 		tst	r5, #32
 2787 00a4 00D1     		bne	.L218
2244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
 2788              		.loc 1 2244 0 is_stmt 0 discriminator 1
 2789 00a6 3AB1     		cbz	r2, .L217
 2790              	.L218:
2247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2791              		.loc 1 2247 0 is_stmt 1
 2792 00a8 2268     		ldr	r2, [r4]
 2793 00aa 0821     		movs	r1, #8
 2794 00ac 1162     		str	r1, [r2, #32]
2249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2795              		.loc 1 2249 0
 2796 00ae D4F88820 		ldr	r2, [r4, #136]
 2797 00b2 0A43     		orrs	r2, r2, r1
 2798 00b4 C4F88820 		str	r2, [r4, #136]
 2799              	.L217:
2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2800              		.loc 1 2253 0
 2801 00b8 13F4006F 		tst	r3, #2048
 2802 00bc 0CD0     		beq	.L219
ARM GAS  /tmp/ccnYk2xI.s 			page 128


2253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2803              		.loc 1 2253 0 is_stmt 0 discriminator 1
 2804 00be 15F0806F 		tst	r5, #67108864
 2805 00c2 09D0     		beq	.L219
2255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2806              		.loc 1 2255 0 is_stmt 1
 2807 00c4 2268     		ldr	r2, [r4]
 2808 00c6 4FF40061 		mov	r1, #2048
 2809 00ca 1162     		str	r1, [r2, #32]
2257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2810              		.loc 1 2257 0
 2811 00cc D4F88820 		ldr	r2, [r4, #136]
 2812 00d0 42F02002 		orr	r2, r2, #32
 2813 00d4 C4F88820 		str	r2, [r4, #136]
 2814              	.L219:
2261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2815              		.loc 1 2261 0
 2816 00d8 D4F88820 		ldr	r2, [r4, #136]
 2817 00dc 002A     		cmp	r2, #0
 2818 00de A6D0     		beq	.L208
2264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
 2819              		.loc 1 2264 0
 2820 00e0 13F0200F 		tst	r3, #32
 2821 00e4 09D0     		beq	.L220
2265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
 2822              		.loc 1 2265 0
 2823 00e6 15F0200F 		tst	r5, #32
 2824 00ea 02D1     		bne	.L221
2266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 2825              		.loc 1 2266 0
 2826 00ec 10F0805F 		tst	r0, #268435456
 2827 00f0 03D0     		beq	.L220
 2828              	.L221:
2268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 2829              		.loc 1 2268 0
 2830 00f2 E36E     		ldr	r3, [r4, #108]
 2831              	.LVL227:
 2832 00f4 0BB1     		cbz	r3, .L220
2270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 2833              		.loc 1 2270 0
 2834 00f6 2046     		mov	r0, r4
 2835              	.LVL228:
 2836 00f8 9847     		blx	r3
 2837              	.LVL229:
 2838              	.L220:
2279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2839              		.loc 1 2279 0
 2840 00fa D4F88820 		ldr	r2, [r4, #136]
 2841              	.LVL230:
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2842              		.loc 1 2280 0
 2843 00fe 2368     		ldr	r3, [r4]
 2844 0100 9B68     		ldr	r3, [r3, #8]
 2845 0102 13F0400F 		tst	r3, #64
 2846 0106 02D1     		bne	.L222
2280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2847              		.loc 1 2280 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccnYk2xI.s 			page 129


 2848 0108 12F0280F 		tst	r2, #40
 2849 010c 21D0     		beq	.L223
 2850              	.L222:
2286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2851              		.loc 1 2286 0 is_stmt 1
 2852 010e 2046     		mov	r0, r4
 2853 0110 FFF7FEFF 		bl	UART_EndRxTransfer
 2854              	.LVL231:
2289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 2855              		.loc 1 2289 0
 2856 0114 2368     		ldr	r3, [r4]
 2857 0116 9A68     		ldr	r2, [r3, #8]
 2858 0118 12F0400F 		tst	r2, #64
 2859 011c 15D0     		beq	.L224
2291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2860              		.loc 1 2291 0
 2861 011e 9A68     		ldr	r2, [r3, #8]
 2862 0120 22F04002 		bic	r2, r2, #64
 2863 0124 9A60     		str	r2, [r3, #8]
2294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           {
 2864              		.loc 1 2294 0
 2865 0126 A36F     		ldr	r3, [r4, #120]
 2866 0128 5BB1     		cbz	r3, .L225
2298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2867              		.loc 1 2298 0
 2868 012a 2D4A     		ldr	r2, .L235+8
 2869 012c 9A63     		str	r2, [r3, #56]
2301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             {
 2870              		.loc 1 2301 0
 2871 012e A06F     		ldr	r0, [r4, #120]
 2872 0130 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2873              	.LVL232:
 2874 0134 0028     		cmp	r0, #0
 2875 0136 3FF47AAF 		beq	.L208
2304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****             }
 2876              		.loc 1 2304 0
 2877 013a A06F     		ldr	r0, [r4, #120]
 2878 013c 836B     		ldr	r3, [r0, #56]
 2879 013e 9847     		blx	r3
 2880              	.LVL233:
 2881 0140 75E7     		b	.L208
 2882              	.L225:
2315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2883              		.loc 1 2315 0
 2884 0142 2046     		mov	r0, r4
 2885 0144 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2886              	.LVL234:
 2887 0148 71E7     		b	.L208
 2888              	.L224:
2328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2889              		.loc 1 2328 0
 2890 014a 2046     		mov	r0, r4
 2891 014c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2892              	.LVL235:
 2893 0150 6DE7     		b	.L208
 2894              	.LVL236:
 2895              	.L223:
ARM GAS  /tmp/ccnYk2xI.s 			page 130


2341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2896              		.loc 1 2341 0
 2897 0152 2046     		mov	r0, r4
 2898 0154 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2899              	.LVL237:
2343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 2900              		.loc 1 2343 0
 2901 0158 0023     		movs	r3, #0
 2902 015a C4F88830 		str	r3, [r4, #136]
 2903 015e 66E7     		b	.L208
 2904              	.LVL238:
 2905              	.L212:
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2906              		.loc 1 2351 0
 2907 0160 13F4801F 		tst	r3, #1048576
 2908 0164 02D0     		beq	.L226
2351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2909              		.loc 1 2351 0 is_stmt 0 discriminator 1
 2910 0166 10F4800F 		tst	r0, #4194304
 2911 016a 0FD1     		bne	.L232
 2912              	.L226:
2369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
 2913              		.loc 1 2369 0 is_stmt 1
 2914 016c 13F0800F 		tst	r3, #128
 2915 0170 13D0     		beq	.L227
2370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
 2916              		.loc 1 2370 0
 2917 0172 15F0800F 		tst	r5, #128
 2918 0176 02D1     		bne	.L228
2371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2919              		.loc 1 2371 0
 2920 0178 10F4000F 		tst	r0, #8388608
 2921 017c 0DD0     		beq	.L227
 2922              	.L228:
2373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 2923              		.loc 1 2373 0
 2924 017e 236F     		ldr	r3, [r4, #112]
 2925              	.LVL239:
 2926 0180 002B     		cmp	r3, #0
 2927 0182 3FF454AF 		beq	.L208
2375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 2928              		.loc 1 2375 0
 2929 0186 2046     		mov	r0, r4
 2930              	.LVL240:
 2931 0188 9847     		blx	r3
 2932              	.LVL241:
 2933 018a 50E7     		b	.L208
 2934              	.LVL242:
 2935              	.L232:
2353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 2936              		.loc 1 2353 0
 2937 018c 4FF48013 		mov	r3, #1048576
 2938              	.LVL243:
 2939 0190 0B62     		str	r3, [r1, #32]
2363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2940              		.loc 1 2363 0
 2941 0192 2046     		mov	r0, r4
ARM GAS  /tmp/ccnYk2xI.s 			page 131


 2942              	.LVL244:
 2943 0194 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2944              	.LVL245:
2365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2945              		.loc 1 2365 0
 2946 0198 49E7     		b	.L208
 2947              	.LVL246:
 2948              	.L227:
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2949              		.loc 1 2381 0
 2950 019a 13F0400F 		tst	r3, #64
 2951 019e 02D0     		beq	.L229
2381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2952              		.loc 1 2381 0 is_stmt 0 discriminator 1
 2953 01a0 15F0400F 		tst	r5, #64
 2954 01a4 10D1     		bne	.L233
 2955              	.L229:
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2956              		.loc 1 2388 0 is_stmt 1
 2957 01a6 13F4000F 		tst	r3, #8388608
 2958 01aa 02D0     		beq	.L230
2388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2959              		.loc 1 2388 0 is_stmt 0 discriminator 1
 2960 01ac 15F0804F 		tst	r5, #1073741824
 2961 01b0 0ED1     		bne	.L234
 2962              	.L230:
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2963              		.loc 1 2401 0 is_stmt 1
 2964 01b2 13F0807F 		tst	r3, #16777216
 2965 01b6 3FF43AAF 		beq	.L208
2401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 2966              		.loc 1 2401 0 is_stmt 0 discriminator 1
 2967 01ba 002D     		cmp	r5, #0
 2968 01bc BFF637AF 		bge	.L208
2408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2969              		.loc 1 2408 0 is_stmt 1
 2970 01c0 2046     		mov	r0, r4
 2971              	.LVL247:
 2972 01c2 FFF7FEFF 		bl	HAL_UARTEx_RxFifoFullCallback
 2973              	.LVL248:
2410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2974              		.loc 1 2410 0
 2975 01c6 32E7     		b	.L208
 2976              	.LVL249:
 2977              	.L233:
2383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     return;
 2978              		.loc 1 2383 0
 2979 01c8 2046     		mov	r0, r4
 2980              	.LVL250:
 2981 01ca FFF7FEFF 		bl	UART_EndTransmit_IT
 2982              	.LVL251:
2384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2983              		.loc 1 2384 0
 2984 01ce 2EE7     		b	.L208
 2985              	.LVL252:
 2986              	.L234:
2395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccnYk2xI.s 			page 132


 2987              		.loc 1 2395 0
 2988 01d0 2046     		mov	r0, r4
 2989              	.LVL253:
 2990 01d2 FFF7FEFF 		bl	HAL_UARTEx_TxFifoEmptyCallback
 2991              	.LVL254:
2397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 2992              		.loc 1 2397 0
 2993 01d6 2AE7     		b	.L208
 2994              	.L236:
 2995              		.align	2
 2996              	.L235:
 2997 01d8 01000010 		.word	268435457
 2998 01dc 20010004 		.word	67109152
 2999 01e0 00000000 		.word	UART_DMAAbortOnError
 3000              		.cfi_endproc
 3001              	.LFE154:
 3003              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3004              		.align	1
 3005              		.syntax unified
 3006              		.thumb
 3007              		.thumb_func
 3008              		.fpu fpv4-sp-d16
 3010              	UART_DMAAbortOnError:
 3011              	.LFB185:
3445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3012              		.loc 1 3445 0
 3013              		.cfi_startproc
 3014              		@ args = 0, pretend = 0, frame = 0
 3015              		@ frame_needed = 0, uses_anonymous_args = 0
 3016              	.LVL255:
 3017 0000 08B5     		push	{r3, lr}
 3018              	.LCFI22:
 3019              		.cfi_def_cfa_offset 8
 3020              		.cfi_offset 3, -8
 3021              		.cfi_offset 14, -4
3446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3022              		.loc 1 3446 0
 3023 0002 806A     		ldr	r0, [r0, #40]
 3024              	.LVL256:
3447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3025              		.loc 1 3447 0
 3026 0004 0023     		movs	r3, #0
 3027 0006 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3028              		.loc 1 3448 0
 3029 000a A0F85630 		strh	r3, [r0, #86]	@ movhi
3455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3030              		.loc 1 3455 0
 3031 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3032              	.LVL257:
3457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3033              		.loc 1 3457 0
 3034 0012 08BD     		pop	{r3, pc}
 3035              		.cfi_endproc
 3036              	.LFE185:
 3038              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3039              		.align	1
ARM GAS  /tmp/ccnYk2xI.s 			page 133


 3040              		.weak	HAL_UART_AbortCpltCallback
 3041              		.syntax unified
 3042              		.thumb
 3043              		.thumb_func
 3044              		.fpu fpv4-sp-d16
 3046              	HAL_UART_AbortCpltCallback:
 3047              	.LFB160:
2495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3048              		.loc 1 2495 0
 3049              		.cfi_startproc
 3050              		@ args = 0, pretend = 0, frame = 0
 3051              		@ frame_needed = 0, uses_anonymous_args = 0
 3052              		@ link register save eliminated.
 3053              	.LVL258:
2502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3054              		.loc 1 2502 0
 3055 0000 7047     		bx	lr
 3056              		.cfi_endproc
 3057              	.LFE160:
 3059              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3060              		.align	1
 3061              		.global	HAL_UART_Abort_IT
 3062              		.syntax unified
 3063              		.thumb
 3064              		.thumb_func
 3065              		.fpu fpv4-sp-d16
 3067              	HAL_UART_Abort_IT:
 3068              	.LFB151:
1869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 3069              		.loc 1 1869 0
 3070              		.cfi_startproc
 3071              		@ args = 0, pretend = 0, frame = 0
 3072              		@ frame_needed = 0, uses_anonymous_args = 0
 3073              	.LVL259:
 3074 0000 10B5     		push	{r4, lr}
 3075              	.LCFI23:
 3076              		.cfi_def_cfa_offset 8
 3077              		.cfi_offset 4, -8
 3078              		.cfi_offset 14, -4
 3079 0002 0446     		mov	r4, r0
 3080              	.LVL260:
1873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****                                    USART_CR1_TXEIE_TXFNFIE));
 3081              		.loc 1 1873 0
 3082 0004 0268     		ldr	r2, [r0]
 3083 0006 1368     		ldr	r3, [r2]
 3084 0008 23F4F073 		bic	r3, r3, #480
 3085 000c 1360     		str	r3, [r2]
1875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3086              		.loc 1 1875 0
 3087 000e 0268     		ldr	r2, [r0]
 3088 0010 9368     		ldr	r3, [r2, #8]
 3089 0012 23F08453 		bic	r3, r3, #276824064
 3090 0016 23F00103 		bic	r3, r3, #1
 3091 001a 9360     		str	r3, [r2, #8]
1880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3092              		.loc 1 1880 0
 3093 001c 436F     		ldr	r3, [r0, #116]
ARM GAS  /tmp/ccnYk2xI.s 			page 134


 3094 001e 33B1     		cbz	r3, .L241
1884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3095              		.loc 1 1884 0
 3096 0020 0268     		ldr	r2, [r0]
 3097 0022 9268     		ldr	r2, [r2, #8]
 3098 0024 12F0800F 		tst	r2, #128
 3099 0028 1FD0     		beq	.L242
1886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3100              		.loc 1 1886 0
 3101 002a 324A     		ldr	r2, .L255
 3102 002c 9A63     		str	r2, [r3, #56]
 3103              	.L241:
1894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3104              		.loc 1 1894 0
 3105 002e A36F     		ldr	r3, [r4, #120]
 3106 0030 33B1     		cbz	r3, .L243
1898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3107              		.loc 1 1898 0
 3108 0032 2268     		ldr	r2, [r4]
 3109 0034 9268     		ldr	r2, [r2, #8]
 3110 0036 12F0400F 		tst	r2, #64
 3111 003a 19D0     		beq	.L244
1900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3112              		.loc 1 1900 0
 3113 003c 2E4A     		ldr	r2, .L255+4
 3114 003e 9A63     		str	r2, [r3, #56]
 3115              	.L243:
1909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3116              		.loc 1 1909 0
 3117 0040 2368     		ldr	r3, [r4]
 3118 0042 9A68     		ldr	r2, [r3, #8]
 3119 0044 12F0800F 		tst	r2, #128
 3120 0048 15D0     		beq	.L250
1912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3121              		.loc 1 1912 0
 3122 004a 9A68     		ldr	r2, [r3, #8]
 3123 004c 22F08002 		bic	r2, r2, #128
 3124 0050 9A60     		str	r2, [r3, #8]
1915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3125              		.loc 1 1915 0
 3126 0052 606F     		ldr	r0, [r4, #116]
 3127              	.LVL261:
 3128 0054 0028     		cmp	r0, #0
 3129 0056 3ED0     		beq	.L251
1921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3130              		.loc 1 1921 0
 3131 0058 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3132              	.LVL262:
 3133 005c 0028     		cmp	r0, #0
 3134 005e 3CD0     		beq	.L252
1923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3135              		.loc 1 1923 0
 3136 0060 636F     		ldr	r3, [r4, #116]
 3137 0062 0022     		movs	r2, #0
 3138 0064 9A63     		str	r2, [r3, #56]
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3139              		.loc 1 1870 0
ARM GAS  /tmp/ccnYk2xI.s 			page 135


 3140 0066 0121     		movs	r1, #1
 3141 0068 06E0     		b	.L245
 3142              	.LVL263:
 3143              	.L242:
1890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3144              		.loc 1 1890 0
 3145 006a 0022     		movs	r2, #0
 3146 006c 9A63     		str	r2, [r3, #56]
 3147 006e DEE7     		b	.L241
 3148              	.L244:
1904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3149              		.loc 1 1904 0
 3150 0070 0022     		movs	r2, #0
 3151 0072 9A63     		str	r2, [r3, #56]
 3152 0074 E4E7     		b	.L243
 3153              	.L250:
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3154              		.loc 1 1870 0
 3155 0076 0121     		movs	r1, #1
 3156              	.LVL264:
 3157              	.L245:
1933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3158              		.loc 1 1933 0
 3159 0078 2368     		ldr	r3, [r4]
 3160 007a 9A68     		ldr	r2, [r3, #8]
 3161 007c 12F0400F 		tst	r2, #64
 3162 0080 2DD0     		beq	.L246
1935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3163              		.loc 1 1935 0
 3164 0082 9A68     		ldr	r2, [r3, #8]
 3165 0084 22F04002 		bic	r2, r2, #64
 3166 0088 9A60     		str	r2, [r3, #8]
1938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3167              		.loc 1 1938 0
 3168 008a A06F     		ldr	r0, [r4, #120]
 3169 008c 38B3     		cbz	r0, .L246
1944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3170              		.loc 1 1944 0
 3171 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3172              	.LVL265:
 3173 0092 30B3     		cbz	r0, .L247
1946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         abortcplt = 1U;
 3174              		.loc 1 1946 0
 3175 0094 A36F     		ldr	r3, [r4, #120]
 3176 0096 0022     		movs	r2, #0
 3177 0098 9A63     		str	r2, [r3, #56]
 3178              	.LVL266:
 3179              	.L248:
1960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3180              		.loc 1 1960 0
 3181 009a 0023     		movs	r3, #0
 3182 009c A4F85630 		strh	r3, [r4, #86]	@ movhi
1961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3183              		.loc 1 1961 0
 3184 00a0 A4F85E30 		strh	r3, [r4, #94]	@ movhi
1964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxISR = NULL;
 3185              		.loc 1 1964 0
ARM GAS  /tmp/ccnYk2xI.s 			page 136


 3186 00a4 E366     		str	r3, [r4, #108]
1965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3187              		.loc 1 1965 0
 3188 00a6 2367     		str	r3, [r4, #112]
1968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3189              		.loc 1 1968 0
 3190 00a8 C4F88830 		str	r3, [r4, #136]
1971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3191              		.loc 1 1971 0
 3192 00ac 2368     		ldr	r3, [r4]
 3193 00ae 0F22     		movs	r2, #15
 3194 00b0 1A62     		str	r2, [r3, #32]
1974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3195              		.loc 1 1974 0
 3196 00b2 636E     		ldr	r3, [r4, #100]
 3197 00b4 B3F1005F 		cmp	r3, #536870912
 3198 00b8 15D0     		beq	.L254
 3199              	.L249:
1980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3200              		.loc 1 1980 0
 3201 00ba 2268     		ldr	r2, [r4]
 3202 00bc 9369     		ldr	r3, [r2, #24]
 3203 00be 43F00803 		orr	r3, r3, #8
 3204 00c2 9361     		str	r3, [r2, #24]
1983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3205              		.loc 1 1983 0
 3206 00c4 2023     		movs	r3, #32
 3207 00c6 C4F88030 		str	r3, [r4, #128]
1984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3208              		.loc 1 1984 0
 3209 00ca C4F88430 		str	r3, [r4, #132]
1992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3210              		.loc 1 1992 0
 3211 00ce 2046     		mov	r0, r4
 3212 00d0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3213              	.LVL267:
 3214 00d4 05E0     		b	.L247
 3215              	.LVL268:
 3216              	.L251:
1870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3217              		.loc 1 1870 0
 3218 00d6 0121     		movs	r1, #1
 3219 00d8 CEE7     		b	.L245
 3220              	.L252:
1927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3221              		.loc 1 1927 0
 3222 00da 0021     		movs	r1, #0
 3223 00dc CCE7     		b	.L245
 3224              	.LVL269:
 3225              	.L246:
1957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3226              		.loc 1 1957 0
 3227 00de 0029     		cmp	r1, #0
 3228 00e0 DBD1     		bne	.L248
 3229              	.LVL270:
 3230              	.L247:
1997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 137


 3231              		.loc 1 1997 0
 3232 00e2 0020     		movs	r0, #0
 3233 00e4 10BD     		pop	{r4, pc}
 3234              	.LVL271:
 3235              	.L254:
1976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3236              		.loc 1 1976 0
 3237 00e6 2268     		ldr	r2, [r4]
 3238 00e8 9369     		ldr	r3, [r2, #24]
 3239 00ea 43F01003 		orr	r3, r3, #16
 3240 00ee 9361     		str	r3, [r2, #24]
 3241 00f0 E3E7     		b	.L249
 3242              	.L256:
 3243 00f2 00BF     		.align	2
 3244              	.L255:
 3245 00f4 00000000 		.word	UART_DMATxAbortCallback
 3246 00f8 00000000 		.word	UART_DMARxAbortCallback
 3247              		.cfi_endproc
 3248              	.LFE151:
 3250              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3251              		.align	1
 3252              		.syntax unified
 3253              		.thumb
 3254              		.thumb_func
 3255              		.fpu fpv4-sp-d16
 3257              	UART_DMARxAbortCallback:
 3258              	.LFB187:
3522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3259              		.loc 1 3522 0
 3260              		.cfi_startproc
 3261              		@ args = 0, pretend = 0, frame = 0
 3262              		@ frame_needed = 0, uses_anonymous_args = 0
 3263              	.LVL272:
 3264 0000 08B5     		push	{r3, lr}
 3265              	.LCFI24:
 3266              		.cfi_def_cfa_offset 8
 3267              		.cfi_offset 3, -8
 3268              		.cfi_offset 14, -4
3523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3269              		.loc 1 3523 0
 3270 0002 806A     		ldr	r0, [r0, #40]
 3271              	.LVL273:
3525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3272              		.loc 1 3525 0
 3273 0004 836F     		ldr	r3, [r0, #120]
 3274 0006 0022     		movs	r2, #0
 3275 0008 9A63     		str	r2, [r3, #56]
3528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3276              		.loc 1 3528 0
 3277 000a 436F     		ldr	r3, [r0, #116]
 3278 000c 13B1     		cbz	r3, .L258
3530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3279              		.loc 1 3530 0
 3280 000e 9B6B     		ldr	r3, [r3, #56]
 3281 0010 03B1     		cbz	r3, .L258
 3282              	.LVL274:
 3283              	.L257:
ARM GAS  /tmp/ccnYk2xI.s 			page 138


3561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3284              		.loc 1 3561 0
 3285 0012 08BD     		pop	{r3, pc}
 3286              	.LVL275:
 3287              	.L258:
3537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3288              		.loc 1 3537 0
 3289 0014 0023     		movs	r3, #0
 3290 0016 A0F85630 		strh	r3, [r0, #86]	@ movhi
3538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3291              		.loc 1 3538 0
 3292 001a A0F85E30 		strh	r3, [r0, #94]	@ movhi
3541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3293              		.loc 1 3541 0
 3294 001e C0F88830 		str	r3, [r0, #136]
3544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3295              		.loc 1 3544 0
 3296 0022 0368     		ldr	r3, [r0]
 3297 0024 0F22     		movs	r2, #15
 3298 0026 1A62     		str	r2, [r3, #32]
3547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3299              		.loc 1 3547 0
 3300 0028 0268     		ldr	r2, [r0]
 3301 002a 9369     		ldr	r3, [r2, #24]
 3302 002c 43F00803 		orr	r3, r3, #8
 3303 0030 9361     		str	r3, [r2, #24]
3550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3304              		.loc 1 3550 0
 3305 0032 2023     		movs	r3, #32
 3306 0034 C0F88030 		str	r3, [r0, #128]
3551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3307              		.loc 1 3551 0
 3308 0038 C0F88430 		str	r3, [r0, #132]
3559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3309              		.loc 1 3559 0
 3310 003c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3311              	.LVL276:
 3312 0040 E7E7     		b	.L257
 3313              		.cfi_endproc
 3314              	.LFE187:
 3316              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3317              		.align	1
 3318              		.syntax unified
 3319              		.thumb
 3320              		.thumb_func
 3321              		.fpu fpv4-sp-d16
 3323              	UART_DMATxAbortCallback:
 3324              	.LFB186:
3468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3325              		.loc 1 3468 0
 3326              		.cfi_startproc
 3327              		@ args = 0, pretend = 0, frame = 0
 3328              		@ frame_needed = 0, uses_anonymous_args = 0
 3329              	.LVL277:
 3330 0000 08B5     		push	{r3, lr}
 3331              	.LCFI25:
 3332              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccnYk2xI.s 			page 139


 3333              		.cfi_offset 3, -8
 3334              		.cfi_offset 14, -4
3469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3335              		.loc 1 3469 0
 3336 0002 806A     		ldr	r0, [r0, #40]
 3337              	.LVL278:
3471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3338              		.loc 1 3471 0
 3339 0004 436F     		ldr	r3, [r0, #116]
 3340 0006 0022     		movs	r2, #0
 3341 0008 9A63     		str	r2, [r3, #56]
3474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3342              		.loc 1 3474 0
 3343 000a 836F     		ldr	r3, [r0, #120]
 3344 000c 0BB1     		cbz	r3, .L262
3476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3345              		.loc 1 3476 0
 3346 000e 9B6B     		ldr	r3, [r3, #56]
 3347 0010 A3B9     		cbnz	r3, .L261
 3348              	.L262:
3483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3349              		.loc 1 3483 0
 3350 0012 0023     		movs	r3, #0
 3351 0014 A0F85630 		strh	r3, [r0, #86]	@ movhi
3484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3352              		.loc 1 3484 0
 3353 0018 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3354              		.loc 1 3487 0
 3355 001c C0F88830 		str	r3, [r0, #136]
3490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3356              		.loc 1 3490 0
 3357 0020 0368     		ldr	r3, [r0]
 3358 0022 0F22     		movs	r2, #15
 3359 0024 1A62     		str	r2, [r3, #32]
3493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3360              		.loc 1 3493 0
 3361 0026 436E     		ldr	r3, [r0, #100]
 3362 0028 B3F1005F 		cmp	r3, #536870912
 3363 002c 07D0     		beq	.L266
 3364              	.L264:
3499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3365              		.loc 1 3499 0
 3366 002e 2023     		movs	r3, #32
 3367 0030 C0F88030 		str	r3, [r0, #128]
3500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3368              		.loc 1 3500 0
 3369 0034 C0F88430 		str	r3, [r0, #132]
3508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3370              		.loc 1 3508 0
 3371 0038 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3372              	.LVL279:
 3373              	.L261:
3510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3374              		.loc 1 3510 0
 3375 003c 08BD     		pop	{r3, pc}
 3376              	.LVL280:
ARM GAS  /tmp/ccnYk2xI.s 			page 140


 3377              	.L266:
3495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3378              		.loc 1 3495 0
 3379 003e 0268     		ldr	r2, [r0]
 3380 0040 9369     		ldr	r3, [r2, #24]
 3381 0042 43F01003 		orr	r3, r3, #16
 3382 0046 9361     		str	r3, [r2, #24]
 3383 0048 F1E7     		b	.L264
 3384              		.cfi_endproc
 3385              	.LFE186:
 3387              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3388              		.align	1
 3389              		.weak	HAL_UART_AbortTransmitCpltCallback
 3390              		.syntax unified
 3391              		.thumb
 3392              		.thumb_func
 3393              		.fpu fpv4-sp-d16
 3395              	HAL_UART_AbortTransmitCpltCallback:
 3396              	.LFB161:
2510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3397              		.loc 1 2510 0
 3398              		.cfi_startproc
 3399              		@ args = 0, pretend = 0, frame = 0
 3400              		@ frame_needed = 0, uses_anonymous_args = 0
 3401              		@ link register save eliminated.
 3402              	.LVL281:
2517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3403              		.loc 1 2517 0
 3404 0000 7047     		bx	lr
 3405              		.cfi_endproc
 3406              	.LFE161:
 3408              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3409              		.align	1
 3410              		.global	HAL_UART_AbortTransmit_IT
 3411              		.syntax unified
 3412              		.thumb
 3413              		.thumb_func
 3414              		.fpu fpv4-sp-d16
 3416              	HAL_UART_AbortTransmit_IT:
 3417              	.LFB152:
2014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable interrupts */
 3418              		.loc 1 2014 0
 3419              		.cfi_startproc
 3420              		@ args = 0, pretend = 0, frame = 0
 3421              		@ frame_needed = 0, uses_anonymous_args = 0
 3422              	.LVL282:
 3423 0000 10B5     		push	{r4, lr}
 3424              	.LCFI26:
 3425              		.cfi_def_cfa_offset 8
 3426              		.cfi_offset 4, -8
 3427              		.cfi_offset 14, -4
 3428 0002 0446     		mov	r4, r0
2016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
 3429              		.loc 1 2016 0
 3430 0004 0268     		ldr	r2, [r0]
 3431 0006 1368     		ldr	r3, [r2]
 3432 0008 23F0C003 		bic	r3, r3, #192
ARM GAS  /tmp/ccnYk2xI.s 			page 141


 3433 000c 1360     		str	r3, [r2]
2017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3434              		.loc 1 2017 0
 3435 000e 0268     		ldr	r2, [r0]
 3436 0010 9368     		ldr	r3, [r2, #8]
 3437 0012 23F40003 		bic	r3, r3, #8388608
 3438 0016 9360     		str	r3, [r2, #8]
2020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3439              		.loc 1 2020 0
 3440 0018 0368     		ldr	r3, [r0]
 3441 001a 9A68     		ldr	r2, [r3, #8]
 3442 001c 12F0800F 		tst	r2, #128
 3443 0020 19D0     		beq	.L269
2022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3444              		.loc 1 2022 0
 3445 0022 9A68     		ldr	r2, [r3, #8]
 3446 0024 22F08002 		bic	r2, r2, #128
 3447 0028 9A60     		str	r2, [r3, #8]
2025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3448              		.loc 1 2025 0
 3449 002a 436F     		ldr	r3, [r0, #116]
 3450 002c 4BB1     		cbz	r3, .L270
2029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3451              		.loc 1 2029 0
 3452 002e 144A     		ldr	r2, .L275
 3453 0030 9A63     		str	r2, [r3, #56]
2032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3454              		.loc 1 2032 0
 3455 0032 406F     		ldr	r0, [r0, #116]
 3456              	.LVL283:
 3457 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3458              	.LVL284:
 3459 0038 D8B1     		cbz	r0, .L271
2035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3460              		.loc 1 2035 0
 3461 003a 606F     		ldr	r0, [r4, #116]
 3462 003c 836B     		ldr	r3, [r0, #56]
 3463 003e 9847     		blx	r3
 3464              	.LVL285:
 3465 0040 17E0     		b	.L271
 3466              	.LVL286:
 3467              	.L270:
2041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3468              		.loc 1 2041 0
 3469 0042 0023     		movs	r3, #0
 3470 0044 A0F85630 		strh	r3, [r0, #86]	@ movhi
2044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3471              		.loc 1 2044 0
 3472 0048 0367     		str	r3, [r0, #112]
2047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3473              		.loc 1 2047 0
 3474 004a 2023     		movs	r3, #32
 3475 004c C0F88030 		str	r3, [r0, #128]
2055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3476              		.loc 1 2055 0
 3477 0050 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3478              	.LVL287:
ARM GAS  /tmp/ccnYk2xI.s 			page 142


 3479 0054 0DE0     		b	.L271
 3480              	.LVL288:
 3481              	.L269:
2062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3482              		.loc 1 2062 0
 3483 0056 0022     		movs	r2, #0
 3484 0058 A0F85620 		strh	r2, [r0, #86]	@ movhi
2065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3485              		.loc 1 2065 0
 3486 005c 0267     		str	r2, [r0, #112]
2068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3487              		.loc 1 2068 0
 3488 005e 426E     		ldr	r2, [r0, #100]
 3489 0060 B2F1005F 		cmp	r2, #536870912
 3490 0064 07D0     		beq	.L274
 3491              	.L272:
2074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3492              		.loc 1 2074 0
 3493 0066 2023     		movs	r3, #32
 3494 0068 C4F88030 		str	r3, [r4, #128]
2082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3495              		.loc 1 2082 0
 3496 006c 2046     		mov	r0, r4
 3497              	.LVL289:
 3498 006e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3499              	.LVL290:
 3500              	.L271:
2087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3501              		.loc 1 2087 0
 3502 0072 0020     		movs	r0, #0
 3503 0074 10BD     		pop	{r4, pc}
 3504              	.LVL291:
 3505              	.L274:
2070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3506              		.loc 1 2070 0
 3507 0076 9A69     		ldr	r2, [r3, #24]
 3508 0078 42F01002 		orr	r2, r2, #16
 3509 007c 9A61     		str	r2, [r3, #24]
 3510 007e F2E7     		b	.L272
 3511              	.L276:
 3512              		.align	2
 3513              	.L275:
 3514 0080 00000000 		.word	UART_DMATxOnlyAbortCallback
 3515              		.cfi_endproc
 3516              	.LFE152:
 3518              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3519              		.align	1
 3520              		.syntax unified
 3521              		.thumb
 3522              		.thumb_func
 3523              		.fpu fpv4-sp-d16
 3525              	UART_DMATxOnlyAbortCallback:
 3526              	.LFB188:
3573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3527              		.loc 1 3573 0
 3528              		.cfi_startproc
 3529              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccnYk2xI.s 			page 143


 3530              		@ frame_needed = 0, uses_anonymous_args = 0
 3531              	.LVL292:
 3532 0000 08B5     		push	{r3, lr}
 3533              	.LCFI27:
 3534              		.cfi_def_cfa_offset 8
 3535              		.cfi_offset 3, -8
 3536              		.cfi_offset 14, -4
3574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3537              		.loc 1 3574 0
 3538 0002 806A     		ldr	r0, [r0, #40]
 3539              	.LVL293:
3576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3540              		.loc 1 3576 0
 3541 0004 0023     		movs	r3, #0
 3542 0006 A0F85630 		strh	r3, [r0, #86]	@ movhi
3579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3543              		.loc 1 3579 0
 3544 000a 436E     		ldr	r3, [r0, #100]
 3545 000c B3F1005F 		cmp	r3, #536870912
 3546 0010 05D0     		beq	.L280
 3547              	.L278:
3585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3548              		.loc 1 3585 0
 3549 0012 2023     		movs	r3, #32
 3550 0014 C0F88030 		str	r3, [r0, #128]
3593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3551              		.loc 1 3593 0
 3552 0018 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3553              	.LVL294:
3595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3554              		.loc 1 3595 0
 3555 001c 08BD     		pop	{r3, pc}
 3556              	.LVL295:
 3557              	.L280:
3581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3558              		.loc 1 3581 0
 3559 001e 0268     		ldr	r2, [r0]
 3560 0020 9369     		ldr	r3, [r2, #24]
 3561 0022 43F01003 		orr	r3, r3, #16
 3562 0026 9361     		str	r3, [r2, #24]
 3563 0028 F3E7     		b	.L278
 3564              		.cfi_endproc
 3565              	.LFE188:
 3567              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3568              		.align	1
 3569              		.weak	HAL_UART_AbortReceiveCpltCallback
 3570              		.syntax unified
 3571              		.thumb
 3572              		.thumb_func
 3573              		.fpu fpv4-sp-d16
 3575              	HAL_UART_AbortReceiveCpltCallback:
 3576              	.LFB162:
2525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3577              		.loc 1 2525 0
 3578              		.cfi_startproc
 3579              		@ args = 0, pretend = 0, frame = 0
 3580              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccnYk2xI.s 			page 144


 3581              		@ link register save eliminated.
 3582              	.LVL296:
2532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3583              		.loc 1 2532 0
 3584 0000 7047     		bx	lr
 3585              		.cfi_endproc
 3586              	.LFE162:
 3588              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3589              		.align	1
 3590              		.global	HAL_UART_AbortReceive_IT
 3591              		.syntax unified
 3592              		.thumb
 3593              		.thumb_func
 3594              		.fpu fpv4-sp-d16
 3596              	HAL_UART_AbortReceive_IT:
 3597              	.LFB153:
2104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3598              		.loc 1 2104 0
 3599              		.cfi_startproc
 3600              		@ args = 0, pretend = 0, frame = 0
 3601              		@ frame_needed = 0, uses_anonymous_args = 0
 3602              	.LVL297:
 3603 0000 10B5     		push	{r4, lr}
 3604              	.LCFI28:
 3605              		.cfi_def_cfa_offset 8
 3606              		.cfi_offset 4, -8
 3607              		.cfi_offset 14, -4
 3608 0002 0446     		mov	r4, r0
2106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 3609              		.loc 1 2106 0
 3610 0004 0268     		ldr	r2, [r0]
 3611 0006 1368     		ldr	r3, [r2]
 3612 0008 23F49073 		bic	r3, r3, #288
 3613 000c 1360     		str	r3, [r2]
2107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3614              		.loc 1 2107 0
 3615 000e 0268     		ldr	r2, [r0]
 3616 0010 9368     		ldr	r3, [r2, #8]
 3617 0012 23F08053 		bic	r3, r3, #268435456
 3618 0016 23F00103 		bic	r3, r3, #1
 3619 001a 9360     		str	r3, [r2, #8]
2110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3620              		.loc 1 2110 0
 3621 001c 0368     		ldr	r3, [r0]
 3622 001e 9A68     		ldr	r2, [r3, #8]
 3623 0020 12F0400F 		tst	r2, #64
 3624 0024 22D0     		beq	.L283
2112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3625              		.loc 1 2112 0
 3626 0026 9A68     		ldr	r2, [r3, #8]
 3627 0028 22F04002 		bic	r2, r2, #64
 3628 002c 9A60     		str	r2, [r3, #8]
2115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3629              		.loc 1 2115 0
 3630 002e 836F     		ldr	r3, [r0, #120]
 3631 0030 53B1     		cbz	r3, .L284
2119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 145


 3632              		.loc 1 2119 0
 3633 0032 144A     		ldr	r2, .L287
 3634 0034 9A63     		str	r2, [r3, #56]
2122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 3635              		.loc 1 2122 0
 3636 0036 806F     		ldr	r0, [r0, #120]
 3637              	.LVL298:
 3638 0038 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3639              	.LVL299:
 3640 003c 10B1     		cbz	r0, .L285
2125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 3641              		.loc 1 2125 0
 3642 003e A06F     		ldr	r0, [r4, #120]
 3643 0040 836B     		ldr	r3, [r0, #56]
 3644 0042 9847     		blx	r3
 3645              	.LVL300:
 3646              	.L285:
2180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3647              		.loc 1 2180 0
 3648 0044 0020     		movs	r0, #0
 3649 0046 10BD     		pop	{r4, pc}
 3650              	.LVL301:
 3651              	.L284:
2131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3652              		.loc 1 2131 0
 3653 0048 0023     		movs	r3, #0
 3654 004a A0F85E30 		strh	r3, [r0, #94]	@ movhi
2134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3655              		.loc 1 2134 0
 3656 004e 8365     		str	r3, [r0, #88]
2137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3657              		.loc 1 2137 0
 3658 0050 0368     		ldr	r3, [r0]
 3659 0052 0F22     		movs	r2, #15
 3660 0054 1A62     		str	r2, [r3, #32]
2140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3661              		.loc 1 2140 0
 3662 0056 0268     		ldr	r2, [r0]
 3663 0058 9369     		ldr	r3, [r2, #24]
 3664 005a 43F00803 		orr	r3, r3, #8
 3665 005e 9361     		str	r3, [r2, #24]
2143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3666              		.loc 1 2143 0
 3667 0060 2023     		movs	r3, #32
 3668 0062 C0F88430 		str	r3, [r0, #132]
2151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3669              		.loc 1 2151 0
 3670 0066 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3671              	.LVL302:
 3672 006a EBE7     		b	.L285
 3673              	.LVL303:
 3674              	.L283:
2158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3675              		.loc 1 2158 0
 3676 006c 0022     		movs	r2, #0
 3677 006e A0F85E20 		strh	r2, [r0, #94]	@ movhi
2161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 146


 3678              		.loc 1 2161 0
 3679 0072 8265     		str	r2, [r0, #88]
2164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3680              		.loc 1 2164 0
 3681 0074 0F22     		movs	r2, #15
 3682 0076 1A62     		str	r2, [r3, #32]
2167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3683              		.loc 1 2167 0
 3684 0078 2023     		movs	r3, #32
 3685 007a C0F88430 		str	r3, [r0, #132]
2175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3686              		.loc 1 2175 0
 3687 007e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3688              	.LVL304:
 3689 0082 DFE7     		b	.L285
 3690              	.L288:
 3691              		.align	2
 3692              	.L287:
 3693 0084 00000000 		.word	UART_DMARxOnlyAbortCallback
 3694              		.cfi_endproc
 3695              	.LFE153:
 3697              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3698              		.align	1
 3699              		.syntax unified
 3700              		.thumb
 3701              		.thumb_func
 3702              		.fpu fpv4-sp-d16
 3704              	UART_DMARxOnlyAbortCallback:
 3705              	.LFB189:
3606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3706              		.loc 1 3606 0
 3707              		.cfi_startproc
 3708              		@ args = 0, pretend = 0, frame = 0
 3709              		@ frame_needed = 0, uses_anonymous_args = 0
 3710              	.LVL305:
 3711 0000 08B5     		push	{r3, lr}
 3712              	.LCFI29:
 3713              		.cfi_def_cfa_offset 8
 3714              		.cfi_offset 3, -8
 3715              		.cfi_offset 14, -4
3607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3716              		.loc 1 3607 0
 3717 0002 806A     		ldr	r0, [r0, #40]
 3718              	.LVL306:
3609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3719              		.loc 1 3609 0
 3720 0004 0023     		movs	r3, #0
 3721 0006 A0F85E30 		strh	r3, [r0, #94]	@ movhi
3612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3722              		.loc 1 3612 0
 3723 000a 0368     		ldr	r3, [r0]
 3724 000c 0F22     		movs	r2, #15
 3725 000e 1A62     		str	r2, [r3, #32]
3615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3726              		.loc 1 3615 0
 3727 0010 0268     		ldr	r2, [r0]
 3728 0012 9369     		ldr	r3, [r2, #24]
ARM GAS  /tmp/ccnYk2xI.s 			page 147


 3729 0014 43F00803 		orr	r3, r3, #8
 3730 0018 9361     		str	r3, [r2, #24]
3618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3731              		.loc 1 3618 0
 3732 001a 2023     		movs	r3, #32
 3733 001c C0F88430 		str	r3, [r0, #132]
3626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3734              		.loc 1 3626 0
 3735 0020 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3736              	.LVL307:
3628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3737              		.loc 1 3628 0
 3738 0024 08BD     		pop	{r3, pc}
 3739              		.cfi_endproc
 3740              	.LFE189:
 3742              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 3743              		.align	1
 3744              		.global	HAL_UART_ReceiverTimeout_Config
 3745              		.syntax unified
 3746              		.thumb
 3747              		.thumb_func
 3748              		.fpu fpv4-sp-d16
 3750              	HAL_UART_ReceiverTimeout_Config:
 3751              	.LFB163:
2572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3752              		.loc 1 2572 0
 3753              		.cfi_startproc
 3754              		@ args = 0, pretend = 0, frame = 0
 3755              		@ frame_needed = 0, uses_anonymous_args = 0
 3756              	.LVL308:
 3757 0000 38B5     		push	{r3, r4, r5, lr}
 3758              	.LCFI30:
 3759              		.cfi_def_cfa_offset 16
 3760              		.cfi_offset 3, -16
 3761              		.cfi_offset 4, -12
 3762              		.cfi_offset 5, -8
 3763              		.cfi_offset 14, -4
2573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3764              		.loc 1 2573 0
 3765 0002 0268     		ldr	r2, [r0]
 3766 0004 0A4B     		ldr	r3, .L296
 3767 0006 9A42     		cmp	r2, r3
 3768 0008 0AD0     		beq	.L291
 3769 000a 0D46     		mov	r5, r1
 3770 000c 0446     		mov	r4, r0
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 3771              		.loc 1 2575 0
 3772 000e B1F1807F 		cmp	r1, #16777216
 3773 0012 06D2     		bcs	.L295
 3774              	.LVL309:
 3775              	.L293:
2576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3776              		.loc 1 2576 0
 3777 0014 2268     		ldr	r2, [r4]
 3778 0016 5369     		ldr	r3, [r2, #20]
 3779 0018 03F07F43 		and	r3, r3, #-16777216
 3780 001c 2B43     		orrs	r3, r3, r5
ARM GAS  /tmp/ccnYk2xI.s 			page 148


 3781 001e 5361     		str	r3, [r2, #20]
 3782              	.LVL310:
 3783              	.L291:
2578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3784              		.loc 1 2578 0
 3785 0020 38BD     		pop	{r3, r4, r5, pc}
 3786              	.LVL311:
 3787              	.L295:
2575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
 3788              		.loc 1 2575 0 discriminator 1
 3789 0022 40F60F21 		movw	r1, #2575
 3790              	.LVL312:
 3791 0026 0348     		ldr	r0, .L296+4
 3792              	.LVL313:
 3793 0028 FFF7FEFF 		bl	assert_failed
 3794              	.LVL314:
 3795 002c F2E7     		b	.L293
 3796              	.L297:
 3797 002e 00BF     		.align	2
 3798              	.L296:
 3799 0030 00800040 		.word	1073774592
 3800 0034 00000000 		.word	.LC0
 3801              		.cfi_endproc
 3802              	.LFE163:
 3804              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 3805              		.align	1
 3806              		.global	HAL_UART_EnableReceiverTimeout
 3807              		.syntax unified
 3808              		.thumb
 3809              		.thumb_func
 3810              		.fpu fpv4-sp-d16
 3812              	HAL_UART_EnableReceiverTimeout:
 3813              	.LFB164:
2587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3814              		.loc 1 2587 0
 3815              		.cfi_startproc
 3816              		@ args = 0, pretend = 0, frame = 0
 3817              		@ frame_needed = 0, uses_anonymous_args = 0
 3818              		@ link register save eliminated.
 3819              	.LVL315:
2588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3820              		.loc 1 2588 0
 3821 0000 0368     		ldr	r3, [r0]
 3822 0002 114A     		ldr	r2, .L303
 3823 0004 9342     		cmp	r3, r2
 3824 0006 19D0     		beq	.L300
2590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3825              		.loc 1 2590 0
 3826 0008 D0F88020 		ldr	r2, [r0, #128]
 3827 000c 202A     		cmp	r2, #32
 3828 000e 17D1     		bne	.L301
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3829              		.loc 1 2593 0
 3830 0010 90F87C20 		ldrb	r2, [r0, #124]	@ zero_extendqisi2
 3831 0014 012A     		cmp	r2, #1
 3832 0016 15D0     		beq	.L302
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 149


 3833              		.loc 1 2593 0 is_stmt 0 discriminator 2
 3834 0018 0122     		movs	r2, #1
 3835 001a 80F87C20 		strb	r2, [r0, #124]
2595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3836              		.loc 1 2595 0 is_stmt 1 discriminator 2
 3837 001e 2422     		movs	r2, #36
 3838 0020 C0F88020 		str	r2, [r0, #128]
2598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3839              		.loc 1 2598 0 discriminator 2
 3840 0024 5A68     		ldr	r2, [r3, #4]
 3841 0026 42F40002 		orr	r2, r2, #8388608
 3842 002a 5A60     		str	r2, [r3, #4]
2600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3843              		.loc 1 2600 0 discriminator 2
 3844 002c 2023     		movs	r3, #32
 3845 002e C0F88030 		str	r3, [r0, #128]
2603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3846              		.loc 1 2603 0 discriminator 2
 3847 0032 0023     		movs	r3, #0
 3848 0034 80F87C30 		strb	r3, [r0, #124]
2605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3849              		.loc 1 2605 0 discriminator 2
 3850 0038 1846     		mov	r0, r3
 3851              	.LVL316:
 3852 003a 7047     		bx	lr
 3853              	.LVL317:
 3854              	.L300:
2614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3855              		.loc 1 2614 0
 3856 003c 0120     		movs	r0, #1
 3857              	.LVL318:
 3858 003e 7047     		bx	lr
 3859              	.LVL319:
 3860              	.L301:
2609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3861              		.loc 1 2609 0
 3862 0040 0220     		movs	r0, #2
 3863              	.LVL320:
 3864 0042 7047     		bx	lr
 3865              	.LVL321:
 3866              	.L302:
2593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3867              		.loc 1 2593 0
 3868 0044 0220     		movs	r0, #2
 3869              	.LVL322:
2616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3870              		.loc 1 2616 0
 3871 0046 7047     		bx	lr
 3872              	.L304:
 3873              		.align	2
 3874              	.L303:
 3875 0048 00800040 		.word	1073774592
 3876              		.cfi_endproc
 3877              	.LFE164:
 3879              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 3880              		.align	1
 3881              		.global	HAL_UART_DisableReceiverTimeout
ARM GAS  /tmp/ccnYk2xI.s 			page 150


 3882              		.syntax unified
 3883              		.thumb
 3884              		.thumb_func
 3885              		.fpu fpv4-sp-d16
 3887              	HAL_UART_DisableReceiverTimeout:
 3888              	.LFB165:
2625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (!(IS_LPUART_INSTANCE(huart->Instance)))
 3889              		.loc 1 2625 0
 3890              		.cfi_startproc
 3891              		@ args = 0, pretend = 0, frame = 0
 3892              		@ frame_needed = 0, uses_anonymous_args = 0
 3893              		@ link register save eliminated.
 3894              	.LVL323:
2626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 3895              		.loc 1 2626 0
 3896 0000 0368     		ldr	r3, [r0]
 3897 0002 114A     		ldr	r2, .L310
 3898 0004 9342     		cmp	r3, r2
 3899 0006 19D0     		beq	.L307
2628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 3900              		.loc 1 2628 0
 3901 0008 D0F88020 		ldr	r2, [r0, #128]
 3902 000c 202A     		cmp	r2, #32
 3903 000e 17D1     		bne	.L308
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3904              		.loc 1 2631 0
 3905 0010 90F87C20 		ldrb	r2, [r0, #124]	@ zero_extendqisi2
 3906 0014 012A     		cmp	r2, #1
 3907 0016 15D0     		beq	.L309
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3908              		.loc 1 2631 0 is_stmt 0 discriminator 2
 3909 0018 0122     		movs	r2, #1
 3910 001a 80F87C20 		strb	r2, [r0, #124]
2633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3911              		.loc 1 2633 0 is_stmt 1 discriminator 2
 3912 001e 2422     		movs	r2, #36
 3913 0020 C0F88020 		str	r2, [r0, #128]
2636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3914              		.loc 1 2636 0 discriminator 2
 3915 0024 5A68     		ldr	r2, [r3, #4]
 3916 0026 22F40002 		bic	r2, r2, #8388608
 3917 002a 5A60     		str	r2, [r3, #4]
2638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3918              		.loc 1 2638 0 discriminator 2
 3919 002c 2023     		movs	r3, #32
 3920 002e C0F88030 		str	r3, [r0, #128]
2641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3921              		.loc 1 2641 0 discriminator 2
 3922 0032 0023     		movs	r3, #0
 3923 0034 80F87C30 		strb	r3, [r0, #124]
2643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3924              		.loc 1 2643 0 discriminator 2
 3925 0038 1846     		mov	r0, r3
 3926              	.LVL324:
 3927 003a 7047     		bx	lr
 3928              	.LVL325:
 3929              	.L307:
ARM GAS  /tmp/ccnYk2xI.s 			page 151


2652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 3930              		.loc 1 2652 0
 3931 003c 0120     		movs	r0, #1
 3932              	.LVL326:
 3933 003e 7047     		bx	lr
 3934              	.LVL327:
 3935              	.L308:
2647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 3936              		.loc 1 2647 0
 3937 0040 0220     		movs	r0, #2
 3938              	.LVL328:
 3939 0042 7047     		bx	lr
 3940              	.LVL329:
 3941              	.L309:
2631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3942              		.loc 1 2631 0
 3943 0044 0220     		movs	r0, #2
 3944              	.LVL330:
2654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3945              		.loc 1 2654 0
 3946 0046 7047     		bx	lr
 3947              	.L311:
 3948              		.align	2
 3949              	.L310:
 3950 0048 00800040 		.word	1073774592
 3951              		.cfi_endproc
 3952              	.LFE165:
 3954              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3955              		.align	1
 3956              		.global	HAL_MultiProcessor_EnterMuteMode
 3957              		.syntax unified
 3958              		.thumb
 3959              		.thumb_func
 3960              		.fpu fpv4-sp-d16
 3962              	HAL_MultiProcessor_EnterMuteMode:
 3963              	.LFB168:
2703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3964              		.loc 1 2703 0
 3965              		.cfi_startproc
 3966              		@ args = 0, pretend = 0, frame = 0
 3967              		@ frame_needed = 0, uses_anonymous_args = 0
 3968              		@ link register save eliminated.
 3969              	.LVL331:
2704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 3970              		.loc 1 2704 0
 3971 0000 0268     		ldr	r2, [r0]
 3972 0002 9369     		ldr	r3, [r2, #24]
 3973 0004 43F00403 		orr	r3, r3, #4
 3974 0008 9361     		str	r3, [r2, #24]
2705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 3975              		.loc 1 2705 0
 3976 000a 7047     		bx	lr
 3977              		.cfi_endproc
 3978              	.LFE168:
 3980              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3981              		.align	1
 3982              		.global	HAL_HalfDuplex_EnableTransmitter
ARM GAS  /tmp/ccnYk2xI.s 			page 152


 3983              		.syntax unified
 3984              		.thumb
 3985              		.thumb_func
 3986              		.fpu fpv4-sp-d16
 3988              	HAL_HalfDuplex_EnableTransmitter:
 3989              	.LFB169:
2713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3990              		.loc 1 2713 0
 3991              		.cfi_startproc
 3992              		@ args = 0, pretend = 0, frame = 0
 3993              		@ frame_needed = 0, uses_anonymous_args = 0
 3994              		@ link register save eliminated.
 3995              	.LVL332:
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3996              		.loc 1 2714 0
 3997 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 3998 0004 012B     		cmp	r3, #1
 3999 0006 17D0     		beq	.L315
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4000              		.loc 1 2714 0 is_stmt 0 discriminator 2
 4001 0008 0123     		movs	r3, #1
 4002 000a 80F87C30 		strb	r3, [r0, #124]
2715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4003              		.loc 1 2715 0 is_stmt 1 discriminator 2
 4004 000e 2423     		movs	r3, #36
 4005 0010 C0F88030 		str	r3, [r0, #128]
2718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4006              		.loc 1 2718 0 discriminator 2
 4007 0014 0268     		ldr	r2, [r0]
 4008 0016 1368     		ldr	r3, [r2]
 4009 0018 23F00C03 		bic	r3, r3, #12
 4010 001c 1360     		str	r3, [r2]
2721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4011              		.loc 1 2721 0 discriminator 2
 4012 001e 0268     		ldr	r2, [r0]
 4013 0020 1368     		ldr	r3, [r2]
 4014 0022 43F00803 		orr	r3, r3, #8
 4015 0026 1360     		str	r3, [r2]
2723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4016              		.loc 1 2723 0 discriminator 2
 4017 0028 2023     		movs	r3, #32
 4018 002a C0F88030 		str	r3, [r0, #128]
2725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4019              		.loc 1 2725 0 discriminator 2
 4020 002e 0023     		movs	r3, #0
 4021 0030 80F87C30 		strb	r3, [r0, #124]
2727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4022              		.loc 1 2727 0 discriminator 2
 4023 0034 1846     		mov	r0, r3
 4024              	.LVL333:
 4025 0036 7047     		bx	lr
 4026              	.LVL334:
 4027              	.L315:
2714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4028              		.loc 1 2714 0
 4029 0038 0220     		movs	r0, #2
 4030              	.LVL335:
ARM GAS  /tmp/ccnYk2xI.s 			page 153


2728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4031              		.loc 1 2728 0
 4032 003a 7047     		bx	lr
 4033              		.cfi_endproc
 4034              	.LFE169:
 4036              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4037              		.align	1
 4038              		.global	HAL_HalfDuplex_EnableReceiver
 4039              		.syntax unified
 4040              		.thumb
 4041              		.thumb_func
 4042              		.fpu fpv4-sp-d16
 4044              	HAL_HalfDuplex_EnableReceiver:
 4045              	.LFB170:
2736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4046              		.loc 1 2736 0
 4047              		.cfi_startproc
 4048              		@ args = 0, pretend = 0, frame = 0
 4049              		@ frame_needed = 0, uses_anonymous_args = 0
 4050              		@ link register save eliminated.
 4051              	.LVL336:
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4052              		.loc 1 2737 0
 4053 0000 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 4054 0004 012B     		cmp	r3, #1
 4055 0006 17D0     		beq	.L318
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4056              		.loc 1 2737 0 is_stmt 0 discriminator 2
 4057 0008 0123     		movs	r3, #1
 4058 000a 80F87C30 		strb	r3, [r0, #124]
2738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4059              		.loc 1 2738 0 is_stmt 1 discriminator 2
 4060 000e 2423     		movs	r3, #36
 4061 0010 C0F88030 		str	r3, [r0, #128]
2741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4062              		.loc 1 2741 0 discriminator 2
 4063 0014 0268     		ldr	r2, [r0]
 4064 0016 1368     		ldr	r3, [r2]
 4065 0018 23F00C03 		bic	r3, r3, #12
 4066 001c 1360     		str	r3, [r2]
2744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4067              		.loc 1 2744 0 discriminator 2
 4068 001e 0268     		ldr	r2, [r0]
 4069 0020 1368     		ldr	r3, [r2]
 4070 0022 43F00403 		orr	r3, r3, #4
 4071 0026 1360     		str	r3, [r2]
2746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4072              		.loc 1 2746 0 discriminator 2
 4073 0028 2023     		movs	r3, #32
 4074 002a C0F88030 		str	r3, [r0, #128]
2748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4075              		.loc 1 2748 0 discriminator 2
 4076 002e 0023     		movs	r3, #0
 4077 0030 80F87C30 		strb	r3, [r0, #124]
2750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4078              		.loc 1 2750 0 discriminator 2
 4079 0034 1846     		mov	r0, r3
ARM GAS  /tmp/ccnYk2xI.s 			page 154


 4080              	.LVL337:
 4081 0036 7047     		bx	lr
 4082              	.LVL338:
 4083              	.L318:
2737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4084              		.loc 1 2737 0
 4085 0038 0220     		movs	r0, #2
 4086              	.LVL339:
2751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4087              		.loc 1 2751 0
 4088 003a 7047     		bx	lr
 4089              		.cfi_endproc
 4090              	.LFE170:
 4092              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4093              		.align	1
 4094              		.global	HAL_LIN_SendBreak
 4095              		.syntax unified
 4096              		.thumb
 4097              		.thumb_func
 4098              		.fpu fpv4-sp-d16
 4100              	HAL_LIN_SendBreak:
 4101              	.LFB171:
2760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the parameters */
 4102              		.loc 1 2760 0
 4103              		.cfi_startproc
 4104              		@ args = 0, pretend = 0, frame = 0
 4105              		@ frame_needed = 0, uses_anonymous_args = 0
 4106              	.LVL340:
 4107 0000 10B5     		push	{r4, lr}
 4108              	.LCFI31:
 4109              		.cfi_def_cfa_offset 8
 4110              		.cfi_offset 4, -8
 4111              		.cfi_offset 14, -4
 4112 0002 0446     		mov	r4, r0
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4113              		.loc 1 2762 0
 4114 0004 0368     		ldr	r3, [r0]
 4115 0006 184A     		ldr	r2, .L324
 4116 0008 9342     		cmp	r3, r2
 4117 000a 14D0     		beq	.L320
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4118              		.loc 1 2762 0 is_stmt 0 discriminator 1
 4119 000c A2F57442 		sub	r2, r2, #62464
 4120 0010 9342     		cmp	r3, r2
 4121 0012 10D0     		beq	.L320
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4122              		.loc 1 2762 0 discriminator 2
 4123 0014 02F58062 		add	r2, r2, #1024
 4124 0018 9342     		cmp	r3, r2
 4125 001a 0CD0     		beq	.L320
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4126              		.loc 1 2762 0 discriminator 3
 4127 001c 02F58062 		add	r2, r2, #1024
 4128 0020 9342     		cmp	r3, r2
 4129 0022 08D0     		beq	.L320
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4130              		.loc 1 2762 0 discriminator 4
ARM GAS  /tmp/ccnYk2xI.s 			page 155


 4131 0024 02F58062 		add	r2, r2, #1024
 4132 0028 9342     		cmp	r3, r2
 4133 002a 04D0     		beq	.L320
2762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4134              		.loc 1 2762 0 discriminator 5
 4135 002c 40F6CA21 		movw	r1, #2762
 4136 0030 0E48     		ldr	r0, .L324+4
 4137              	.LVL341:
 4138 0032 FFF7FEFF 		bl	assert_failed
 4139              	.LVL342:
 4140              	.L320:
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4141              		.loc 1 2764 0 is_stmt 1
 4142 0036 94F87C30 		ldrb	r3, [r4, #124]	@ zero_extendqisi2
 4143 003a 012B     		cmp	r3, #1
 4144 003c 11D0     		beq	.L322
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4145              		.loc 1 2764 0 is_stmt 0 discriminator 2
 4146 003e 0123     		movs	r3, #1
 4147 0040 84F87C30 		strb	r3, [r4, #124]
2766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4148              		.loc 1 2766 0 is_stmt 1 discriminator 2
 4149 0044 2423     		movs	r3, #36
 4150 0046 C4F88030 		str	r3, [r4, #128]
2769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4151              		.loc 1 2769 0 discriminator 2
 4152 004a 2268     		ldr	r2, [r4]
 4153 004c 9369     		ldr	r3, [r2, #24]
 4154 004e 43F00203 		orr	r3, r3, #2
 4155 0052 9361     		str	r3, [r2, #24]
2771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4156              		.loc 1 2771 0 discriminator 2
 4157 0054 2023     		movs	r3, #32
 4158 0056 C4F88030 		str	r3, [r4, #128]
2773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4159              		.loc 1 2773 0 discriminator 2
 4160 005a 0020     		movs	r0, #0
 4161 005c 84F87C00 		strb	r0, [r4, #124]
 4162              	.L321:
2776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4163              		.loc 1 2776 0
 4164 0060 10BD     		pop	{r4, pc}
 4165              	.LVL343:
 4166              	.L322:
2764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4167              		.loc 1 2764 0
 4168 0062 0220     		movs	r0, #2
 4169 0064 FCE7     		b	.L321
 4170              	.L325:
 4171 0066 00BF     		.align	2
 4172              	.L324:
 4173 0068 00380140 		.word	1073821696
 4174 006c 00000000 		.word	.LC0
 4175              		.cfi_endproc
 4176              	.LFE171:
 4178              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4179              		.align	1
ARM GAS  /tmp/ccnYk2xI.s 			page 156


 4180              		.global	HAL_UART_GetState
 4181              		.syntax unified
 4182              		.thumb
 4183              		.thumb_func
 4184              		.fpu fpv4-sp-d16
 4186              	HAL_UART_GetState:
 4187              	.LFB172:
2805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t temp1;
 4188              		.loc 1 2805 0
 4189              		.cfi_startproc
 4190              		@ args = 0, pretend = 0, frame = 0
 4191              		@ frame_needed = 0, uses_anonymous_args = 0
 4192              		@ link register save eliminated.
 4193              	.LVL344:
2808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   temp2 = huart->RxState;
 4194              		.loc 1 2808 0
 4195 0000 D0F88020 		ldr	r2, [r0, #128]
 4196              	.LVL345:
2809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4197              		.loc 1 2809 0
 4198 0004 D0F88400 		ldr	r0, [r0, #132]
 4199              	.LVL346:
2812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4200              		.loc 1 2812 0
 4201 0008 1043     		orrs	r0, r0, r2
 4202              	.LVL347:
 4203 000a 7047     		bx	lr
 4204              		.cfi_endproc
 4205              	.LFE172:
 4207              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4208              		.align	1
 4209              		.global	HAL_UART_GetError
 4210              		.syntax unified
 4211              		.thumb
 4212              		.thumb_func
 4213              		.fpu fpv4-sp-d16
 4215              	HAL_UART_GetError:
 4216              	.LFB173:
2821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   return huart->ErrorCode;
 4217              		.loc 1 2821 0
 4218              		.cfi_startproc
 4219              		@ args = 0, pretend = 0, frame = 0
 4220              		@ frame_needed = 0, uses_anonymous_args = 0
 4221              		@ link register save eliminated.
 4222              	.LVL348:
2822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 4223              		.loc 1 2822 0
 4224 0000 D0F88800 		ldr	r0, [r0, #136]
 4225              	.LVL349:
2823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** /**
 4226              		.loc 1 2823 0
 4227 0004 7047     		bx	lr
 4228              		.cfi_endproc
 4229              	.LFE173:
 4231              		.global	__aeabi_uldivmod
 4232              		.section	.text.UART_SetConfig,"ax",%progbits
 4233              		.align	1
ARM GAS  /tmp/ccnYk2xI.s 			page 157


 4234              		.global	UART_SetConfig
 4235              		.syntax unified
 4236              		.thumb
 4237              		.thumb_func
 4238              		.fpu fpv4-sp-d16
 4240              	UART_SetConfig:
 4241              	.LFB174:
2866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tmpreg;
 4242              		.loc 1 2866 0
 4243              		.cfi_startproc
 4244              		@ args = 0, pretend = 0, frame = 0
 4245              		@ frame_needed = 0, uses_anonymous_args = 0
 4246              	.LVL350:
 4247 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4248              	.LCFI32:
 4249              		.cfi_def_cfa_offset 32
 4250              		.cfi_offset 3, -32
 4251              		.cfi_offset 4, -28
 4252              		.cfi_offset 5, -24
 4253              		.cfi_offset 6, -20
 4254              		.cfi_offset 7, -16
 4255              		.cfi_offset 8, -12
 4256              		.cfi_offset 9, -8
 4257              		.cfi_offset 14, -4
 4258 0004 0446     		mov	r4, r0
 4259              	.LVL351:
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 4260              		.loc 1 2876 0
 4261 0006 4268     		ldr	r2, [r0, #4]
 4262 0008 9E4B     		ldr	r3, .L445
 4263 000a 9A42     		cmp	r2, r3
 4264 000c 00F2A380 		bhi	.L422
 4265              	.LVL352:
 4266              	.L329:
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 4267              		.loc 1 2877 0
 4268 0010 A368     		ldr	r3, [r4, #8]
 4269 0012 B3F1805F 		cmp	r3, #268435456
 4270 0016 04D0     		beq	.L330
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 4271              		.loc 1 2877 0 is_stmt 0 discriminator 1
 4272 0018 1BB1     		cbz	r3, .L330
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 4273              		.loc 1 2877 0 discriminator 2
 4274 001a B3F5805F 		cmp	r3, #4096
 4275 001e 40F0A080 		bne	.L423
 4276              	.L330:
2878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4277              		.loc 1 2878 0 is_stmt 1
 4278 0022 2268     		ldr	r2, [r4]
 4279 0024 984B     		ldr	r3, .L445+4
 4280 0026 9A42     		cmp	r2, r3
 4281 0028 00F0A180 		beq	.L424
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 4282              		.loc 1 2884 0
 4283 002c E368     		ldr	r3, [r4, #12]
 4284 002e B3F5805F 		cmp	r3, #4096
ARM GAS  /tmp/ccnYk2xI.s 			page 158


 4285 0032 07D0     		beq	.L333
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 4286              		.loc 1 2884 0 is_stmt 0 discriminator 1
 4287 0034 33B1     		cbz	r3, .L333
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 4288              		.loc 1 2884 0 discriminator 2
 4289 0036 B3F5405F 		cmp	r3, #12288
 4290 003a 03D0     		beq	.L333
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 4291              		.loc 1 2884 0 discriminator 3
 4292 003c B3F5005F 		cmp	r3, #8192
 4293 0040 40F0A380 		bne	.L425
 4294              	.L333:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4295              		.loc 1 2885 0 is_stmt 1
 4296 0044 236A     		ldr	r3, [r4, #32]
 4297 0046 1BB1     		cbz	r3, .L332
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4298              		.loc 1 2885 0 is_stmt 0 discriminator 1
 4299 0048 B3F5006F 		cmp	r3, #2048
 4300 004c 40F0A380 		bne	.L426
 4301              	.L332:
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 4302              		.loc 1 2888 0 is_stmt 1
 4303 0050 2369     		ldr	r3, [r4, #16]
 4304 0052 33B1     		cbz	r3, .L334
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 4305              		.loc 1 2888 0 is_stmt 0 discriminator 1
 4306 0054 B3F5806F 		cmp	r3, #1024
 4307 0058 03D0     		beq	.L334
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 4308              		.loc 1 2888 0 discriminator 2
 4309 005a B3F5C06F 		cmp	r3, #1536
 4310 005e 40F0A080 		bne	.L427
 4311              	.L334:
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 4312              		.loc 1 2889 0 is_stmt 1
 4313 0062 6369     		ldr	r3, [r4, #20]
 4314 0064 33F00C02 		bics	r2, r3, #12
 4315 0068 00D1     		bne	.L335
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 4316              		.loc 1 2889 0 is_stmt 0 discriminator 2
 4317 006a 23B9     		cbnz	r3, .L336
 4318              	.L335:
2889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 4319              		.loc 1 2889 0 discriminator 3
 4320 006c 40F64931 		movw	r1, #2889
 4321 0070 8648     		ldr	r0, .L445+8
 4322 0072 FFF7FEFF 		bl	assert_failed
 4323              	.LVL353:
 4324              	.L336:
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 4325              		.loc 1 2890 0 is_stmt 1
 4326 0076 A369     		ldr	r3, [r4, #24]
 4327 0078 4BB1     		cbz	r3, .L337
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 4328              		.loc 1 2890 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccnYk2xI.s 			page 159


 4329 007a B3F5807F 		cmp	r3, #256
 4330 007e 06D0     		beq	.L337
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 4331              		.loc 1 2890 0 discriminator 2
 4332 0080 B3F5007F 		cmp	r3, #512
 4333 0084 03D0     		beq	.L337
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 4334              		.loc 1 2890 0 discriminator 3
 4335 0086 B3F5407F 		cmp	r3, #768
 4336 008a 40F09080 		bne	.L428
 4337              	.L337:
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
 4338              		.loc 1 2891 0 is_stmt 1
 4339 008e E369     		ldr	r3, [r4, #28]
 4340 0090 1BB1     		cbz	r3, .L338
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
 4341              		.loc 1 2891 0 is_stmt 0 discriminator 1
 4342 0092 B3F5004F 		cmp	r3, #32768
 4343 0096 40F09080 		bne	.L429
 4344              	.L338:
2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4345              		.loc 1 2892 0 is_stmt 1
 4346 009a 636A     		ldr	r3, [r4, #36]
 4347 009c 0B2B     		cmp	r3, #11
 4348 009e 00F29280 		bhi	.L430
 4349              	.L339:
2901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
 4350              		.loc 1 2901 0
 4351 00a2 A368     		ldr	r3, [r4, #8]
 4352 00a4 2269     		ldr	r2, [r4, #16]
 4353 00a6 1343     		orrs	r3, r3, r2
 4354 00a8 6269     		ldr	r2, [r4, #20]
 4355 00aa 1343     		orrs	r3, r3, r2
 4356 00ac E269     		ldr	r2, [r4, #28]
 4357 00ae 1343     		orrs	r3, r3, r2
 4358              	.LVL354:
2902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 4359              		.loc 1 2902 0
 4360 00b0 626E     		ldr	r2, [r4, #100]
 4361 00b2 1343     		orrs	r3, r3, r2
 4362              	.LVL355:
2903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4363              		.loc 1 2903 0
 4364 00b4 2168     		ldr	r1, [r4]
 4365 00b6 0868     		ldr	r0, [r1]
 4366 00b8 754A     		ldr	r2, .L445+12
 4367 00ba 0240     		ands	r2, r2, r0
 4368 00bc 1A43     		orrs	r2, r2, r3
 4369 00be 0A60     		str	r2, [r1]
2908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4370              		.loc 1 2908 0
 4371 00c0 2268     		ldr	r2, [r4]
 4372 00c2 5368     		ldr	r3, [r2, #4]
 4373              	.LVL356:
 4374 00c4 23F44053 		bic	r3, r3, #12288
 4375 00c8 E168     		ldr	r1, [r4, #12]
 4376 00ca 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/ccnYk2xI.s 			page 160


 4377 00cc 5360     		str	r3, [r2, #4]
2916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4378              		.loc 1 2916 0
 4379 00ce A169     		ldr	r1, [r4, #24]
 4380              	.LVL357:
2918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4381              		.loc 1 2918 0
 4382 00d0 2268     		ldr	r2, [r4]
 4383 00d2 6D4B     		ldr	r3, .L445+4
 4384 00d4 9A42     		cmp	r2, r3
 4385 00d6 01D0     		beq	.L340
2920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4386              		.loc 1 2920 0
 4387 00d8 236A     		ldr	r3, [r4, #32]
 4388 00da 1943     		orrs	r1, r1, r3
 4389              	.LVL358:
 4390              	.L340:
2922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4391              		.loc 1 2922 0
 4392 00dc 9368     		ldr	r3, [r2, #8]
 4393 00de 23F06E43 		bic	r3, r3, #-301989888
 4394 00e2 23F43063 		bic	r3, r3, #2816
 4395 00e6 0B43     		orrs	r3, r3, r1
 4396 00e8 9360     		str	r3, [r2, #8]
2927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4397              		.loc 1 2927 0
 4398 00ea 2268     		ldr	r2, [r4]
 4399 00ec D36A     		ldr	r3, [r2, #44]
 4400 00ee 23F00F03 		bic	r3, r3, #15
 4401 00f2 616A     		ldr	r1, [r4, #36]
 4402              	.LVL359:
 4403 00f4 0B43     		orrs	r3, r3, r1
 4404 00f6 D362     		str	r3, [r2, #44]
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4405              		.loc 1 2930 0
 4406 00f8 2368     		ldr	r3, [r4]
 4407 00fa 664A     		ldr	r2, .L445+16
 4408 00fc 9342     		cmp	r3, r2
 4409 00fe 68D0     		beq	.L431
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4410              		.loc 1 2930 0 is_stmt 0 discriminator 2
 4411 0100 654A     		ldr	r2, .L445+20
 4412 0102 9342     		cmp	r3, r2
 4413 0104 79D0     		beq	.L432
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4414              		.loc 1 2930 0 discriminator 14
 4415 0106 654A     		ldr	r2, .L445+24
 4416 0108 9342     		cmp	r3, r2
 4417 010a 00F08F80 		beq	.L433
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4418              		.loc 1 2930 0 discriminator 26
 4419 010e 644A     		ldr	r2, .L445+28
 4420 0110 9342     		cmp	r3, r2
 4421 0112 00F0A180 		beq	.L434
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4422              		.loc 1 2930 0 discriminator 38
 4423 0116 634A     		ldr	r2, .L445+32
ARM GAS  /tmp/ccnYk2xI.s 			page 161


 4424 0118 9342     		cmp	r3, r2
 4425 011a 00F0C580 		beq	.L435
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4426              		.loc 1 2930 0 discriminator 50
 4427 011e 5A4A     		ldr	r2, .L445+4
 4428 0120 9342     		cmp	r3, r2
 4429 0122 00F0DA80 		beq	.L436
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4430              		.loc 1 2930 0
 4431 0126 1022     		movs	r2, #16
 4432              	.L346:
 4433              	.LVL360:
2933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4434              		.loc 1 2933 0 is_stmt 1
 4435 0128 5749     		ldr	r1, .L445+4
 4436 012a 8B42     		cmp	r3, r1
 4437 012c 00F0FA80 		beq	.L437
2986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 4438              		.loc 1 2986 0
 4439 0130 E369     		ldr	r3, [r4, #28]
 4440 0132 B3F5004F 		cmp	r3, #32768
 4441 0136 00F03A81 		beq	.L438
3029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4442              		.loc 1 3029 0
 4443 013a 082A     		cmp	r2, #8
 4444 013c 00F2A681 		bhi	.L417
 4445 0140 DFE812F0 		tbh	[pc, r2, lsl #1]
 4446              	.L394:
 4447 0144 6B01     		.2byte	(.L393-.L394)/2
 4448 0146 8D01     		.2byte	(.L395-.L394)/2
 4449 0148 6901     		.2byte	(.L396-.L394)/2
 4450 014a A401     		.2byte	(.L417-.L394)/2
 4451 014c 9001     		.2byte	(.L397-.L394)/2
 4452 014e A401     		.2byte	(.L417-.L394)/2
 4453 0150 A401     		.2byte	(.L417-.L394)/2
 4454 0152 A401     		.2byte	(.L417-.L394)/2
 4455 0154 9301     		.2byte	(.L418-.L394)/2
 4456              	.LVL361:
 4457              		.p2align 1
 4458              	.L422:
2876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 4459              		.loc 1 2876 0 discriminator 1
 4460 0156 40F63C31 		movw	r1, #2876
 4461 015a 4C48     		ldr	r0, .L445+8
 4462              	.LVL362:
 4463 015c FFF7FEFF 		bl	assert_failed
 4464              	.LVL363:
 4465 0160 56E7     		b	.L329
 4466              	.L423:
2877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 4467              		.loc 1 2877 0 discriminator 3
 4468 0162 40F63D31 		movw	r1, #2877
 4469 0166 4948     		ldr	r0, .L445+8
 4470 0168 FFF7FEFF 		bl	assert_failed
 4471              	.LVL364:
 4472 016c 59E7     		b	.L330
 4473              	.L424:
ARM GAS  /tmp/ccnYk2xI.s 			page 162


2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4474              		.loc 1 2880 0
 4475 016e E368     		ldr	r3, [r4, #12]
 4476 0170 002B     		cmp	r3, #0
 4477 0172 3FF46DAF 		beq	.L332
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4478              		.loc 1 2880 0 is_stmt 0 discriminator 1
 4479 0176 B3F5005F 		cmp	r3, #8192
 4480 017a 3FF469AF 		beq	.L332
2880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4481              		.loc 1 2880 0 discriminator 2
 4482 017e 4FF43461 		mov	r1, #2880
 4483 0182 4248     		ldr	r0, .L445+8
 4484 0184 FFF7FEFF 		bl	assert_failed
 4485              	.LVL365:
 4486 0188 62E7     		b	.L332
 4487              	.L425:
2884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 4488              		.loc 1 2884 0 is_stmt 1 discriminator 4
 4489 018a 40F64431 		movw	r1, #2884
 4490 018e 3F48     		ldr	r0, .L445+8
 4491 0190 FFF7FEFF 		bl	assert_failed
 4492              	.LVL366:
 4493 0194 56E7     		b	.L333
 4494              	.L426:
2885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 4495              		.loc 1 2885 0 discriminator 2
 4496 0196 40F64531 		movw	r1, #2885
 4497 019a 3C48     		ldr	r0, .L445+8
 4498 019c FFF7FEFF 		bl	assert_failed
 4499              	.LVL367:
 4500 01a0 56E7     		b	.L332
 4501              	.L427:
2888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 4502              		.loc 1 2888 0 discriminator 3
 4503 01a2 40F64831 		movw	r1, #2888
 4504 01a6 3948     		ldr	r0, .L445+8
 4505 01a8 FFF7FEFF 		bl	assert_failed
 4506              	.LVL368:
 4507 01ac 59E7     		b	.L334
 4508              	.L428:
2890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 4509              		.loc 1 2890 0 discriminator 4
 4510 01ae 40F64A31 		movw	r1, #2890
 4511 01b2 3648     		ldr	r0, .L445+8
 4512 01b4 FFF7FEFF 		bl	assert_failed
 4513              	.LVL369:
 4514 01b8 69E7     		b	.L337
 4515              	.L429:
2891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
 4516              		.loc 1 2891 0 discriminator 2
 4517 01ba 40F64B31 		movw	r1, #2891
 4518 01be 3348     		ldr	r0, .L445+8
 4519 01c0 FFF7FEFF 		bl	assert_failed
 4520              	.LVL370:
 4521 01c4 69E7     		b	.L338
 4522              	.L430:
ARM GAS  /tmp/ccnYk2xI.s 			page 163


2892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4523              		.loc 1 2892 0 discriminator 1
 4524 01c6 40F64C31 		movw	r1, #2892
 4525 01ca 3048     		ldr	r0, .L445+8
 4526 01cc FFF7FEFF 		bl	assert_failed
 4527              	.LVL371:
 4528 01d0 67E7     		b	.L339
 4529              	.L431:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4530              		.loc 1 2930 0 discriminator 1
 4531 01d2 02F55842 		add	r2, r2, #55296
 4532 01d6 D2F88820 		ldr	r2, [r2, #136]
 4533 01da 02F00302 		and	r2, r2, #3
 4534 01de 032A     		cmp	r2, #3
 4535 01e0 09D8     		bhi	.L342
 4536 01e2 DFE802F0 		tbb	[pc, r2]
 4537              	.L344:
 4538 01e6 02       		.byte	(.L343-.L344)/2
 4539 01e7 04       		.byte	(.L345-.L344)/2
 4540 01e8 93       		.byte	(.L400-.L344)/2
 4541 01e9 06       		.byte	(.L347-.L344)/2
 4542              		.p2align 1
 4543              	.L343:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4544              		.loc 1 2930 0 is_stmt 0
 4545 01ea 0122     		movs	r2, #1
 4546 01ec 9CE7     		b	.L346
 4547              	.L345:
 4548              	.LVL372:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4549              		.loc 1 2930 0 discriminator 5
 4550 01ee 0422     		movs	r2, #4
 4551 01f0 9AE7     		b	.L346
 4552              	.LVL373:
 4553              	.L347:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4554              		.loc 1 2930 0 discriminator 7
 4555 01f2 0822     		movs	r2, #8
 4556 01f4 98E7     		b	.L346
 4557              	.LVL374:
 4558              	.L342:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4559              		.loc 1 2930 0 discriminator 3
 4560 01f6 1022     		movs	r2, #16
 4561 01f8 96E7     		b	.L346
 4562              	.LVL375:
 4563              	.L432:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4564              		.loc 1 2930 0 discriminator 13
 4565 01fa 02F5E632 		add	r2, r2, #117760
 4566 01fe D2F88820 		ldr	r2, [r2, #136]
 4567 0202 02F00C02 		and	r2, r2, #12
 4568 0206 0C2A     		cmp	r2, #12
 4569 0208 0ED8     		bhi	.L349
 4570 020a DFE802F0 		tbb	[pc, r2]
 4571              	.L351:
 4572 020e 07       		.byte	(.L350-.L351)/2
ARM GAS  /tmp/ccnYk2xI.s 			page 164


 4573 020f 0D       		.byte	(.L349-.L351)/2
 4574 0210 0D       		.byte	(.L349-.L351)/2
 4575 0211 0D       		.byte	(.L349-.L351)/2
 4576 0212 09       		.byte	(.L352-.L351)/2
 4577 0213 0D       		.byte	(.L349-.L351)/2
 4578 0214 0D       		.byte	(.L349-.L351)/2
 4579 0215 0D       		.byte	(.L349-.L351)/2
 4580 0216 81       		.byte	(.L401-.L351)/2
 4581 0217 0D       		.byte	(.L349-.L351)/2
 4582 0218 0D       		.byte	(.L349-.L351)/2
 4583 0219 0D       		.byte	(.L349-.L351)/2
 4584 021a 0B       		.byte	(.L353-.L351)/2
 4585 021b 00       		.p2align 1
 4586              	.L350:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4587              		.loc 1 2930 0
 4588 021c 0022     		movs	r2, #0
 4589 021e 83E7     		b	.L346
 4590              	.L352:
 4591              	.LVL376:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4592              		.loc 1 2930 0 discriminator 17
 4593 0220 0422     		movs	r2, #4
 4594 0222 81E7     		b	.L346
 4595              	.LVL377:
 4596              	.L353:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4597              		.loc 1 2930 0 discriminator 19
 4598 0224 0822     		movs	r2, #8
 4599 0226 7FE7     		b	.L346
 4600              	.LVL378:
 4601              	.L349:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4602              		.loc 1 2930 0 discriminator 15
 4603 0228 1022     		movs	r2, #16
 4604 022a 7DE7     		b	.L346
 4605              	.LVL379:
 4606              	.L433:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4607              		.loc 1 2930 0 discriminator 25
 4608 022c 02F5E432 		add	r2, r2, #116736
 4609 0230 D2F88820 		ldr	r2, [r2, #136]
 4610 0234 02F03002 		and	r2, r2, #48
 4611 0238 102A     		cmp	r2, #16
 4612 023a 09D0     		beq	.L356
 4613 023c 05D9     		bls	.L439
 4614 023e 202A     		cmp	r2, #32
 4615 0240 68D0     		beq	.L402
 4616 0242 302A     		cmp	r2, #48
 4617 0244 06D1     		bne	.L355
 4618              	.LVL380:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4619              		.loc 1 2930 0 discriminator 31
 4620 0246 0822     		movs	r2, #8
 4621 0248 6EE7     		b	.L346
 4622              	.LVL381:
 4623              	.L439:
ARM GAS  /tmp/ccnYk2xI.s 			page 165


2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4624              		.loc 1 2930 0 discriminator 25
 4625 024a 1AB9     		cbnz	r2, .L355
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4626              		.loc 1 2930 0
 4627 024c 0022     		movs	r2, #0
 4628 024e 6BE7     		b	.L346
 4629              	.L356:
 4630              	.LVL382:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4631              		.loc 1 2930 0 discriminator 29
 4632 0250 0422     		movs	r2, #4
 4633 0252 69E7     		b	.L346
 4634              	.LVL383:
 4635              	.L355:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4636              		.loc 1 2930 0 discriminator 27
 4637 0254 1022     		movs	r2, #16
 4638 0256 67E7     		b	.L346
 4639              	.LVL384:
 4640              	.L434:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4641              		.loc 1 2930 0 discriminator 37
 4642 0258 02F5E232 		add	r2, r2, #115712
 4643 025c D2F88820 		ldr	r2, [r2, #136]
 4644 0260 02F0C002 		and	r2, r2, #192
 4645 0264 402A     		cmp	r2, #64
 4646 0266 09D0     		beq	.L362
 4647 0268 05D9     		bls	.L440
 4648 026a 802A     		cmp	r2, #128
 4649 026c 54D0     		beq	.L403
 4650 026e C02A     		cmp	r2, #192
 4651 0270 06D1     		bne	.L361
 4652              	.LVL385:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4653              		.loc 1 2930 0 discriminator 43
 4654 0272 0822     		movs	r2, #8
 4655 0274 58E7     		b	.L346
 4656              	.LVL386:
 4657              	.L440:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4658              		.loc 1 2930 0 discriminator 37
 4659 0276 1AB9     		cbnz	r2, .L361
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4660              		.loc 1 2930 0
 4661 0278 0022     		movs	r2, #0
 4662 027a 55E7     		b	.L346
 4663              	.L362:
 4664              	.LVL387:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4665              		.loc 1 2930 0 discriminator 41
 4666 027c 0422     		movs	r2, #4
 4667 027e 53E7     		b	.L346
 4668              	.LVL388:
 4669              	.L361:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4670              		.loc 1 2930 0 discriminator 39
ARM GAS  /tmp/ccnYk2xI.s 			page 166


 4671 0280 1022     		movs	r2, #16
 4672 0282 51E7     		b	.L346
 4673              	.L446:
 4674              		.align	2
 4675              	.L445:
 4676 0284 301A1E01 		.word	18750000
 4677 0288 00800040 		.word	1073774592
 4678 028c 00000000 		.word	.LC0
 4679 0290 F369FFCF 		.word	-805344781
 4680 0294 00380140 		.word	1073821696
 4681 0298 00440040 		.word	1073759232
 4682 029c 00480040 		.word	1073760256
 4683 02a0 004C0040 		.word	1073761280
 4684 02a4 00500040 		.word	1073762304
 4685              	.LVL389:
 4686              	.L435:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4687              		.loc 1 2930 0 discriminator 49
 4688 02a8 02F5E032 		add	r2, r2, #114688
 4689 02ac D2F88820 		ldr	r2, [r2, #136]
 4690 02b0 02F44072 		and	r2, r2, #768
 4691 02b4 B2F5807F 		cmp	r2, #256
 4692 02b8 0BD0     		beq	.L368
 4693 02ba 07D9     		bls	.L441
 4694 02bc B2F5007F 		cmp	r2, #512
 4695 02c0 2CD0     		beq	.L404
 4696 02c2 B2F5407F 		cmp	r2, #768
 4697 02c6 06D1     		bne	.L367
 4698              	.LVL390:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4699              		.loc 1 2930 0 discriminator 55
 4700 02c8 0822     		movs	r2, #8
 4701 02ca 2DE7     		b	.L346
 4702              	.LVL391:
 4703              	.L441:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4704              		.loc 1 2930 0 discriminator 49
 4705 02cc 1AB9     		cbnz	r2, .L367
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4706              		.loc 1 2930 0
 4707 02ce 0022     		movs	r2, #0
 4708 02d0 2AE7     		b	.L346
 4709              	.L368:
 4710              	.LVL392:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4711              		.loc 1 2930 0 discriminator 53
 4712 02d2 0422     		movs	r2, #4
 4713 02d4 28E7     		b	.L346
 4714              	.LVL393:
 4715              	.L367:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4716              		.loc 1 2930 0 discriminator 51
 4717 02d6 1022     		movs	r2, #16
 4718 02d8 26E7     		b	.L346
 4719              	.LVL394:
 4720              	.L436:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 167


 4721              		.loc 1 2930 0 discriminator 61
 4722 02da 02F5C832 		add	r2, r2, #102400
 4723 02de D2F88820 		ldr	r2, [r2, #136]
 4724 02e2 02F44062 		and	r2, r2, #3072
 4725 02e6 B2F5806F 		cmp	r2, #1024
 4726 02ea 0BD0     		beq	.L373
 4727 02ec 07D9     		bls	.L442
 4728 02ee B2F5006F 		cmp	r2, #2048
 4729 02f2 15D0     		beq	.L406
 4730 02f4 B2F5406F 		cmp	r2, #3072
 4731 02f8 06D1     		bne	.L372
 4732              	.LVL395:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4733              		.loc 1 2930 0 discriminator 67
 4734 02fa 0822     		movs	r2, #8
 4735 02fc 14E7     		b	.L346
 4736              	.LVL396:
 4737              	.L442:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4738              		.loc 1 2930 0 discriminator 61
 4739 02fe 1AB9     		cbnz	r2, .L372
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4740              		.loc 1 2930 0
 4741 0300 0022     		movs	r2, #0
 4742 0302 11E7     		b	.L346
 4743              	.L373:
 4744              	.LVL397:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4745              		.loc 1 2930 0 discriminator 65
 4746 0304 0422     		movs	r2, #4
 4747 0306 0FE7     		b	.L346
 4748              	.LVL398:
 4749              	.L372:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4750              		.loc 1 2930 0 discriminator 63
 4751 0308 1022     		movs	r2, #16
 4752 030a 0DE7     		b	.L346
 4753              	.LVL399:
 4754              	.L400:
2930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4755              		.loc 1 2930 0
 4756 030c 0222     		movs	r2, #2
 4757 030e 0BE7     		b	.L346
 4758              	.L401:
 4759 0310 0222     		movs	r2, #2
 4760 0312 09E7     		b	.L346
 4761              	.L402:
 4762 0314 0222     		movs	r2, #2
 4763 0316 07E7     		b	.L346
 4764              	.L403:
 4765 0318 0222     		movs	r2, #2
 4766 031a 05E7     		b	.L346
 4767              	.L404:
 4768 031c 0222     		movs	r2, #2
 4769 031e 03E7     		b	.L346
 4770              	.L406:
 4771 0320 0222     		movs	r2, #2
ARM GAS  /tmp/ccnYk2xI.s 			page 168


 4772 0322 01E7     		b	.L346
 4773              	.LVL400:
 4774              	.L437:
2936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4775              		.loc 1 2936 0 is_stmt 1
 4776 0324 082A     		cmp	r2, #8
 4777 0326 00F2A380 		bhi	.L407
 4778 032a DFE802F0 		tbb	[pc, r2]
 4779              	.L380:
 4780 032e 08       		.byte	(.L379-.L380)/2
 4781 032f A1       		.byte	(.L407-.L380)/2
 4782 0330 10       		.byte	(.L408-.L380)/2
 4783 0331 A1       		.byte	(.L407-.L380)/2
 4784 0332 0D       		.byte	(.L382-.L380)/2
 4785 0333 A1       		.byte	(.L407-.L380)/2
 4786 0334 A1       		.byte	(.L407-.L380)/2
 4787 0335 A1       		.byte	(.L407-.L380)/2
 4788 0336 05       		.byte	(.L383-.L380)/2
 4789 0337 00       		.p2align 1
 4790              	.L383:
2948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4791              		.loc 1 2948 0
 4792 0338 4FF40040 		mov	r0, #32768
 4793 033c 08E0     		b	.L381
 4794              	.L379:
2939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4795              		.loc 1 2939 0
 4796 033e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4797              	.LVL401:
 4798              	.L384:
2957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4799              		.loc 1 2957 0
 4800 0342 28B9     		cbnz	r0, .L381
 4801 0344 0020     		movs	r0, #0
 4802              	.LVL402:
 4803 0346 80E0     		b	.L378
 4804              	.LVL403:
 4805              	.L382:
2945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4806              		.loc 1 2945 0
 4807 0348 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4808              	.LVL404:
2946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4809              		.loc 1 2946 0
 4810 034c F9E7     		b	.L384
 4811              	.LVL405:
 4812              	.L408:
2942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4813              		.loc 1 2942 0
 4814 034e 5248     		ldr	r0, .L447
 4815              	.LVL406:
 4816              	.L381:
2960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4817              		.loc 1 2960 0
 4818 0350 626A     		ldr	r2, [r4, #36]
 4819 0352 524B     		ldr	r3, .L447+4
 4820 0354 33F81220 		ldrh	r2, [r3, r2, lsl #1]
ARM GAS  /tmp/ccnYk2xI.s 			page 169


 4821 0358 B0FBF2F3 		udiv	r3, r0, r2
 4822              	.LVL407:
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 4823              		.loc 1 2963 0
 4824 035c 6568     		ldr	r5, [r4, #4]
 4825 035e 05EB4501 		add	r1, r5, r5, lsl #1
 4826 0362 9942     		cmp	r1, r3
 4827 0364 00F28680 		bhi	.L410
2963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 4828              		.loc 1 2963 0 is_stmt 0 discriminator 1
 4829 0368 B3EB053F 		cmp	r3, r5, lsl #12
 4830 036c 00F28480 		bhi	.L411
2972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 4831              		.loc 1 2972 0 is_stmt 1
 4832 0370 4FF00008 		mov	r8, #0
 4833 0374 92B2     		uxth	r2, r2
 4834 0376 0023     		movs	r3, #0
 4835              	.LVL408:
 4836 0378 4146     		mov	r1, r8
 4837 037a FFF7FEFF 		bl	__aeabi_uldivmod
 4838              	.LVL409:
 4839 037e 0F02     		lsls	r7, r1, #8
 4840 0380 47EA1067 		orr	r7, r7, r0, lsr #24
 4841 0384 0602     		lsls	r6, r0, #8
 4842 0386 6808     		lsrs	r0, r5, #1
 4843 0388 2A46     		mov	r2, r5
 4844 038a 4346     		mov	r3, r8
 4845 038c 16EB0008 		adds	r8, r6, r0
 4846 0390 47F10009 		adc	r9, r7, #0
 4847 0394 4046     		mov	r0, r8
 4848 0396 4946     		mov	r1, r9
 4849 0398 FFF7FEFF 		bl	__aeabi_uldivmod
 4850              	.LVL410:
2973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 4851              		.loc 1 2973 0
 4852 039c A0F54072 		sub	r2, r0, #768
 4853 03a0 3F4B     		ldr	r3, .L447+8
 4854 03a2 9A42     		cmp	r2, r3
 4855 03a4 6AD8     		bhi	.L412
2975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 4856              		.loc 1 2975 0
 4857 03a6 2368     		ldr	r3, [r4]
 4858 03a8 D860     		str	r0, [r3, #12]
 4859 03aa 0020     		movs	r0, #0
 4860              	.LVL411:
 4861 03ac 4DE0     		b	.L378
 4862              	.LVL412:
 4863              	.L438:
2988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4864              		.loc 1 2988 0
 4865 03ae 082A     		cmp	r2, #8
 4866 03b0 66D8     		bhi	.L413
 4867 03b2 DFE802F0 		tbb	[pc, r2]
 4868              	.L387:
 4869 03b6 07       		.byte	(.L386-.L387)/2
 4870 03b7 27       		.byte	(.L388-.L387)/2
 4871 03b8 05       		.byte	(.L389-.L387)/2
ARM GAS  /tmp/ccnYk2xI.s 			page 170


 4872 03b9 65       		.byte	(.L413-.L387)/2
 4873 03ba 2A       		.byte	(.L390-.L387)/2
 4874 03bb 65       		.byte	(.L413-.L387)/2
 4875 03bc 65       		.byte	(.L413-.L387)/2
 4876 03bd 65       		.byte	(.L413-.L387)/2
 4877 03be 2D       		.byte	(.L414-.L387)/2
 4878 03bf 00       		.p2align 1
 4879              	.L389:
2997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4880              		.loc 1 2997 0
 4881 03c0 3548     		ldr	r0, .L447
 4882 03c2 03E0     		b	.L391
 4883              	.L386:
2991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4884              		.loc 1 2991 0
 4885 03c4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4886              	.LVL413:
 4887              	.L392:
3012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4888              		.loc 1 3012 0
 4889 03c8 0028     		cmp	r0, #0
 4890 03ca 5BD0     		beq	.L443
 4891              	.LVL414:
 4892              	.L391:
3014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 4893              		.loc 1 3014 0
 4894 03cc 626A     		ldr	r2, [r4, #36]
 4895 03ce 334B     		ldr	r3, .L447+4
 4896 03d0 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4897 03d4 B0FBF3F0 		udiv	r0, r0, r3
 4898 03d8 6268     		ldr	r2, [r4, #4]
 4899 03da 5308     		lsrs	r3, r2, #1
 4900 03dc 03EB4003 		add	r3, r3, r0, lsl #1
 4901 03e0 B3FBF2F3 		udiv	r3, r3, r2
 4902 03e4 9BB2     		uxth	r3, r3
 4903              	.LVL415:
3015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 4904              		.loc 1 3015 0
 4905 03e6 A3F11001 		sub	r1, r3, #16
 4906 03ea 4FF6EF72 		movw	r2, #65519
 4907 03ee 9142     		cmp	r1, r2
 4908 03f0 4AD8     		bhi	.L416
3017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4909              		.loc 1 3017 0
 4910 03f2 23F00F02 		bic	r2, r3, #15
 4911              	.LVL416:
3018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->Instance->BRR = brrtemp;
 4912              		.loc 1 3018 0
 4913 03f6 C3F34203 		ubfx	r3, r3, #1, #3
 4914              	.LVL417:
 4915 03fa 1343     		orrs	r3, r3, r2
 4916              	.LVL418:
3019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 4917              		.loc 1 3019 0
 4918 03fc 2268     		ldr	r2, [r4]
 4919 03fe D360     		str	r3, [r2, #12]
 4920 0400 0020     		movs	r0, #0
ARM GAS  /tmp/ccnYk2xI.s 			page 171


 4921 0402 22E0     		b	.L378
 4922              	.LVL419:
 4923              	.L388:
2994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4924              		.loc 1 2994 0
 4925 0404 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4926              	.LVL420:
2995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4927              		.loc 1 2995 0
 4928 0408 DEE7     		b	.L392
 4929              	.LVL421:
 4930              	.L390:
3000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4931              		.loc 1 3000 0
 4932 040a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4933              	.LVL422:
3001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4934              		.loc 1 3001 0
 4935 040e DBE7     		b	.L392
 4936              	.LVL423:
 4937              	.L414:
3003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4938              		.loc 1 3003 0
 4939 0410 4FF40040 		mov	r0, #32768
 4940 0414 DAE7     		b	.L391
 4941              	.L396:
3038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4942              		.loc 1 3038 0
 4943 0416 2048     		ldr	r0, .L447
 4944 0418 02E0     		b	.L398
 4945              	.L393:
3032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4946              		.loc 1 3032 0
 4947 041a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4948              	.LVL424:
 4949              	.L399:
3052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 4950              		.loc 1 3052 0
 4951 041e B8B3     		cbz	r0, .L444
 4952              	.LVL425:
 4953              	.L398:
3055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 4954              		.loc 1 3055 0
 4955 0420 626A     		ldr	r2, [r4, #36]
 4956 0422 1E4B     		ldr	r3, .L447+4
 4957 0424 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 4958 0428 B0FBF3F0 		udiv	r0, r0, r3
 4959 042c 6368     		ldr	r3, [r4, #4]
 4960 042e 00EB5300 		add	r0, r0, r3, lsr #1
 4961 0432 B0FBF3F0 		udiv	r0, r0, r3
 4962 0436 80B2     		uxth	r0, r0
 4963              	.LVL426:
3056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 4964              		.loc 1 3056 0
 4965 0438 A0F11002 		sub	r2, r0, #16
 4966 043c 4FF6EF73 		movw	r3, #65519
 4967 0440 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccnYk2xI.s 			page 172


 4968 0442 27D8     		bhi	.L420
3058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 4969              		.loc 1 3058 0
 4970 0444 2368     		ldr	r3, [r4]
 4971 0446 D860     		str	r0, [r3, #12]
 4972 0448 0020     		movs	r0, #0
 4973              	.LVL427:
 4974              	.L378:
3068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
 4975              		.loc 1 3068 0
 4976 044a 0123     		movs	r3, #1
 4977 044c A4F86A30 		strh	r3, [r4, #106]	@ movhi
3069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4978              		.loc 1 3069 0
 4979 0450 A4F86830 		strh	r3, [r4, #104]	@ movhi
3072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->TxISR = NULL;
 4980              		.loc 1 3072 0
 4981 0454 0023     		movs	r3, #0
 4982 0456 E366     		str	r3, [r4, #108]
3073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4983              		.loc 1 3073 0
 4984 0458 2367     		str	r3, [r4, #112]
3076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 4985              		.loc 1 3076 0
 4986 045a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4987              	.LVL428:
 4988              	.L395:
3035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4989              		.loc 1 3035 0
 4990 045e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4991              	.LVL429:
3036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4992              		.loc 1 3036 0
 4993 0462 DCE7     		b	.L399
 4994              	.LVL430:
 4995              	.L397:
3041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 4996              		.loc 1 3041 0
 4997 0464 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4998              	.LVL431:
3042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4999              		.loc 1 3042 0
 5000 0468 D9E7     		b	.L399
 5001              	.LVL432:
 5002              	.L418:
3044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 5003              		.loc 1 3044 0
 5004 046a 4FF40040 		mov	r0, #32768
 5005 046e D7E7     		b	.L398
 5006              	.L407:
2952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 5007              		.loc 1 2952 0
 5008 0470 0120     		movs	r0, #1
 5009 0472 EAE7     		b	.L378
 5010              	.LVL433:
 5011              	.L410:
2966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
ARM GAS  /tmp/ccnYk2xI.s 			page 173


 5012              		.loc 1 2966 0
 5013 0474 0120     		movs	r0, #1
 5014 0476 E8E7     		b	.L378
 5015              	.L411:
 5016 0478 0120     		movs	r0, #1
 5017 047a E6E7     		b	.L378
 5018              	.LVL434:
 5019              	.L412:
2979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5020              		.loc 1 2979 0
 5021 047c 0120     		movs	r0, #1
 5022              	.LVL435:
 5023 047e E4E7     		b	.L378
 5024              	.LVL436:
 5025              	.L413:
3007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 5026              		.loc 1 3007 0
 5027 0480 0120     		movs	r0, #1
 5028 0482 E2E7     		b	.L378
 5029              	.LVL437:
 5030              	.L443:
 5031 0484 0020     		movs	r0, #0
 5032              	.LVL438:
 5033 0486 E0E7     		b	.L378
 5034              	.LVL439:
 5035              	.L416:
3023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 5036              		.loc 1 3023 0
 5037 0488 0120     		movs	r0, #1
 5038 048a DEE7     		b	.L378
 5039              	.LVL440:
 5040              	.L417:
3048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         break;
 5041              		.loc 1 3048 0
 5042 048c 0120     		movs	r0, #1
 5043 048e DCE7     		b	.L378
 5044              	.LVL441:
 5045              	.L444:
 5046 0490 0020     		movs	r0, #0
 5047              	.LVL442:
 5048 0492 DAE7     		b	.L378
 5049              	.LVL443:
 5050              	.L420:
3062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 5051              		.loc 1 3062 0
 5052 0494 0120     		movs	r0, #1
 5053              	.LVL444:
 5054 0496 D8E7     		b	.L378
 5055              	.L448:
 5056              		.align	2
 5057              	.L447:
 5058 0498 0024F400 		.word	16000000
 5059 049c 00000000 		.word	.LANCHOR0
 5060 04a0 FFFC0F00 		.word	1047807
 5061              		.cfi_endproc
 5062              	.LFE174:
 5064              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
ARM GAS  /tmp/ccnYk2xI.s 			page 174


 5065              		.align	1
 5066              		.global	UART_AdvFeatureConfig
 5067              		.syntax unified
 5068              		.thumb
 5069              		.thumb_func
 5070              		.fpu fpv4-sp-d16
 5072              	UART_AdvFeatureConfig:
 5073              	.LFB175:
3084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 5074              		.loc 1 3084 0
 5075              		.cfi_startproc
 5076              		@ args = 0, pretend = 0, frame = 0
 5077              		@ frame_needed = 0, uses_anonymous_args = 0
 5078              	.LVL445:
 5079 0000 10B5     		push	{r4, lr}
 5080              	.LCFI33:
 5081              		.cfi_def_cfa_offset 8
 5082              		.cfi_offset 4, -8
 5083              		.cfi_offset 14, -4
 5084 0002 0446     		mov	r4, r0
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5085              		.loc 1 3086 0
 5086 0004 836A     		ldr	r3, [r0, #40]
 5087 0006 FF2B     		cmp	r3, #255
 5088 0008 00F2A180 		bhi	.L470
 5089              	.LVL446:
 5090              	.L450:
3089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5091              		.loc 1 3089 0
 5092 000c A36A     		ldr	r3, [r4, #40]
 5093 000e 13F0010F 		tst	r3, #1
 5094 0012 0CD0     		beq	.L451
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5095              		.loc 1 3091 0
 5096 0014 E36A     		ldr	r3, [r4, #44]
 5097 0016 1BB1     		cbz	r3, .L452
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5098              		.loc 1 3091 0 is_stmt 0 discriminator 1
 5099 0018 B3F5003F 		cmp	r3, #131072
 5100 001c 40F09D80 		bne	.L471
 5101              	.L452:
3092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5102              		.loc 1 3092 0 is_stmt 1
 5103 0020 2268     		ldr	r2, [r4]
 5104 0022 5368     		ldr	r3, [r2, #4]
 5105 0024 23F40033 		bic	r3, r3, #131072
 5106 0028 E16A     		ldr	r1, [r4, #44]
 5107 002a 0B43     		orrs	r3, r3, r1
 5108 002c 5360     		str	r3, [r2, #4]
 5109              	.L451:
3096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5110              		.loc 1 3096 0
 5111 002e A36A     		ldr	r3, [r4, #40]
 5112 0030 13F0020F 		tst	r3, #2
 5113 0034 0CD0     		beq	.L453
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5114              		.loc 1 3098 0
ARM GAS  /tmp/ccnYk2xI.s 			page 175


 5115 0036 236B     		ldr	r3, [r4, #48]
 5116 0038 1BB1     		cbz	r3, .L454
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5117              		.loc 1 3098 0 is_stmt 0 discriminator 1
 5118 003a B3F5803F 		cmp	r3, #65536
 5119 003e 40F09280 		bne	.L472
 5120              	.L454:
3099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5121              		.loc 1 3099 0 is_stmt 1
 5122 0042 2268     		ldr	r2, [r4]
 5123 0044 5368     		ldr	r3, [r2, #4]
 5124 0046 23F48033 		bic	r3, r3, #65536
 5125 004a 216B     		ldr	r1, [r4, #48]
 5126 004c 0B43     		orrs	r3, r3, r1
 5127 004e 5360     		str	r3, [r2, #4]
 5128              	.L453:
3103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5129              		.loc 1 3103 0
 5130 0050 A36A     		ldr	r3, [r4, #40]
 5131 0052 13F0040F 		tst	r3, #4
 5132 0056 0CD0     		beq	.L455
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5133              		.loc 1 3105 0
 5134 0058 636B     		ldr	r3, [r4, #52]
 5135 005a 1BB1     		cbz	r3, .L456
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5136              		.loc 1 3105 0 is_stmt 0 discriminator 1
 5137 005c B3F5802F 		cmp	r3, #262144
 5138 0060 40F08780 		bne	.L473
 5139              	.L456:
3106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5140              		.loc 1 3106 0 is_stmt 1
 5141 0064 2268     		ldr	r2, [r4]
 5142 0066 5368     		ldr	r3, [r2, #4]
 5143 0068 23F48023 		bic	r3, r3, #262144
 5144 006c 616B     		ldr	r1, [r4, #52]
 5145 006e 0B43     		orrs	r3, r3, r1
 5146 0070 5360     		str	r3, [r2, #4]
 5147              	.L455:
3110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5148              		.loc 1 3110 0
 5149 0072 A36A     		ldr	r3, [r4, #40]
 5150 0074 13F0080F 		tst	r3, #8
 5151 0078 0BD0     		beq	.L457
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5152              		.loc 1 3112 0
 5153 007a A36B     		ldr	r3, [r4, #56]
 5154 007c 13B1     		cbz	r3, .L458
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5155              		.loc 1 3112 0 is_stmt 0 discriminator 1
 5156 007e B3F5004F 		cmp	r3, #32768
 5157 0082 7CD1     		bne	.L474
 5158              	.L458:
3113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5159              		.loc 1 3113 0 is_stmt 1
 5160 0084 2268     		ldr	r2, [r4]
 5161 0086 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccnYk2xI.s 			page 176


 5162 0088 23F40043 		bic	r3, r3, #32768
 5163 008c A16B     		ldr	r1, [r4, #56]
 5164 008e 0B43     		orrs	r3, r3, r1
 5165 0090 5360     		str	r3, [r2, #4]
 5166              	.L457:
3117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5167              		.loc 1 3117 0
 5168 0092 A36A     		ldr	r3, [r4, #40]
 5169 0094 13F0100F 		tst	r3, #16
 5170 0098 0BD0     		beq	.L459
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5171              		.loc 1 3119 0
 5172 009a E36B     		ldr	r3, [r4, #60]
 5173 009c 13B1     		cbz	r3, .L460
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5174              		.loc 1 3119 0 is_stmt 0 discriminator 1
 5175 009e B3F5805F 		cmp	r3, #4096
 5176 00a2 72D1     		bne	.L475
 5177              	.L460:
3120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5178              		.loc 1 3120 0 is_stmt 1
 5179 00a4 2268     		ldr	r2, [r4]
 5180 00a6 9368     		ldr	r3, [r2, #8]
 5181 00a8 23F48053 		bic	r3, r3, #4096
 5182 00ac E16B     		ldr	r1, [r4, #60]
 5183 00ae 0B43     		orrs	r3, r3, r1
 5184 00b0 9360     		str	r3, [r2, #8]
 5185              	.L459:
3124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5186              		.loc 1 3124 0
 5187 00b2 A36A     		ldr	r3, [r4, #40]
 5188 00b4 13F0200F 		tst	r3, #32
 5189 00b8 0BD0     		beq	.L461
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5190              		.loc 1 3126 0
 5191 00ba 236C     		ldr	r3, [r4, #64]
 5192 00bc 13B1     		cbz	r3, .L462
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5193              		.loc 1 3126 0 is_stmt 0 discriminator 1
 5194 00be B3F5005F 		cmp	r3, #8192
 5195 00c2 68D1     		bne	.L476
 5196              	.L462:
3127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5197              		.loc 1 3127 0 is_stmt 1
 5198 00c4 2268     		ldr	r2, [r4]
 5199 00c6 9368     		ldr	r3, [r2, #8]
 5200 00c8 23F40053 		bic	r3, r3, #8192
 5201 00cc 216C     		ldr	r1, [r4, #64]
 5202 00ce 0B43     		orrs	r3, r3, r1
 5203 00d0 9360     		str	r3, [r2, #8]
 5204              	.L461:
3131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5205              		.loc 1 3131 0
 5206 00d2 A36A     		ldr	r3, [r4, #40]
 5207 00d4 13F0400F 		tst	r3, #64
 5208 00d8 28D0     		beq	.L463
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
ARM GAS  /tmp/ccnYk2xI.s 			page 177


 5209              		.loc 1 3133 0
 5210 00da 2368     		ldr	r3, [r4]
 5211 00dc 434A     		ldr	r2, .L481
 5212 00de 9342     		cmp	r3, r2
 5213 00e0 14D0     		beq	.L464
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 5214              		.loc 1 3133 0 is_stmt 0 discriminator 1
 5215 00e2 A2F57442 		sub	r2, r2, #62464
 5216 00e6 9342     		cmp	r3, r2
 5217 00e8 10D0     		beq	.L464
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 5218              		.loc 1 3133 0 discriminator 2
 5219 00ea 02F58062 		add	r2, r2, #1024
 5220 00ee 9342     		cmp	r3, r2
 5221 00f0 0CD0     		beq	.L464
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 5222              		.loc 1 3133 0 discriminator 3
 5223 00f2 02F58062 		add	r2, r2, #1024
 5224 00f6 9342     		cmp	r3, r2
 5225 00f8 08D0     		beq	.L464
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 5226              		.loc 1 3133 0 discriminator 4
 5227 00fa 02F58062 		add	r2, r2, #1024
 5228 00fe 9342     		cmp	r3, r2
 5229 0100 04D0     		beq	.L464
3133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
 5230              		.loc 1 3133 0 discriminator 5
 5231 0102 40F63D41 		movw	r1, #3133
 5232 0106 3A48     		ldr	r0, .L481+4
 5233 0108 FFF7FEFF 		bl	assert_failed
 5234              	.LVL447:
 5235              	.L464:
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5236              		.loc 1 3134 0 is_stmt 1
 5237 010c 636C     		ldr	r3, [r4, #68]
 5238 010e 13B1     		cbz	r3, .L465
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5239              		.loc 1 3134 0 is_stmt 0 discriminator 1
 5240 0110 B3F5801F 		cmp	r3, #1048576
 5241 0114 45D1     		bne	.L477
 5242              	.L465:
3135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 5243              		.loc 1 3135 0 is_stmt 1
 5244 0116 2268     		ldr	r2, [r4]
 5245 0118 5368     		ldr	r3, [r2, #4]
 5246 011a 23F48013 		bic	r3, r3, #1048576
 5247 011e 616C     		ldr	r1, [r4, #68]
 5248 0120 0B43     		orrs	r3, r3, r1
 5249 0122 5360     		str	r3, [r2, #4]
3137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5250              		.loc 1 3137 0
 5251 0124 636C     		ldr	r3, [r4, #68]
 5252 0126 B3F5801F 		cmp	r3, #1048576
 5253 012a 40D0     		beq	.L478
 5254              	.L463:
3145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5255              		.loc 1 3145 0
ARM GAS  /tmp/ccnYk2xI.s 			page 178


 5256 012c A36A     		ldr	r3, [r4, #40]
 5257 012e 13F0800F 		tst	r3, #128
 5258 0132 0BD0     		beq	.L449
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5259              		.loc 1 3147 0
 5260 0134 E36C     		ldr	r3, [r4, #76]
 5261 0136 13B1     		cbz	r3, .L468
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5262              		.loc 1 3147 0 is_stmt 0 discriminator 1
 5263 0138 B3F5002F 		cmp	r3, #524288
 5264 013c 50D1     		bne	.L479
 5265              	.L468:
3148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5266              		.loc 1 3148 0 is_stmt 1
 5267 013e 2268     		ldr	r2, [r4]
 5268 0140 5368     		ldr	r3, [r2, #4]
 5269 0142 23F40023 		bic	r3, r3, #524288
 5270 0146 E16C     		ldr	r1, [r4, #76]
 5271 0148 0B43     		orrs	r3, r3, r1
 5272 014a 5360     		str	r3, [r2, #4]
 5273              	.L449:
3150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5274              		.loc 1 3150 0
 5275 014c 10BD     		pop	{r4, pc}
 5276              	.LVL448:
 5277              	.L470:
3086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5278              		.loc 1 3086 0 discriminator 1
 5279 014e 40F60E41 		movw	r1, #3086
 5280 0152 2748     		ldr	r0, .L481+4
 5281              	.LVL449:
 5282 0154 FFF7FEFF 		bl	assert_failed
 5283              	.LVL450:
 5284 0158 58E7     		b	.L450
 5285              	.L471:
3091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5286              		.loc 1 3091 0 discriminator 2
 5287 015a 40F61341 		movw	r1, #3091
 5288 015e 2448     		ldr	r0, .L481+4
 5289 0160 FFF7FEFF 		bl	assert_failed
 5290              	.LVL451:
 5291 0164 5CE7     		b	.L452
 5292              	.L472:
3098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5293              		.loc 1 3098 0 discriminator 2
 5294 0166 40F61A41 		movw	r1, #3098
 5295 016a 2148     		ldr	r0, .L481+4
 5296 016c FFF7FEFF 		bl	assert_failed
 5297              	.LVL452:
 5298 0170 67E7     		b	.L454
 5299              	.L473:
3105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5300              		.loc 1 3105 0 discriminator 2
 5301 0172 40F62141 		movw	r1, #3105
 5302 0176 1E48     		ldr	r0, .L481+4
 5303 0178 FFF7FEFF 		bl	assert_failed
 5304              	.LVL453:
ARM GAS  /tmp/ccnYk2xI.s 			page 179


 5305 017c 72E7     		b	.L456
 5306              	.L474:
3112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5307              		.loc 1 3112 0 discriminator 2
 5308 017e 40F62841 		movw	r1, #3112
 5309 0182 1B48     		ldr	r0, .L481+4
 5310 0184 FFF7FEFF 		bl	assert_failed
 5311              	.LVL454:
 5312 0188 7CE7     		b	.L458
 5313              	.L475:
3119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5314              		.loc 1 3119 0 discriminator 2
 5315 018a 40F62F41 		movw	r1, #3119
 5316 018e 1848     		ldr	r0, .L481+4
 5317 0190 FFF7FEFF 		bl	assert_failed
 5318              	.LVL455:
 5319 0194 86E7     		b	.L460
 5320              	.L476:
3126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5321              		.loc 1 3126 0 discriminator 2
 5322 0196 40F63641 		movw	r1, #3126
 5323 019a 1548     		ldr	r0, .L481+4
 5324 019c FFF7FEFF 		bl	assert_failed
 5325              	.LVL456:
 5326 01a0 90E7     		b	.L462
 5327              	.L477:
3134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5328              		.loc 1 3134 0 discriminator 2
 5329 01a2 40F63E41 		movw	r1, #3134
 5330 01a6 1248     		ldr	r0, .L481+4
 5331 01a8 FFF7FEFF 		bl	assert_failed
 5332              	.LVL457:
 5333 01ac B3E7     		b	.L465
 5334              	.L478:
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5335              		.loc 1 3139 0
 5336 01ae A36C     		ldr	r3, [r4, #72]
 5337 01b0 43B1     		cbz	r3, .L466
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5338              		.loc 1 3139 0 is_stmt 0 discriminator 1
 5339 01b2 B3F5001F 		cmp	r3, #2097152
 5340 01b6 05D0     		beq	.L466
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5341              		.loc 1 3139 0 discriminator 2
 5342 01b8 B3F5800F 		cmp	r3, #4194304
 5343 01bc 02D0     		beq	.L466
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5344              		.loc 1 3139 0 discriminator 3
 5345 01be B3F5C00F 		cmp	r3, #6291456
 5346 01c2 07D1     		bne	.L480
 5347              	.L466:
3140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5348              		.loc 1 3140 0 is_stmt 1
 5349 01c4 2268     		ldr	r2, [r4]
 5350 01c6 5368     		ldr	r3, [r2, #4]
 5351 01c8 23F4C003 		bic	r3, r3, #6291456
 5352 01cc A16C     		ldr	r1, [r4, #72]
ARM GAS  /tmp/ccnYk2xI.s 			page 180


 5353 01ce 0B43     		orrs	r3, r3, r1
 5354 01d0 5360     		str	r3, [r2, #4]
 5355 01d2 ABE7     		b	.L463
 5356              	.L480:
3139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5357              		.loc 1 3139 0 discriminator 4
 5358 01d4 40F64341 		movw	r1, #3139
 5359 01d8 0548     		ldr	r0, .L481+4
 5360 01da FFF7FEFF 		bl	assert_failed
 5361              	.LVL458:
 5362 01de F1E7     		b	.L466
 5363              	.L479:
3147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5364              		.loc 1 3147 0 discriminator 2
 5365 01e0 40F64B41 		movw	r1, #3147
 5366 01e4 0248     		ldr	r0, .L481+4
 5367 01e6 FFF7FEFF 		bl	assert_failed
 5368              	.LVL459:
 5369 01ea A8E7     		b	.L468
 5370              	.L482:
 5371              		.align	2
 5372              	.L481:
 5373 01ec 00380140 		.word	1073821696
 5374 01f0 00000000 		.word	.LC0
 5375              		.cfi_endproc
 5376              	.LFE175:
 5378              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 5379              		.align	1
 5380              		.global	UART_WaitOnFlagUntilTimeout
 5381              		.syntax unified
 5382              		.thumb
 5383              		.thumb_func
 5384              		.fpu fpv4-sp-d16
 5386              	UART_WaitOnFlagUntilTimeout:
 5387              	.LFB177:
3209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Wait until flag is set */
 5388              		.loc 1 3209 0
 5389              		.cfi_startproc
 5390              		@ args = 4, pretend = 0, frame = 0
 5391              		@ frame_needed = 0, uses_anonymous_args = 0
 5392              	.LVL460:
 5393 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5394              	.LCFI34:
 5395              		.cfi_def_cfa_offset 24
 5396              		.cfi_offset 4, -24
 5397              		.cfi_offset 5, -20
 5398              		.cfi_offset 6, -16
 5399              		.cfi_offset 7, -12
 5400              		.cfi_offset 8, -8
 5401              		.cfi_offset 14, -4
 5402 0004 0446     		mov	r4, r0
 5403 0006 0F46     		mov	r7, r1
 5404 0008 1646     		mov	r6, r2
 5405 000a 9846     		mov	r8, r3
 5406 000c 069D     		ldr	r5, [sp, #24]
 5407              	.LVL461:
 5408              	.L485:
ARM GAS  /tmp/ccnYk2xI.s 			page 181


3211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5409              		.loc 1 3211 0
 5410 000e 2368     		ldr	r3, [r4]
 5411 0010 DB69     		ldr	r3, [r3, #28]
 5412 0012 37EA0303 		bics	r3, r7, r3
 5413 0016 0CBF     		ite	eq
 5414 0018 0123     		moveq	r3, #1
 5415 001a 0023     		movne	r3, #0
 5416 001c B342     		cmp	r3, r6
 5417 001e 3FD1     		bne	.L491
3214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5418              		.loc 1 3214 0
 5419 0020 B5F1FF3F 		cmp	r5, #-1
 5420 0024 F3D0     		beq	.L485
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5421              		.loc 1 3216 0
 5422 0026 FFF7FEFF 		bl	HAL_GetTick
 5423              	.LVL462:
 5424 002a A0EB0800 		sub	r0, r0, r8
 5425 002e A842     		cmp	r0, r5
 5426 0030 22D8     		bhi	.L486
3216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5427              		.loc 1 3216 0 is_stmt 0 discriminator 1
 5428 0032 0DB3     		cbz	r5, .L486
3231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5429              		.loc 1 3231 0 is_stmt 1
 5430 0034 2368     		ldr	r3, [r4]
 5431 0036 1A68     		ldr	r2, [r3]
 5432 0038 12F0040F 		tst	r2, #4
 5433 003c E7D0     		beq	.L485
3233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         {
 5434              		.loc 1 3233 0
 5435 003e DA69     		ldr	r2, [r3, #28]
 5436 0040 12F4006F 		tst	r2, #2048
 5437 0044 E3D0     		beq	.L485
3236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5438              		.loc 1 3236 0
 5439 0046 4FF40062 		mov	r2, #2048
 5440 004a 1A62     		str	r2, [r3, #32]
3240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5441              		.loc 1 3240 0
 5442 004c 2268     		ldr	r2, [r4]
 5443 004e 1368     		ldr	r3, [r2]
 5444 0050 23F4D073 		bic	r3, r3, #416
 5445 0054 1360     		str	r3, [r2]
3241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5446              		.loc 1 3241 0
 5447 0056 2268     		ldr	r2, [r4]
 5448 0058 9368     		ldr	r3, [r2, #8]
 5449 005a 23F00103 		bic	r3, r3, #1
 5450 005e 9360     		str	r3, [r2, #8]
3243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5451              		.loc 1 3243 0
 5452 0060 2023     		movs	r3, #32
 5453 0062 C4F88030 		str	r3, [r4, #128]
3244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 5454              		.loc 1 3244 0
ARM GAS  /tmp/ccnYk2xI.s 			page 182


 5455 0066 C4F88430 		str	r3, [r4, #132]
3245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5456              		.loc 1 3245 0
 5457 006a C4F88830 		str	r3, [r4, #136]
3248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5458              		.loc 1 3248 0
 5459 006e 0023     		movs	r3, #0
 5460 0070 84F87C30 		strb	r3, [r4, #124]
3250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         }
 5461              		.loc 1 3250 0
 5462 0074 0320     		movs	r0, #3
 5463 0076 14E0     		b	.L488
 5464              	.L486:
3220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5465              		.loc 1 3220 0
 5466 0078 2268     		ldr	r2, [r4]
 5467 007a 1368     		ldr	r3, [r2]
 5468 007c 23F4D073 		bic	r3, r3, #416
 5469 0080 1360     		str	r3, [r2]
3221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5470              		.loc 1 3221 0
 5471 0082 2268     		ldr	r2, [r4]
 5472 0084 9368     		ldr	r3, [r2, #8]
 5473 0086 23F00103 		bic	r3, r3, #1
 5474 008a 9360     		str	r3, [r2, #8]
3223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5475              		.loc 1 3223 0
 5476 008c 2023     		movs	r3, #32
 5477 008e C4F88030 		str	r3, [r4, #128]
3224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5478              		.loc 1 3224 0
 5479 0092 C4F88430 		str	r3, [r4, #132]
3226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5480              		.loc 1 3226 0
 5481 0096 0023     		movs	r3, #0
 5482 0098 84F87C30 		strb	r3, [r4, #124]
3228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 5483              		.loc 1 3228 0
 5484 009c 0320     		movs	r0, #3
 5485 009e 00E0     		b	.L488
 5486              	.L491:
3255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 5487              		.loc 1 3255 0
 5488 00a0 0020     		movs	r0, #0
 5489              	.L488:
3256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5490              		.loc 1 3256 0
 5491 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5492              		.cfi_endproc
 5493              	.LFE177:
 5495              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 5496              		.align	1
 5497              		.global	HAL_UART_Transmit
 5498              		.syntax unified
 5499              		.thumb
 5500              		.thumb_func
 5501              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccnYk2xI.s 			page 183


 5503              	HAL_UART_Transmit:
 5504              	.LFB139:
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 5505              		.loc 1 1040 0
 5506              		.cfi_startproc
 5507              		@ args = 0, pretend = 0, frame = 0
 5508              		@ frame_needed = 0, uses_anonymous_args = 0
 5509              	.LVL463:
 5510 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5511              	.LCFI35:
 5512              		.cfi_def_cfa_offset 24
 5513              		.cfi_offset 4, -24
 5514              		.cfi_offset 5, -20
 5515              		.cfi_offset 6, -16
 5516              		.cfi_offset 7, -12
 5517              		.cfi_offset 8, -8
 5518              		.cfi_offset 14, -4
 5519 0004 82B0     		sub	sp, sp, #8
 5520              	.LCFI36:
 5521              		.cfi_def_cfa_offset 32
 5522 0006 1E46     		mov	r6, r3
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5523              		.loc 1 1046 0
 5524 0008 D0F88030 		ldr	r3, [r0, #128]
 5525              	.LVL464:
 5526 000c 202B     		cmp	r3, #32
 5527 000e 58D1     		bne	.L499
 5528 0010 0446     		mov	r4, r0
 5529 0012 0D46     		mov	r5, r1
 5530 0014 9046     		mov	r8, r2
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5531              		.loc 1 1048 0
 5532 0016 0029     		cmp	r1, #0
 5533 0018 58D0     		beq	.L500
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5534              		.loc 1 1048 0 is_stmt 0 discriminator 1
 5535 001a 002A     		cmp	r2, #0
 5536 001c 58D0     		beq	.L501
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5537              		.loc 1 1053 0 is_stmt 1
 5538 001e 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 5539 0022 012B     		cmp	r3, #1
 5540 0024 56D0     		beq	.L502
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5541              		.loc 1 1053 0 is_stmt 0 discriminator 2
 5542 0026 0123     		movs	r3, #1
 5543 0028 80F87C30 		strb	r3, [r0, #124]
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 5544              		.loc 1 1055 0 is_stmt 1 discriminator 2
 5545 002c 0023     		movs	r3, #0
 5546 002e C0F88830 		str	r3, [r0, #136]
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5547              		.loc 1 1056 0 discriminator 2
 5548 0032 2123     		movs	r3, #33
 5549 0034 C0F88030 		str	r3, [r0, #128]
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5550              		.loc 1 1059 0 discriminator 2
ARM GAS  /tmp/ccnYk2xI.s 			page 184


 5551 0038 FFF7FEFF 		bl	HAL_GetTick
 5552              	.LVL465:
 5553 003c 0746     		mov	r7, r0
 5554              	.LVL466:
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->TxXferCount = Size;
 5555              		.loc 1 1061 0 discriminator 2
 5556 003e A4F85480 		strh	r8, [r4, #84]	@ movhi
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5557              		.loc 1 1062 0 discriminator 2
 5558 0042 A4F85680 		strh	r8, [r4, #86]	@ movhi
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5559              		.loc 1 1065 0 discriminator 2
 5560 0046 A368     		ldr	r3, [r4, #8]
 5561 0048 B3F5805F 		cmp	r3, #4096
 5562 004c 05D0     		beq	.L508
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5563              		.loc 1 1073 0
 5564 004e 4FF00008 		mov	r8, #0
 5565              	.LVL467:
 5566              	.L494:
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5567              		.loc 1 1076 0
 5568 0052 0023     		movs	r3, #0
 5569 0054 84F87C30 		strb	r3, [r4, #124]
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5570              		.loc 1 1078 0
 5571 0058 13E0     		b	.L495
 5572              	.LVL468:
 5573              	.L508:
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5574              		.loc 1 1065 0 discriminator 1
 5575 005a 2369     		ldr	r3, [r4, #16]
 5576 005c 13B1     		cbz	r3, .L504
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5577              		.loc 1 1073 0
 5578 005e 4FF00008 		mov	r8, #0
 5579 0062 F6E7     		b	.L494
 5580              	.L504:
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5581              		.loc 1 1068 0
 5582 0064 A846     		mov	r8, r5
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 5583              		.loc 1 1067 0
 5584 0066 0025     		movs	r5, #0
 5585              	.LVL469:
 5586 0068 F3E7     		b	.L494
 5587              	.LVL470:
 5588              	.L510:
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
 5589              		.loc 1 1086 0
 5590 006a 38F8023B 		ldrh	r3, [r8], #2
 5591              	.LVL471:
 5592 006e 2268     		ldr	r2, [r4]
 5593 0070 C3F30803 		ubfx	r3, r3, #0, #9
 5594 0074 9362     		str	r3, [r2, #40]
 5595              	.LVL472:
 5596              	.L497:
ARM GAS  /tmp/ccnYk2xI.s 			page 185


1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5597              		.loc 1 1094 0
 5598 0076 B4F85630 		ldrh	r3, [r4, #86]
 5599 007a 013B     		subs	r3, r3, #1
 5600 007c 9BB2     		uxth	r3, r3
 5601 007e A4F85630 		strh	r3, [r4, #86]	@ movhi
 5602              	.L495:
1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5603              		.loc 1 1078 0
 5604 0082 B4F85630 		ldrh	r3, [r4, #86]
 5605 0086 9BB2     		uxth	r3, r3
 5606 0088 73B1     		cbz	r3, .L509
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5607              		.loc 1 1080 0
 5608 008a 0096     		str	r6, [sp]
 5609 008c 3B46     		mov	r3, r7
 5610 008e 0022     		movs	r2, #0
 5611 0090 8021     		movs	r1, #128
 5612 0092 2046     		mov	r0, r4
 5613 0094 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5614              	.LVL473:
 5615 0098 F0B9     		cbnz	r0, .L505
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5616              		.loc 1 1084 0
 5617 009a 002D     		cmp	r5, #0
 5618 009c E5D0     		beq	.L510
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
 5619              		.loc 1 1091 0
 5620 009e 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 5621              	.LVL474:
 5622 00a2 2368     		ldr	r3, [r4]
 5623 00a4 9A62     		str	r2, [r3, #40]
 5624              	.LVL475:
 5625 00a6 E6E7     		b	.L497
 5626              	.L509:
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5627              		.loc 1 1097 0
 5628 00a8 0096     		str	r6, [sp]
 5629 00aa 3B46     		mov	r3, r7
 5630 00ac 0022     		movs	r2, #0
 5631 00ae 4021     		movs	r1, #64
 5632 00b0 2046     		mov	r0, r4
 5633 00b2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5634              	.LVL476:
 5635 00b6 0346     		mov	r3, r0
 5636 00b8 80B9     		cbnz	r0, .L506
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5637              		.loc 1 1103 0
 5638 00ba 2022     		movs	r2, #32
 5639 00bc C4F88020 		str	r2, [r4, #128]
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5640              		.loc 1 1105 0
 5641 00c0 00E0     		b	.L493
 5642              	.LVL477:
 5643              	.L499:
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5644              		.loc 1 1109 0
ARM GAS  /tmp/ccnYk2xI.s 			page 186


 5645 00c2 0223     		movs	r3, #2
 5646              	.LVL478:
 5647              	.L493:
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5648              		.loc 1 1111 0
 5649 00c4 1846     		mov	r0, r3
 5650 00c6 02B0     		add	sp, sp, #8
 5651              	.LCFI37:
 5652              		.cfi_remember_state
 5653              		.cfi_def_cfa_offset 24
 5654              		@ sp needed
 5655 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5656              	.LVL479:
 5657              	.L500:
 5658              	.LCFI38:
 5659              		.cfi_restore_state
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5660              		.loc 1 1050 0
 5661 00cc 0123     		movs	r3, #1
 5662 00ce F9E7     		b	.L493
 5663              	.L501:
 5664 00d0 0123     		movs	r3, #1
 5665 00d2 F7E7     		b	.L493
 5666              	.L502:
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5667              		.loc 1 1053 0
 5668 00d4 0223     		movs	r3, #2
 5669 00d6 F5E7     		b	.L493
 5670              	.LVL480:
 5671              	.L505:
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 5672              		.loc 1 1082 0
 5673 00d8 0323     		movs	r3, #3
 5674 00da F3E7     		b	.L493
 5675              	.L506:
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5676              		.loc 1 1099 0
 5677 00dc 0323     		movs	r3, #3
 5678 00de F1E7     		b	.L493
 5679              		.cfi_endproc
 5680              	.LFE139:
 5682              		.section	.text.HAL_UART_Receive,"ax",%progbits
 5683              		.align	1
 5684              		.global	HAL_UART_Receive
 5685              		.syntax unified
 5686              		.thumb
 5687              		.thumb_func
 5688              		.fpu fpv4-sp-d16
 5690              	HAL_UART_Receive:
 5691              	.LFB140:
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint8_t  *pdata8bits;
 5692              		.loc 1 1129 0
 5693              		.cfi_startproc
 5694              		@ args = 0, pretend = 0, frame = 0
 5695              		@ frame_needed = 0, uses_anonymous_args = 0
 5696              	.LVL481:
 5697 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
ARM GAS  /tmp/ccnYk2xI.s 			page 187


 5698              	.LCFI39:
 5699              		.cfi_def_cfa_offset 28
 5700              		.cfi_offset 4, -28
 5701              		.cfi_offset 5, -24
 5702              		.cfi_offset 6, -20
 5703              		.cfi_offset 7, -16
 5704              		.cfi_offset 8, -12
 5705              		.cfi_offset 9, -8
 5706              		.cfi_offset 14, -4
 5707 0004 83B0     		sub	sp, sp, #12
 5708              	.LCFI40:
 5709              		.cfi_def_cfa_offset 40
 5710 0006 1E46     		mov	r6, r3
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5711              		.loc 1 1136 0
 5712 0008 D0F88430 		ldr	r3, [r0, #132]
 5713              	.LVL482:
 5714 000c 202B     		cmp	r3, #32
 5715 000e 7ED1     		bne	.L525
 5716 0010 0446     		mov	r4, r0
 5717 0012 0D46     		mov	r5, r1
 5718 0014 9046     		mov	r8, r2
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5719              		.loc 1 1138 0
 5720 0016 0029     		cmp	r1, #0
 5721 0018 7DD0     		beq	.L526
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5722              		.loc 1 1138 0 is_stmt 0 discriminator 1
 5723 001a 002A     		cmp	r2, #0
 5724 001c 7DD0     		beq	.L527
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5725              		.loc 1 1143 0 is_stmt 1
 5726 001e 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 5727 0022 012B     		cmp	r3, #1
 5728 0024 7BD0     		beq	.L528
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5729              		.loc 1 1143 0 is_stmt 0 discriminator 2
 5730 0026 0123     		movs	r3, #1
 5731 0028 80F87C30 		strb	r3, [r0, #124]
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 5732              		.loc 1 1145 0 is_stmt 1 discriminator 2
 5733 002c 0023     		movs	r3, #0
 5734 002e C0F88830 		str	r3, [r0, #136]
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5735              		.loc 1 1146 0 discriminator 2
 5736 0032 2223     		movs	r3, #34
 5737 0034 C0F88430 		str	r3, [r0, #132]
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5738              		.loc 1 1149 0 discriminator 2
 5739 0038 FFF7FEFF 		bl	HAL_GetTick
 5740              	.LVL483:
 5741 003c 0746     		mov	r7, r0
 5742              	.LVL484:
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     huart->RxXferCount = Size;
 5743              		.loc 1 1151 0 discriminator 2
 5744 003e A4F85C80 		strh	r8, [r4, #92]	@ movhi
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
ARM GAS  /tmp/ccnYk2xI.s 			page 188


 5745              		.loc 1 1152 0 discriminator 2
 5746 0042 A4F85E80 		strh	r8, [r4, #94]	@ movhi
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5747              		.loc 1 1155 0 discriminator 2
 5748 0046 A368     		ldr	r3, [r4, #8]
 5749 0048 B3F5805F 		cmp	r3, #4096
 5750 004c 06D0     		beq	.L533
 5751 004e A3B9     		cbnz	r3, .L516
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5752              		.loc 1 1155 0 is_stmt 0 discriminator 5
 5753 0050 2269     		ldr	r2, [r4, #16]
 5754 0052 72B9     		cbnz	r2, .L517
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5755              		.loc 1 1155 0 discriminator 7
 5756 0054 FF22     		movs	r2, #255
 5757 0056 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5758 005a 14E0     		b	.L515
 5759              	.L533:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5760              		.loc 1 1155 0 discriminator 1
 5761 005c 2269     		ldr	r2, [r4, #16]
 5762 005e 22B9     		cbnz	r2, .L514
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5763              		.loc 1 1155 0 discriminator 3
 5764 0060 40F2FF12 		movw	r2, #511
 5765 0064 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5766 0068 0DE0     		b	.L515
 5767              	.L514:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5768              		.loc 1 1155 0 discriminator 4
 5769 006a FF22     		movs	r2, #255
 5770 006c A4F86020 		strh	r2, [r4, #96]	@ movhi
 5771 0070 09E0     		b	.L515
 5772              	.L517:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5773              		.loc 1 1155 0 discriminator 8
 5774 0072 7F22     		movs	r2, #127
 5775 0074 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5776 0078 05E0     		b	.L515
 5777              	.L516:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5778              		.loc 1 1155 0 discriminator 6
 5779 007a B3F1805F 		cmp	r3, #268435456
 5780 007e 0DD0     		beq	.L534
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5781              		.loc 1 1155 0 discriminator 10
 5782 0080 0022     		movs	r2, #0
 5783 0082 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5784              	.L515:
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5785              		.loc 1 1156 0 is_stmt 1
 5786 0086 B4F86080 		ldrh	r8, [r4, #96]
 5787              	.LVL485:
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5788              		.loc 1 1159 0
 5789 008a B3F5805F 		cmp	r3, #4096
 5790 008e 0FD0     		beq	.L535
ARM GAS  /tmp/ccnYk2xI.s 			page 189


1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5791              		.loc 1 1167 0
 5792 0090 4FF00009 		mov	r9, #0
 5793              	.LVL486:
 5794              	.L520:
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5795              		.loc 1 1170 0
 5796 0094 0023     		movs	r3, #0
 5797 0096 84F87C30 		strb	r3, [r4, #124]
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5798              		.loc 1 1173 0
 5799 009a 1DE0     		b	.L521
 5800              	.LVL487:
 5801              	.L534:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5802              		.loc 1 1155 0 discriminator 9
 5803 009c 2269     		ldr	r2, [r4, #16]
 5804 009e 1AB9     		cbnz	r2, .L519
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5805              		.loc 1 1155 0 is_stmt 0 discriminator 11
 5806 00a0 7F22     		movs	r2, #127
 5807 00a2 A4F86020 		strh	r2, [r4, #96]	@ movhi
 5808 00a6 EEE7     		b	.L515
 5809              	.L519:
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     uhMask = huart->Mask;
 5810              		.loc 1 1155 0 discriminator 12
 5811 00a8 3F22     		movs	r2, #63
 5812 00aa A4F86020 		strh	r2, [r4, #96]	@ movhi
 5813 00ae EAE7     		b	.L515
 5814              	.LVL488:
 5815              	.L535:
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5816              		.loc 1 1159 0 is_stmt 1 discriminator 1
 5817 00b0 2369     		ldr	r3, [r4, #16]
 5818 00b2 13B1     		cbz	r3, .L530
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5819              		.loc 1 1167 0
 5820 00b4 4FF00009 		mov	r9, #0
 5821 00b8 ECE7     		b	.L520
 5822              	.L530:
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5823              		.loc 1 1162 0
 5824 00ba A946     		mov	r9, r5
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 5825              		.loc 1 1161 0
 5826 00bc 0025     		movs	r5, #0
 5827              	.LVL489:
 5828 00be E9E7     		b	.L520
 5829              	.LVL490:
 5830              	.L537:
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata16bits++;
 5831              		.loc 1 1181 0
 5832 00c0 2368     		ldr	r3, [r4]
 5833 00c2 5B6A     		ldr	r3, [r3, #36]
 5834 00c4 08EA0303 		and	r3, r8, r3
 5835 00c8 29F8023B 		strh	r3, [r9], #2	@ movhi
 5836              	.LVL491:
ARM GAS  /tmp/ccnYk2xI.s 			page 190


 5837              	.L523:
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5838              		.loc 1 1189 0
 5839 00cc B4F85E30 		ldrh	r3, [r4, #94]
 5840 00d0 013B     		subs	r3, r3, #1
 5841 00d2 9BB2     		uxth	r3, r3
 5842 00d4 A4F85E30 		strh	r3, [r4, #94]	@ movhi
 5843              	.L521:
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5844              		.loc 1 1173 0
 5845 00d8 B4F85E30 		ldrh	r3, [r4, #94]
 5846 00dc 9BB2     		uxth	r3, r3
 5847 00de 8BB1     		cbz	r3, .L536
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5848              		.loc 1 1175 0
 5849 00e0 0096     		str	r6, [sp]
 5850 00e2 3B46     		mov	r3, r7
 5851 00e4 0022     		movs	r2, #0
 5852 00e6 2021     		movs	r1, #32
 5853 00e8 2046     		mov	r0, r4
 5854 00ea FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5855              	.LVL492:
 5856 00ee C0B9     		cbnz	r0, .L531
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       {
 5857              		.loc 1 1179 0
 5858 00f0 002D     		cmp	r5, #0
 5859 00f2 E5D0     		beq	.L537
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****         pdata8bits++;
 5860              		.loc 1 1186 0
 5861 00f4 2368     		ldr	r3, [r4]
 5862 00f6 5A6A     		ldr	r2, [r3, #36]
 5863 00f8 5FFA88F3 		uxtb	r3, r8
 5864 00fc 1340     		ands	r3, r3, r2
 5865 00fe 05F8013B 		strb	r3, [r5], #1
 5866              	.LVL493:
 5867 0102 E3E7     		b	.L523
 5868              	.L536:
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5869              		.loc 1 1193 0
 5870 0104 2023     		movs	r3, #32
 5871 0106 C4F88430 		str	r3, [r4, #132]
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5872              		.loc 1 1195 0
 5873 010a 0020     		movs	r0, #0
 5874 010c 00E0     		b	.L512
 5875              	.LVL494:
 5876              	.L525:
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 5877              		.loc 1 1199 0
 5878 010e 0220     		movs	r0, #2
 5879              	.LVL495:
 5880              	.L512:
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5881              		.loc 1 1201 0
 5882 0110 03B0     		add	sp, sp, #12
 5883              	.LCFI41:
 5884              		.cfi_remember_state
ARM GAS  /tmp/ccnYk2xI.s 			page 191


 5885              		.cfi_def_cfa_offset 28
 5886              		@ sp needed
 5887 0112 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5888              	.LVL496:
 5889              	.L526:
 5890              	.LCFI42:
 5891              		.cfi_restore_state
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5892              		.loc 1 1140 0
 5893 0116 0120     		movs	r0, #1
 5894              	.LVL497:
 5895 0118 FAE7     		b	.L512
 5896              	.LVL498:
 5897              	.L527:
 5898 011a 0120     		movs	r0, #1
 5899              	.LVL499:
 5900 011c F8E7     		b	.L512
 5901              	.LVL500:
 5902              	.L528:
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5903              		.loc 1 1143 0
 5904 011e 0220     		movs	r0, #2
 5905              	.LVL501:
 5906 0120 F6E7     		b	.L512
 5907              	.LVL502:
 5908              	.L531:
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****       }
 5909              		.loc 1 1177 0
 5910 0122 0320     		movs	r0, #3
 5911 0124 F4E7     		b	.L512
 5912              		.cfi_endproc
 5913              	.LFE140:
 5915              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5916              		.align	1
 5917              		.global	UART_CheckIdleState
 5918              		.syntax unified
 5919              		.thumb
 5920              		.thumb_func
 5921              		.fpu fpv4-sp-d16
 5923              	UART_CheckIdleState:
 5924              	.LFB176:
3158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   uint32_t tickstart;
 5925              		.loc 1 3158 0
 5926              		.cfi_startproc
 5927              		@ args = 0, pretend = 0, frame = 0
 5928              		@ frame_needed = 0, uses_anonymous_args = 0
 5929              	.LVL503:
 5930 0000 30B5     		push	{r4, r5, lr}
 5931              	.LCFI43:
 5932              		.cfi_def_cfa_offset 12
 5933              		.cfi_offset 4, -12
 5934              		.cfi_offset 5, -8
 5935              		.cfi_offset 14, -4
 5936 0002 83B0     		sub	sp, sp, #12
 5937              	.LCFI44:
 5938              		.cfi_def_cfa_offset 24
 5939 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccnYk2xI.s 			page 192


3162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5940              		.loc 1 3162 0
 5941 0006 0023     		movs	r3, #0
 5942 0008 C0F88830 		str	r3, [r0, #136]
3165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5943              		.loc 1 3165 0
 5944 000c FFF7FEFF 		bl	HAL_GetTick
 5945              	.LVL504:
 5946 0010 0546     		mov	r5, r0
 5947              	.LVL505:
3168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5948              		.loc 1 3168 0
 5949 0012 2368     		ldr	r3, [r4]
 5950 0014 1B68     		ldr	r3, [r3]
 5951 0016 13F0080F 		tst	r3, #8
 5952 001a 0ED1     		bne	.L545
 5953              	.LVL506:
 5954              	.L539:
3179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 5955              		.loc 1 3179 0
 5956 001c 2368     		ldr	r3, [r4]
 5957 001e 1B68     		ldr	r3, [r3]
 5958 0020 13F0040F 		tst	r3, #4
 5959 0024 17D1     		bne	.L546
 5960              	.L541:
3190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5961              		.loc 1 3190 0
 5962 0026 2023     		movs	r3, #32
 5963 0028 C4F88030 		str	r3, [r4, #128]
3191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5964              		.loc 1 3191 0
 5965 002c C4F88430 		str	r3, [r4, #132]
3193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5966              		.loc 1 3193 0
 5967 0030 0020     		movs	r0, #0
 5968 0032 84F87C00 		strb	r0, [r4, #124]
 5969              	.L540:
3196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 5970              		.loc 1 3196 0
 5971 0036 03B0     		add	sp, sp, #12
 5972              	.LCFI45:
 5973              		.cfi_remember_state
 5974              		.cfi_def_cfa_offset 12
 5975              		@ sp needed
 5976 0038 30BD     		pop	{r4, r5, pc}
 5977              	.LVL507:
 5978              	.L545:
 5979              	.LCFI46:
 5980              		.cfi_restore_state
3171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5981              		.loc 1 3171 0
 5982 003a 6FF07E43 		mvn	r3, #-33554432
 5983 003e 0093     		str	r3, [sp]
 5984 0040 0346     		mov	r3, r0
 5985 0042 0022     		movs	r2, #0
 5986 0044 4FF40011 		mov	r1, #2097152
 5987 0048 2046     		mov	r0, r4
ARM GAS  /tmp/ccnYk2xI.s 			page 193


 5988              	.LVL508:
 5989 004a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5990              	.LVL509:
 5991 004e 0028     		cmp	r0, #0
 5992 0050 E4D0     		beq	.L539
3174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 5993              		.loc 1 3174 0
 5994 0052 0320     		movs	r0, #3
 5995 0054 EFE7     		b	.L540
 5996              	.L546:
3182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     {
 5997              		.loc 1 3182 0
 5998 0056 6FF07E43 		mvn	r3, #-33554432
 5999 005a 0093     		str	r3, [sp]
 6000 005c 2B46     		mov	r3, r5
 6001 005e 0022     		movs	r2, #0
 6002 0060 4FF48001 		mov	r1, #4194304
 6003 0064 2046     		mov	r0, r4
 6004 0066 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6005              	.LVL510:
 6006 006a 0028     		cmp	r0, #0
 6007 006c DBD0     		beq	.L541
3185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****     }
 6008              		.loc 1 3185 0
 6009 006e 0320     		movs	r0, #3
 6010 0070 E1E7     		b	.L540
 6011              		.cfi_endproc
 6012              	.LFE176:
 6014              		.section	.text.HAL_UART_Init,"ax",%progbits
 6015              		.align	1
 6016              		.global	HAL_UART_Init
 6017              		.syntax unified
 6018              		.thumb
 6019              		.thumb_func
 6020              		.fpu fpv4-sp-d16
 6022              	HAL_UART_Init:
 6023              	.LFB132:
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6024              		.loc 1 299 0
 6025              		.cfi_startproc
 6026              		@ args = 0, pretend = 0, frame = 0
 6027              		@ frame_needed = 0, uses_anonymous_args = 0
 6028              	.LVL511:
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6029              		.loc 1 301 0
 6030 0000 0028     		cmp	r0, #0
 6031 0002 70D0     		beq	.L553
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6032              		.loc 1 299 0
 6033 0004 10B5     		push	{r4, lr}
 6034              	.LCFI47:
 6035              		.cfi_def_cfa_offset 8
 6036              		.cfi_offset 4, -8
 6037              		.cfi_offset 14, -4
 6038 0006 0446     		mov	r4, r0
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6039              		.loc 1 306 0
ARM GAS  /tmp/ccnYk2xI.s 			page 194


 6040 0008 8369     		ldr	r3, [r0, #24]
 6041 000a 002B     		cmp	r3, #0
 6042 000c 43D0     		beq	.L549
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6043              		.loc 1 309 0
 6044 000e 0368     		ldr	r3, [r0]
 6045 0010 364A     		ldr	r2, .L560
 6046 0012 9342     		cmp	r3, r2
 6047 0014 18D0     		beq	.L550
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6048              		.loc 1 309 0 is_stmt 0 discriminator 1
 6049 0016 A2F57442 		sub	r2, r2, #62464
 6050 001a 9342     		cmp	r3, r2
 6051 001c 14D0     		beq	.L550
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6052              		.loc 1 309 0 discriminator 2
 6053 001e 02F58062 		add	r2, r2, #1024
 6054 0022 9342     		cmp	r3, r2
 6055 0024 10D0     		beq	.L550
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6056              		.loc 1 309 0 discriminator 3
 6057 0026 02F58062 		add	r2, r2, #1024
 6058 002a 9342     		cmp	r3, r2
 6059 002c 0CD0     		beq	.L550
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6060              		.loc 1 309 0 discriminator 4
 6061 002e 02F58062 		add	r2, r2, #1024
 6062 0032 9342     		cmp	r3, r2
 6063 0034 08D0     		beq	.L550
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6064              		.loc 1 309 0 discriminator 5
 6065 0036 02F54052 		add	r2, r2, #12288
 6066 003a 9342     		cmp	r3, r2
 6067 003c 04D0     		beq	.L550
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6068              		.loc 1 309 0 discriminator 6
 6069 003e 40F23511 		movw	r1, #309
 6070 0042 2B48     		ldr	r0, .L560+4
 6071              	.LVL512:
 6072 0044 FFF7FEFF 		bl	assert_failed
 6073              	.LVL513:
 6074              	.L550:
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6075              		.loc 1 317 0 is_stmt 1
 6076 0048 D4F88030 		ldr	r3, [r4, #128]
 6077 004c 002B     		cmp	r3, #0
 6078 004e 40D0     		beq	.L558
 6079              	.L551:
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6080              		.loc 1 338 0
 6081 0050 2423     		movs	r3, #36
 6082 0052 C4F88030 		str	r3, [r4, #128]
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6083              		.loc 1 340 0
 6084 0056 2268     		ldr	r2, [r4]
 6085 0058 1368     		ldr	r3, [r2]
 6086 005a 23F00103 		bic	r3, r3, #1
ARM GAS  /tmp/ccnYk2xI.s 			page 195


 6087 005e 1360     		str	r3, [r2]
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6088              		.loc 1 343 0
 6089 0060 2046     		mov	r0, r4
 6090 0062 FFF7FEFF 		bl	UART_SetConfig
 6091              	.LVL514:
 6092 0066 0128     		cmp	r0, #1
 6093 0068 14D0     		beq	.L548
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6094              		.loc 1 348 0
 6095 006a A36A     		ldr	r3, [r4, #40]
 6096 006c 002B     		cmp	r3, #0
 6097 006e 36D1     		bne	.L559
 6098              	.L552:
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 6099              		.loc 1 356 0
 6100 0070 2268     		ldr	r2, [r4]
 6101 0072 5368     		ldr	r3, [r2, #4]
 6102 0074 23F49043 		bic	r3, r3, #18432
 6103 0078 5360     		str	r3, [r2, #4]
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6104              		.loc 1 357 0
 6105 007a 2268     		ldr	r2, [r4]
 6106 007c 9368     		ldr	r3, [r2, #8]
 6107 007e 23F02A03 		bic	r3, r3, #42
 6108 0082 9360     		str	r3, [r2, #8]
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6109              		.loc 1 359 0
 6110 0084 2268     		ldr	r2, [r4]
 6111 0086 1368     		ldr	r3, [r2]
 6112 0088 43F00103 		orr	r3, r3, #1
 6113 008c 1360     		str	r3, [r2]
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6114              		.loc 1 362 0
 6115 008e 2046     		mov	r0, r4
 6116 0090 FFF7FEFF 		bl	UART_CheckIdleState
 6117              	.LVL515:
 6118              	.L548:
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6119              		.loc 1 363 0
 6120 0094 10BD     		pop	{r4, pc}
 6121              	.LVL516:
 6122              	.L549:
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6123              		.loc 1 314 0
 6124 0096 0368     		ldr	r3, [r0]
 6125 0098 144A     		ldr	r2, .L560
 6126 009a 9342     		cmp	r3, r2
 6127 009c D4D0     		beq	.L550
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6128              		.loc 1 314 0 is_stmt 0 discriminator 1
 6129 009e A2F57442 		sub	r2, r2, #62464
 6130 00a2 9342     		cmp	r3, r2
 6131 00a4 D0D0     		beq	.L550
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6132              		.loc 1 314 0 discriminator 2
 6133 00a6 02F58062 		add	r2, r2, #1024
ARM GAS  /tmp/ccnYk2xI.s 			page 196


 6134 00aa 9342     		cmp	r3, r2
 6135 00ac CCD0     		beq	.L550
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6136              		.loc 1 314 0 discriminator 3
 6137 00ae 02F58062 		add	r2, r2, #1024
 6138 00b2 9342     		cmp	r3, r2
 6139 00b4 C8D0     		beq	.L550
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6140              		.loc 1 314 0 discriminator 4
 6141 00b6 02F58062 		add	r2, r2, #1024
 6142 00ba 9342     		cmp	r3, r2
 6143 00bc C4D0     		beq	.L550
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6144              		.loc 1 314 0 discriminator 5
 6145 00be 02F54052 		add	r2, r2, #12288
 6146 00c2 9342     		cmp	r3, r2
 6147 00c4 C0D0     		beq	.L550
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6148              		.loc 1 314 0 discriminator 6
 6149 00c6 4FF49D71 		mov	r1, #314
 6150 00ca 0948     		ldr	r0, .L560+4
 6151              	.LVL517:
 6152 00cc FFF7FEFF 		bl	assert_failed
 6153              	.LVL518:
 6154 00d0 BAE7     		b	.L550
 6155              	.L558:
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6156              		.loc 1 320 0 is_stmt 1
 6157 00d2 84F87C30 		strb	r3, [r4, #124]
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6158              		.loc 1 334 0
 6159 00d6 2046     		mov	r0, r4
 6160 00d8 FFF7FEFF 		bl	HAL_UART_MspInit
 6161              	.LVL519:
 6162 00dc B8E7     		b	.L551
 6163              	.L559:
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6164              		.loc 1 350 0
 6165 00de 2046     		mov	r0, r4
 6166 00e0 FFF7FEFF 		bl	UART_AdvFeatureConfig
 6167              	.LVL520:
 6168 00e4 C4E7     		b	.L552
 6169              	.LVL521:
 6170              	.L553:
 6171              	.LCFI48:
 6172              		.cfi_def_cfa_offset 0
 6173              		.cfi_restore 4
 6174              		.cfi_restore 14
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6175              		.loc 1 303 0
 6176 00e6 0120     		movs	r0, #1
 6177              	.LVL522:
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6178              		.loc 1 363 0
 6179 00e8 7047     		bx	lr
 6180              	.L561:
 6181 00ea 00BF     		.align	2
ARM GAS  /tmp/ccnYk2xI.s 			page 197


 6182              	.L560:
 6183 00ec 00380140 		.word	1073821696
 6184 00f0 00000000 		.word	.LC0
 6185              		.cfi_endproc
 6186              	.LFE132:
 6188              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 6189              		.align	1
 6190              		.global	HAL_HalfDuplex_Init
 6191              		.syntax unified
 6192              		.thumb
 6193              		.thumb_func
 6194              		.fpu fpv4-sp-d16
 6196              	HAL_HalfDuplex_Init:
 6197              	.LFB133:
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6198              		.loc 1 372 0
 6199              		.cfi_startproc
 6200              		@ args = 0, pretend = 0, frame = 0
 6201              		@ frame_needed = 0, uses_anonymous_args = 0
 6202              	.LVL523:
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6203              		.loc 1 374 0
 6204 0000 0028     		cmp	r0, #0
 6205 0002 52D0     		beq	.L567
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6206              		.loc 1 372 0
 6207 0004 10B5     		push	{r4, lr}
 6208              	.LCFI49:
 6209              		.cfi_def_cfa_offset 8
 6210              		.cfi_offset 4, -8
 6211              		.cfi_offset 14, -4
 6212 0006 0446     		mov	r4, r0
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6213              		.loc 1 380 0
 6214 0008 0368     		ldr	r3, [r0]
 6215 000a 294A     		ldr	r2, .L574
 6216 000c 9342     		cmp	r3, r2
 6217 000e 18D0     		beq	.L564
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6218              		.loc 1 380 0 is_stmt 0 discriminator 1
 6219 0010 A2F57442 		sub	r2, r2, #62464
 6220 0014 9342     		cmp	r3, r2
 6221 0016 14D0     		beq	.L564
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6222              		.loc 1 380 0 discriminator 2
 6223 0018 02F58062 		add	r2, r2, #1024
 6224 001c 9342     		cmp	r3, r2
 6225 001e 10D0     		beq	.L564
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6226              		.loc 1 380 0 discriminator 3
 6227 0020 02F58062 		add	r2, r2, #1024
 6228 0024 9342     		cmp	r3, r2
 6229 0026 0CD0     		beq	.L564
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6230              		.loc 1 380 0 discriminator 4
 6231 0028 02F58062 		add	r2, r2, #1024
 6232 002c 9342     		cmp	r3, r2
ARM GAS  /tmp/ccnYk2xI.s 			page 198


 6233 002e 08D0     		beq	.L564
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6234              		.loc 1 380 0 discriminator 5
 6235 0030 02F54052 		add	r2, r2, #12288
 6236 0034 9342     		cmp	r3, r2
 6237 0036 04D0     		beq	.L564
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6238              		.loc 1 380 0 discriminator 6
 6239 0038 4FF4BE71 		mov	r1, #380
 6240 003c 1D48     		ldr	r0, .L574+4
 6241              	.LVL524:
 6242 003e FFF7FEFF 		bl	assert_failed
 6243              	.LVL525:
 6244              	.L564:
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6245              		.loc 1 382 0 is_stmt 1
 6246 0042 D4F88030 		ldr	r3, [r4, #128]
 6247 0046 33B3     		cbz	r3, .L572
 6248              	.L565:
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6249              		.loc 1 403 0
 6250 0048 2423     		movs	r3, #36
 6251 004a C4F88030 		str	r3, [r4, #128]
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6252              		.loc 1 405 0
 6253 004e 2268     		ldr	r2, [r4]
 6254 0050 1368     		ldr	r3, [r2]
 6255 0052 23F00103 		bic	r3, r3, #1
 6256 0056 1360     		str	r3, [r2]
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6257              		.loc 1 408 0
 6258 0058 2046     		mov	r0, r4
 6259 005a FFF7FEFF 		bl	UART_SetConfig
 6260              	.LVL526:
 6261 005e 0128     		cmp	r0, #1
 6262 0060 18D0     		beq	.L563
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6263              		.loc 1 413 0
 6264 0062 A36A     		ldr	r3, [r4, #40]
 6265 0064 EBB9     		cbnz	r3, .L573
 6266              	.L566:
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 6267              		.loc 1 421 0
 6268 0066 2268     		ldr	r2, [r4]
 6269 0068 5368     		ldr	r3, [r2, #4]
 6270 006a 23F49043 		bic	r3, r3, #18432
 6271 006e 5360     		str	r3, [r2, #4]
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6272              		.loc 1 422 0
 6273 0070 2268     		ldr	r2, [r4]
 6274 0072 9368     		ldr	r3, [r2, #8]
 6275 0074 23F02203 		bic	r3, r3, #34
 6276 0078 9360     		str	r3, [r2, #8]
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6277              		.loc 1 425 0
 6278 007a 2268     		ldr	r2, [r4]
 6279 007c 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccnYk2xI.s 			page 199


 6280 007e 43F00803 		orr	r3, r3, #8
 6281 0082 9360     		str	r3, [r2, #8]
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6282              		.loc 1 427 0
 6283 0084 2268     		ldr	r2, [r4]
 6284 0086 1368     		ldr	r3, [r2]
 6285 0088 43F00103 		orr	r3, r3, #1
 6286 008c 1360     		str	r3, [r2]
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6287              		.loc 1 430 0
 6288 008e 2046     		mov	r0, r4
 6289 0090 FFF7FEFF 		bl	UART_CheckIdleState
 6290              	.LVL527:
 6291              	.L563:
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6292              		.loc 1 431 0
 6293 0094 10BD     		pop	{r4, pc}
 6294              	.LVL528:
 6295              	.L572:
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6296              		.loc 1 385 0
 6297 0096 84F87C30 		strb	r3, [r4, #124]
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6298              		.loc 1 399 0
 6299 009a 2046     		mov	r0, r4
 6300 009c FFF7FEFF 		bl	HAL_UART_MspInit
 6301              	.LVL529:
 6302 00a0 D2E7     		b	.L565
 6303              	.L573:
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6304              		.loc 1 415 0
 6305 00a2 2046     		mov	r0, r4
 6306 00a4 FFF7FEFF 		bl	UART_AdvFeatureConfig
 6307              	.LVL530:
 6308 00a8 DDE7     		b	.L566
 6309              	.LVL531:
 6310              	.L567:
 6311              	.LCFI50:
 6312              		.cfi_def_cfa_offset 0
 6313              		.cfi_restore 4
 6314              		.cfi_restore 14
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6315              		.loc 1 376 0
 6316 00aa 0120     		movs	r0, #1
 6317              	.LVL532:
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6318              		.loc 1 431 0
 6319 00ac 7047     		bx	lr
 6320              	.L575:
 6321 00ae 00BF     		.align	2
 6322              	.L574:
 6323 00b0 00380140 		.word	1073821696
 6324 00b4 00000000 		.word	.LC0
 6325              		.cfi_endproc
 6326              	.LFE133:
 6328              		.section	.text.HAL_LIN_Init,"ax",%progbits
 6329              		.align	1
ARM GAS  /tmp/ccnYk2xI.s 			page 200


 6330              		.global	HAL_LIN_Init
 6331              		.syntax unified
 6332              		.thumb
 6333              		.thumb_func
 6334              		.fpu fpv4-sp-d16
 6336              	HAL_LIN_Init:
 6337              	.LFB134:
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6338              		.loc 1 445 0
 6339              		.cfi_startproc
 6340              		@ args = 0, pretend = 0, frame = 0
 6341              		@ frame_needed = 0, uses_anonymous_args = 0
 6342              	.LVL533:
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6343              		.loc 1 447 0
 6344 0000 0028     		cmp	r0, #0
 6345 0002 66D0     		beq	.L582
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6346              		.loc 1 445 0
 6347 0004 38B5     		push	{r3, r4, r5, lr}
 6348              	.LCFI51:
 6349              		.cfi_def_cfa_offset 16
 6350              		.cfi_offset 3, -16
 6351              		.cfi_offset 4, -12
 6352              		.cfi_offset 5, -8
 6353              		.cfi_offset 14, -4
 6354 0006 0446     		mov	r4, r0
 6355 0008 0D46     		mov	r5, r1
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6356              		.loc 1 453 0
 6357 000a 0368     		ldr	r3, [r0]
 6358 000c 344A     		ldr	r2, .L592
 6359 000e 9342     		cmp	r3, r2
 6360 0010 14D0     		beq	.L578
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6361              		.loc 1 453 0 is_stmt 0 discriminator 1
 6362 0012 A2F57442 		sub	r2, r2, #62464
 6363 0016 9342     		cmp	r3, r2
 6364 0018 10D0     		beq	.L578
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6365              		.loc 1 453 0 discriminator 2
 6366 001a 02F58062 		add	r2, r2, #1024
 6367 001e 9342     		cmp	r3, r2
 6368 0020 0CD0     		beq	.L578
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6369              		.loc 1 453 0 discriminator 3
 6370 0022 02F58062 		add	r2, r2, #1024
 6371 0026 9342     		cmp	r3, r2
 6372 0028 08D0     		beq	.L578
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6373              		.loc 1 453 0 discriminator 4
 6374 002a 02F58062 		add	r2, r2, #1024
 6375 002e 9342     		cmp	r3, r2
 6376 0030 04D0     		beq	.L578
 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 6377              		.loc 1 453 0 discriminator 5
 6378 0032 40F2C511 		movw	r1, #453
ARM GAS  /tmp/ccnYk2xI.s 			page 201


 6379              	.LVL534:
 6380 0036 2B48     		ldr	r0, .L592+4
 6381              	.LVL535:
 6382 0038 FFF7FEFF 		bl	assert_failed
 6383              	.LVL536:
 6384              	.L578:
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6385              		.loc 1 455 0 is_stmt 1
 6386 003c 0DB1     		cbz	r5, .L579
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6387              		.loc 1 455 0 is_stmt 0 discriminator 1
 6388 003e 202D     		cmp	r5, #32
 6389 0040 37D1     		bne	.L589
 6390              	.L579:
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6391              		.loc 1 458 0 is_stmt 1
 6392 0042 E369     		ldr	r3, [r4, #28]
 6393 0044 B3F5004F 		cmp	r3, #32768
 6394 0048 45D0     		beq	.L583
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6395              		.loc 1 463 0
 6396 004a A368     		ldr	r3, [r4, #8]
 6397 004c 002B     		cmp	r3, #0
 6398 004e 44D1     		bne	.L584
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6399              		.loc 1 468 0
 6400 0050 D4F88030 		ldr	r3, [r4, #128]
 6401 0054 002B     		cmp	r3, #0
 6402 0056 32D0     		beq	.L590
 6403              	.L580:
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6404              		.loc 1 489 0
 6405 0058 2423     		movs	r3, #36
 6406 005a C4F88030 		str	r3, [r4, #128]
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6407              		.loc 1 491 0
 6408 005e 2268     		ldr	r2, [r4]
 6409 0060 1368     		ldr	r3, [r2]
 6410 0062 23F00103 		bic	r3, r3, #1
 6411 0066 1360     		str	r3, [r2]
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6412              		.loc 1 494 0
 6413 0068 2046     		mov	r0, r4
 6414 006a FFF7FEFF 		bl	UART_SetConfig
 6415              	.LVL537:
 6416 006e 0128     		cmp	r0, #1
 6417 0070 34D0     		beq	.L577
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6418              		.loc 1 499 0
 6419 0072 A36A     		ldr	r3, [r4, #40]
 6420 0074 4BBB     		cbnz	r3, .L591
 6421              	.L581:
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 6422              		.loc 1 507 0
 6423 0076 2268     		ldr	r2, [r4]
 6424 0078 5368     		ldr	r3, [r2, #4]
 6425 007a 23F40063 		bic	r3, r3, #2048
ARM GAS  /tmp/ccnYk2xI.s 			page 202


 6426 007e 5360     		str	r3, [r2, #4]
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6427              		.loc 1 508 0
 6428 0080 2268     		ldr	r2, [r4]
 6429 0082 9368     		ldr	r3, [r2, #8]
 6430 0084 23F02A03 		bic	r3, r3, #42
 6431 0088 9360     		str	r3, [r2, #8]
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6432              		.loc 1 511 0
 6433 008a 2268     		ldr	r2, [r4]
 6434 008c 5368     		ldr	r3, [r2, #4]
 6435 008e 43F48043 		orr	r3, r3, #16384
 6436 0092 5360     		str	r3, [r2, #4]
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6437              		.loc 1 514 0
 6438 0094 2368     		ldr	r3, [r4]
 6439 0096 5968     		ldr	r1, [r3, #4]
 6440 0098 21F02001 		bic	r1, r1, #32
 6441 009c 0D43     		orrs	r5, r5, r1
 6442              	.LVL538:
 6443 009e 5D60     		str	r5, [r3, #4]
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6444              		.loc 1 516 0
 6445 00a0 2268     		ldr	r2, [r4]
 6446 00a2 1368     		ldr	r3, [r2]
 6447 00a4 43F00103 		orr	r3, r3, #1
 6448 00a8 1360     		str	r3, [r2]
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6449              		.loc 1 519 0
 6450 00aa 2046     		mov	r0, r4
 6451 00ac FFF7FEFF 		bl	UART_CheckIdleState
 6452              	.LVL539:
 6453 00b0 14E0     		b	.L577
 6454              	.LVL540:
 6455              	.L589:
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6456              		.loc 1 455 0 discriminator 2
 6457 00b2 40F2C711 		movw	r1, #455
 6458 00b6 0B48     		ldr	r0, .L592+4
 6459 00b8 FFF7FEFF 		bl	assert_failed
 6460              	.LVL541:
 6461 00bc C1E7     		b	.L579
 6462              	.L590:
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6463              		.loc 1 471 0
 6464 00be 84F87C30 		strb	r3, [r4, #124]
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6465              		.loc 1 485 0
 6466 00c2 2046     		mov	r0, r4
 6467 00c4 FFF7FEFF 		bl	HAL_UART_MspInit
 6468              	.LVL542:
 6469 00c8 C6E7     		b	.L580
 6470              	.L591:
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6471              		.loc 1 501 0
 6472 00ca 2046     		mov	r0, r4
 6473 00cc FFF7FEFF 		bl	UART_AdvFeatureConfig
ARM GAS  /tmp/ccnYk2xI.s 			page 203


 6474              	.LVL543:
 6475 00d0 D1E7     		b	.L581
 6476              	.LVL544:
 6477              	.L582:
 6478              	.LCFI52:
 6479              		.cfi_def_cfa_offset 0
 6480              		.cfi_restore 3
 6481              		.cfi_restore 4
 6482              		.cfi_restore 5
 6483              		.cfi_restore 14
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6484              		.loc 1 449 0
 6485 00d2 0120     		movs	r0, #1
 6486              	.LVL545:
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6487              		.loc 1 520 0
 6488 00d4 7047     		bx	lr
 6489              	.LVL546:
 6490              	.L583:
 6491              	.LCFI53:
 6492              		.cfi_def_cfa_offset 16
 6493              		.cfi_offset 3, -16
 6494              		.cfi_offset 4, -12
 6495              		.cfi_offset 5, -8
 6496              		.cfi_offset 14, -4
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6497              		.loc 1 460 0
 6498 00d6 0120     		movs	r0, #1
 6499 00d8 00E0     		b	.L577
 6500              	.L584:
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6501              		.loc 1 465 0
 6502 00da 0120     		movs	r0, #1
 6503              	.LVL547:
 6504              	.L577:
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6505              		.loc 1 520 0
 6506 00dc 38BD     		pop	{r3, r4, r5, pc}
 6507              	.LVL548:
 6508              	.L593:
 6509 00de 00BF     		.align	2
 6510              	.L592:
 6511 00e0 00380140 		.word	1073821696
 6512 00e4 00000000 		.word	.LC0
 6513              		.cfi_endproc
 6514              	.LFE134:
 6516              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 6517              		.align	1
 6518              		.global	HAL_MultiProcessor_Init
 6519              		.syntax unified
 6520              		.thumb
 6521              		.thumb_func
 6522              		.fpu fpv4-sp-d16
 6524              	HAL_MultiProcessor_Init:
 6525              	.LFB135:
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6526              		.loc 1 542 0
ARM GAS  /tmp/ccnYk2xI.s 			page 204


 6527              		.cfi_startproc
 6528              		@ args = 0, pretend = 0, frame = 0
 6529              		@ frame_needed = 0, uses_anonymous_args = 0
 6530              	.LVL549:
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6531              		.loc 1 544 0
 6532 0000 0028     		cmp	r0, #0
 6533 0002 4ED0     		beq	.L600
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   /* Check the UART handle allocation */
 6534              		.loc 1 542 0
 6535 0004 70B5     		push	{r4, r5, r6, lr}
 6536              	.LCFI54:
 6537              		.cfi_def_cfa_offset 16
 6538              		.cfi_offset 4, -16
 6539              		.cfi_offset 5, -12
 6540              		.cfi_offset 6, -8
 6541              		.cfi_offset 14, -4
 6542 0006 0446     		mov	r4, r0
 6543 0008 1546     		mov	r5, r2
 6544 000a 0E46     		mov	r6, r1
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6545              		.loc 1 550 0
 6546 000c 12B1     		cbz	r2, .L596
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6547              		.loc 1 550 0 is_stmt 0 discriminator 1
 6548 000e B2F5006F 		cmp	r2, #2048
 6549 0012 2ED1     		bne	.L605
 6550              	.LVL550:
 6551              	.L596:
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6552              		.loc 1 552 0 is_stmt 1
 6553 0014 D4F88030 		ldr	r3, [r4, #128]
 6554 0018 002B     		cmp	r3, #0
 6555 001a 30D0     		beq	.L606
 6556              	.L597:
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6557              		.loc 1 573 0
 6558 001c 2423     		movs	r3, #36
 6559 001e C4F88030 		str	r3, [r4, #128]
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6560              		.loc 1 575 0
 6561 0022 2268     		ldr	r2, [r4]
 6562 0024 1368     		ldr	r3, [r2]
 6563 0026 23F00103 		bic	r3, r3, #1
 6564 002a 1360     		str	r3, [r2]
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6565              		.loc 1 578 0
 6566 002c 2046     		mov	r0, r4
 6567 002e FFF7FEFF 		bl	UART_SetConfig
 6568              	.LVL551:
 6569 0032 0128     		cmp	r0, #1
 6570 0034 1CD0     		beq	.L595
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6571              		.loc 1 583 0
 6572 0036 A36A     		ldr	r3, [r4, #40]
 6573 0038 3BBB     		cbnz	r3, .L607
 6574              	.L598:
ARM GAS  /tmp/ccnYk2xI.s 			page 205


 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 6575              		.loc 1 591 0
 6576 003a 2268     		ldr	r2, [r4]
 6577 003c 5368     		ldr	r3, [r2, #4]
 6578 003e 23F49043 		bic	r3, r3, #18432
 6579 0042 5360     		str	r3, [r2, #4]
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6580              		.loc 1 592 0
 6581 0044 2268     		ldr	r2, [r4]
 6582 0046 9368     		ldr	r3, [r2, #8]
 6583 0048 23F02A03 		bic	r3, r3, #42
 6584 004c 9360     		str	r3, [r2, #8]
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   {
 6585              		.loc 1 594 0
 6586 004e B5F5006F 		cmp	r5, #2048
 6587 0052 1ED0     		beq	.L608
 6588              	.L599:
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6589              		.loc 1 601 0
 6590 0054 2368     		ldr	r3, [r4]
 6591 0056 1A68     		ldr	r2, [r3]
 6592 0058 22F40062 		bic	r2, r2, #2048
 6593 005c 1543     		orrs	r5, r5, r2
 6594              	.LVL552:
 6595 005e 1D60     		str	r5, [r3]
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6596              		.loc 1 603 0
 6597 0060 2268     		ldr	r2, [r4]
 6598 0062 1368     		ldr	r3, [r2]
 6599 0064 43F00103 		orr	r3, r3, #1
 6600 0068 1360     		str	r3, [r2]
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6601              		.loc 1 606 0
 6602 006a 2046     		mov	r0, r4
 6603 006c FFF7FEFF 		bl	UART_CheckIdleState
 6604              	.LVL553:
 6605              	.L595:
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6606              		.loc 1 607 0
 6607 0070 70BD     		pop	{r4, r5, r6, pc}
 6608              	.LVL554:
 6609              	.L605:
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6610              		.loc 1 550 0 discriminator 2
 6611 0072 40F22621 		movw	r1, #550
 6612              	.LVL555:
 6613 0076 0C48     		ldr	r0, .L609
 6614              	.LVL556:
 6615 0078 FFF7FEFF 		bl	assert_failed
 6616              	.LVL557:
 6617 007c CAE7     		b	.L596
 6618              	.L606:
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6619              		.loc 1 555 0
 6620 007e 84F87C30 		strb	r3, [r4, #124]
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 6621              		.loc 1 569 0
ARM GAS  /tmp/ccnYk2xI.s 			page 206


 6622 0082 2046     		mov	r0, r4
 6623 0084 FFF7FEFF 		bl	HAL_UART_MspInit
 6624              	.LVL558:
 6625 0088 C8E7     		b	.L597
 6626              	.L607:
 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6627              		.loc 1 585 0
 6628 008a 2046     		mov	r0, r4
 6629 008c FFF7FEFF 		bl	UART_AdvFeatureConfig
 6630              	.LVL559:
 6631 0090 D3E7     		b	.L598
 6632              	.L608:
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6633              		.loc 1 597 0
 6634 0092 2368     		ldr	r3, [r4]
 6635 0094 5968     		ldr	r1, [r3, #4]
 6636 0096 21F07F41 		bic	r1, r1, #-16777216
 6637 009a 41EA0666 		orr	r6, r1, r6, lsl #24
 6638 009e 5E60     		str	r6, [r3, #4]
 6639 00a0 D8E7     		b	.L599
 6640              	.LVL560:
 6641              	.L600:
 6642              	.LCFI55:
 6643              		.cfi_def_cfa_offset 0
 6644              		.cfi_restore 4
 6645              		.cfi_restore 5
 6646              		.cfi_restore 6
 6647              		.cfi_restore 14
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   }
 6648              		.loc 1 546 0
 6649 00a2 0120     		movs	r0, #1
 6650              	.LVL561:
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6651              		.loc 1 607 0
 6652 00a4 7047     		bx	lr
 6653              	.L610:
 6654 00a6 00BF     		.align	2
 6655              	.L609:
 6656 00a8 00000000 		.word	.LC0
 6657              		.cfi_endproc
 6658              	.LFE135:
 6660              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 6661              		.align	1
 6662              		.global	HAL_MultiProcessor_EnableMuteMode
 6663              		.syntax unified
 6664              		.thumb
 6665              		.thumb_func
 6666              		.fpu fpv4-sp-d16
 6668              	HAL_MultiProcessor_EnableMuteMode:
 6669              	.LFB166:
2663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6670              		.loc 1 2663 0
 6671              		.cfi_startproc
 6672              		@ args = 0, pretend = 0, frame = 0
 6673              		@ frame_needed = 0, uses_anonymous_args = 0
 6674              	.LVL562:
 6675 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccnYk2xI.s 			page 207


 6676              	.LCFI56:
 6677              		.cfi_def_cfa_offset 8
 6678              		.cfi_offset 3, -8
 6679              		.cfi_offset 14, -4
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6680              		.loc 1 2664 0
 6681 0002 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 6682 0006 012B     		cmp	r3, #1
 6683 0008 10D0     		beq	.L613
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6684              		.loc 1 2664 0 is_stmt 0 discriminator 2
 6685 000a 0123     		movs	r3, #1
 6686 000c 80F87C30 		strb	r3, [r0, #124]
2666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6687              		.loc 1 2666 0 is_stmt 1 discriminator 2
 6688 0010 2423     		movs	r3, #36
 6689 0012 C0F88030 		str	r3, [r0, #128]
2669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6690              		.loc 1 2669 0 discriminator 2
 6691 0016 0268     		ldr	r2, [r0]
 6692 0018 1368     		ldr	r3, [r2]
 6693 001a 43F40053 		orr	r3, r3, #8192
 6694 001e 1360     		str	r3, [r2]
2671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6695              		.loc 1 2671 0 discriminator 2
 6696 0020 2023     		movs	r3, #32
 6697 0022 C0F88030 		str	r3, [r0, #128]
2673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6698              		.loc 1 2673 0 discriminator 2
 6699 0026 FFF7FEFF 		bl	UART_CheckIdleState
 6700              	.LVL563:
 6701              	.L612:
2674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6702              		.loc 1 2674 0
 6703 002a 08BD     		pop	{r3, pc}
 6704              	.LVL564:
 6705              	.L613:
2664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6706              		.loc 1 2664 0
 6707 002c 0220     		movs	r0, #2
 6708              	.LVL565:
 6709 002e FCE7     		b	.L612
 6710              		.cfi_endproc
 6711              	.LFE166:
 6713              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 6714              		.align	1
 6715              		.global	HAL_MultiProcessor_DisableMuteMode
 6716              		.syntax unified
 6717              		.thumb
 6718              		.thumb_func
 6719              		.fpu fpv4-sp-d16
 6721              	HAL_MultiProcessor_DisableMuteMode:
 6722              	.LFB167:
2683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6723              		.loc 1 2683 0
 6724              		.cfi_startproc
 6725              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccnYk2xI.s 			page 208


 6726              		@ frame_needed = 0, uses_anonymous_args = 0
 6727              	.LVL566:
 6728 0000 08B5     		push	{r3, lr}
 6729              	.LCFI57:
 6730              		.cfi_def_cfa_offset 8
 6731              		.cfi_offset 3, -8
 6732              		.cfi_offset 14, -4
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6733              		.loc 1 2684 0
 6734 0002 90F87C30 		ldrb	r3, [r0, #124]	@ zero_extendqisi2
 6735 0006 012B     		cmp	r3, #1
 6736 0008 10D0     		beq	.L617
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6737              		.loc 1 2684 0 is_stmt 0 discriminator 2
 6738 000a 0123     		movs	r3, #1
 6739 000c 80F87C30 		strb	r3, [r0, #124]
2686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6740              		.loc 1 2686 0 is_stmt 1 discriminator 2
 6741 0010 2423     		movs	r3, #36
 6742 0012 C0F88030 		str	r3, [r0, #128]
2689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6743              		.loc 1 2689 0 discriminator 2
 6744 0016 0268     		ldr	r2, [r0]
 6745 0018 1368     		ldr	r3, [r2]
 6746 001a 23F40053 		bic	r3, r3, #8192
 6747 001e 1360     		str	r3, [r2]
2691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6748              		.loc 1 2691 0 discriminator 2
 6749 0020 2023     		movs	r3, #32
 6750 0022 C0F88030 		str	r3, [r0, #128]
2693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** }
 6751              		.loc 1 2693 0 discriminator 2
 6752 0026 FFF7FEFF 		bl	UART_CheckIdleState
 6753              	.LVL567:
 6754              	.L616:
2694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6755              		.loc 1 2694 0
 6756 002a 08BD     		pop	{r3, pc}
 6757              	.LVL568:
 6758              	.L617:
2684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart.c **** 
 6759              		.loc 1 2684 0
 6760 002c 0220     		movs	r0, #2
 6761              	.LVL569:
 6762 002e FCE7     		b	.L616
 6763              		.cfi_endproc
 6764              	.LFE167:
 6766              		.global	UARTPrescTable
 6767              		.section	.rodata.HAL_UART_DeInit.str1.4,"aMS",%progbits,1
 6768              		.align	2
 6769              	.LC0:
 6770 0000 44726976 		.ascii	"Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_uart"
 6770      6572732F 
 6770      53544D33 
 6770      32473478 
 6770      785F4841 
 6771 0033 2E6300   		.ascii	".c\000"
ARM GAS  /tmp/ccnYk2xI.s 			page 209


 6772              		.section	.rodata.UARTPrescTable,"a",%progbits
 6773              		.align	2
 6774              		.set	.LANCHOR0,. + 0
 6777              	UARTPrescTable:
 6778 0000 0100     		.short	1
 6779 0002 0200     		.short	2
 6780 0004 0400     		.short	4
 6781 0006 0600     		.short	6
 6782 0008 0800     		.short	8
 6783 000a 0A00     		.short	10
 6784 000c 0C00     		.short	12
 6785 000e 1000     		.short	16
 6786 0010 2000     		.short	32
 6787 0012 4000     		.short	64
 6788 0014 8000     		.short	128
 6789 0016 0001     		.short	256
 6790              		.text
 6791              	.Letext0:
 6792              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 6793              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 6794              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 6795              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 6796              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 6797              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 6798              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 6799              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 6800              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 6801              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 6802              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 6803              		.file 13 "Core/Inc/stm32g4xx_hal_conf.h"
 6804              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 6805              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart_ex.h"
ARM GAS  /tmp/ccnYk2xI.s 			page 210


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g4xx_hal_uart.c
     /tmp/ccnYk2xI.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccnYk2xI.s:24     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccnYk2xI.s:52     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccnYk2xI.s:58     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccnYk2xI.s:89     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccnYk2xI.s:95     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccnYk2xI.s:147    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccnYk2xI.s:153    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccnYk2xI.s:210    .text.UART_TxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/ccnYk2xI.s:216    .text.UART_TxISR_8BIT_FIFOEN:0000000000000000 UART_TxISR_8BIT_FIFOEN
     /tmp/ccnYk2xI.s:289    .text.UART_TxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/ccnYk2xI.s:295    .text.UART_TxISR_16BIT_FIFOEN:0000000000000000 UART_TxISR_16BIT_FIFOEN
     /tmp/ccnYk2xI.s:373    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccnYk2xI.s:380    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccnYk2xI.s:394    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccnYk2xI.s:401    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccnYk2xI.s:415    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccnYk2xI.s:422    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccnYk2xI.s:523    .text.HAL_UART_DeInit:0000000000000080 $d
     /tmp/ccnYk2xI.s:529    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccnYk2xI.s:536    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccnYk2xI.s:674    .text.HAL_UART_Transmit_IT:00000000000000a8 $d
     /tmp/ccnYk2xI.s:682    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccnYk2xI.s:689    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccnYk2xI.s:895    .text.HAL_UART_Receive_IT:0000000000000118 $d
     /tmp/ccnYk2xI.s:2013   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccnYk2xI.s:2186   .text.UART_RxISR_8BIT_FIFOEN:0000000000000000 UART_RxISR_8BIT_FIFOEN
     /tmp/ccnYk2xI.s:2319   .text.UART_RxISR_16BIT_FIFOEN:0000000000000000 UART_RxISR_16BIT_FIFOEN
     /tmp/ccnYk2xI.s:2099   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccnYk2xI.s:903    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccnYk2xI.s:910    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccnYk2xI.s:1039   .text.HAL_UART_Transmit_DMA:00000000000000a0 $d
     /tmp/ccnYk2xI.s:1846   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccnYk2xI.s:1962   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccnYk2xI.s:2586   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccnYk2xI.s:1046   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccnYk2xI.s:1053   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccnYk2xI.s:1186   .text.HAL_UART_Receive_DMA:00000000000000ac $d
     /tmp/ccnYk2xI.s:2455   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccnYk2xI.s:2535   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccnYk2xI.s:1193   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccnYk2xI.s:1200   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccnYk2xI.s:1292   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccnYk2xI.s:1299   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccnYk2xI.s:1370   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccnYk2xI.s:1377   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccnYk2xI.s:1495   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccnYk2xI.s:1502   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccnYk2xI.s:1637   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccnYk2xI.s:1644   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccnYk2xI.s:1730   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccnYk2xI.s:1737   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccnYk2xI.s:1819   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:1826   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccnYk2xI.s:1840   .text.UART_DMATransmitCplt:0000000000000000 $t
ARM GAS  /tmp/ccnYk2xI.s 			page 211


     /tmp/ccnYk2xI.s:1897   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccnYk2xI.s:1903   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccnYk2xI.s:1935   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:1942   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccnYk2xI.s:1956   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccnYk2xI.s:1986   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:1993   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccnYk2xI.s:2007   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccnYk2xI.s:2093   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/ccnYk2xI.s:2180   .text.UART_RxISR_8BIT_FIFOEN:0000000000000000 $t
     /tmp/ccnYk2xI.s:2308   .text.UART_RxISR_8BIT_FIFOEN:00000000000000a8 $d
     /tmp/ccnYk2xI.s:2313   .text.UART_RxISR_16BIT_FIFOEN:0000000000000000 $t
     /tmp/ccnYk2xI.s:2444   .text.UART_RxISR_16BIT_FIFOEN:00000000000000a4 $d
     /tmp/ccnYk2xI.s:2449   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccnYk2xI.s:2508   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:2515   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccnYk2xI.s:2529   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccnYk2xI.s:2559   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:2566   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccnYk2xI.s:2580   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccnYk2xI.s:2662   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccnYk2xI.s:2669   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccnYk2xI.s:2997   .text.HAL_UART_IRQHandler:00000000000001d8 $d
     /tmp/ccnYk2xI.s:3010   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccnYk2xI.s:3004   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccnYk2xI.s:3039   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:3046   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccnYk2xI.s:3060   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccnYk2xI.s:3067   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccnYk2xI.s:3245   .text.HAL_UART_Abort_IT:00000000000000f4 $d
     /tmp/ccnYk2xI.s:3323   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccnYk2xI.s:3257   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccnYk2xI.s:3251   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:3317   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:3388   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:3395   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccnYk2xI.s:3409   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccnYk2xI.s:3416   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccnYk2xI.s:3514   .text.HAL_UART_AbortTransmit_IT:0000000000000080 $d
     /tmp/ccnYk2xI.s:3525   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccnYk2xI.s:3519   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:3568   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:3575   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccnYk2xI.s:3589   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccnYk2xI.s:3596   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccnYk2xI.s:3693   .text.HAL_UART_AbortReceive_IT:0000000000000084 $d
     /tmp/ccnYk2xI.s:3704   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccnYk2xI.s:3698   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccnYk2xI.s:3743   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
     /tmp/ccnYk2xI.s:3750   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
     /tmp/ccnYk2xI.s:3799   .text.HAL_UART_ReceiverTimeout_Config:0000000000000030 $d
     /tmp/ccnYk2xI.s:3805   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
     /tmp/ccnYk2xI.s:3812   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
     /tmp/ccnYk2xI.s:3875   .text.HAL_UART_EnableReceiverTimeout:0000000000000048 $d
     /tmp/ccnYk2xI.s:3880   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
     /tmp/ccnYk2xI.s:3887   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
     /tmp/ccnYk2xI.s:3950   .text.HAL_UART_DisableReceiverTimeout:0000000000000048 $d
ARM GAS  /tmp/ccnYk2xI.s 			page 212


     /tmp/ccnYk2xI.s:3955   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccnYk2xI.s:3962   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccnYk2xI.s:3981   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccnYk2xI.s:3988   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccnYk2xI.s:4037   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccnYk2xI.s:4044   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccnYk2xI.s:4093   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccnYk2xI.s:4100   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccnYk2xI.s:4173   .text.HAL_LIN_SendBreak:0000000000000068 $d
     /tmp/ccnYk2xI.s:4179   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccnYk2xI.s:4186   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccnYk2xI.s:4208   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccnYk2xI.s:4215   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccnYk2xI.s:4233   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccnYk2xI.s:4240   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccnYk2xI.s:4447   .text.UART_SetConfig:0000000000000144 $d
     /tmp/ccnYk2xI.s:4457   .text.UART_SetConfig:0000000000000156 $t
     /tmp/ccnYk2xI.s:4538   .text.UART_SetConfig:00000000000001e6 $d
     /tmp/ccnYk2xI.s:4542   .text.UART_SetConfig:00000000000001ea $t
     /tmp/ccnYk2xI.s:4572   .text.UART_SetConfig:000000000000020e $d
     /tmp/ccnYk2xI.s:4676   .text.UART_SetConfig:0000000000000284 $d
     /tmp/ccnYk2xI.s:4688   .text.UART_SetConfig:00000000000002a8 $t
     /tmp/ccnYk2xI.s:4780   .text.UART_SetConfig:000000000000032e $d
     /tmp/ccnYk2xI.s:4869   .text.UART_SetConfig:00000000000003b6 $d
     /tmp/ccnYk2xI.s:5058   .text.UART_SetConfig:0000000000000498 $d
     /tmp/ccnYk2xI.s:5065   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccnYk2xI.s:5072   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccnYk2xI.s:5373   .text.UART_AdvFeatureConfig:00000000000001ec $d
     /tmp/ccnYk2xI.s:5379   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccnYk2xI.s:5386   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccnYk2xI.s:5496   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccnYk2xI.s:5503   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccnYk2xI.s:5683   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccnYk2xI.s:5690   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccnYk2xI.s:5916   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccnYk2xI.s:5923   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccnYk2xI.s:6015   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccnYk2xI.s:6022   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccnYk2xI.s:6183   .text.HAL_UART_Init:00000000000000ec $d
     /tmp/ccnYk2xI.s:6189   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccnYk2xI.s:6196   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccnYk2xI.s:6323   .text.HAL_HalfDuplex_Init:00000000000000b0 $d
     /tmp/ccnYk2xI.s:6329   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccnYk2xI.s:6336   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccnYk2xI.s:6511   .text.HAL_LIN_Init:00000000000000e0 $d
     /tmp/ccnYk2xI.s:6517   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccnYk2xI.s:6524   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccnYk2xI.s:6656   .text.HAL_MultiProcessor_Init:00000000000000a8 $d
     /tmp/ccnYk2xI.s:6661   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccnYk2xI.s:6668   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccnYk2xI.s:6714   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccnYk2xI.s:6721   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccnYk2xI.s:6777   .rodata.UARTPrescTable:0000000000000000 UARTPrescTable
     /tmp/ccnYk2xI.s:6768   .rodata.HAL_UART_DeInit.str1.4:0000000000000000 $d
     /tmp/ccnYk2xI.s:6773   .rodata.UARTPrescTable:0000000000000000 $d
     /tmp/ccnYk2xI.s:4585   .text.UART_SetConfig:000000000000021b $d
     /tmp/ccnYk2xI.s:4585   .text.UART_SetConfig:000000000000021c $t
ARM GAS  /tmp/ccnYk2xI.s 			page 213


     /tmp/ccnYk2xI.s:4789   .text.UART_SetConfig:0000000000000337 $d
     /tmp/ccnYk2xI.s:4789   .text.UART_SetConfig:0000000000000338 $t
     /tmp/ccnYk2xI.s:4878   .text.UART_SetConfig:00000000000003bf $d
     /tmp/ccnYk2xI.s:4878   .text.UART_SetConfig:00000000000003c0 $t

UNDEFINED SYMBOLS
assert_failed
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_UARTEx_RxFifoFullCallback
HAL_UARTEx_TxFifoEmptyCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
